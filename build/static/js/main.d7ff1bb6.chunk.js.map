{"version":3,"sources":["hooks/index.js","reducers/loginReducer.js","reducers/usersReducer.js","reducers/breweriesReducer.js","reducers/beersReducer.js","reducers/ratingsReducer.js","reducers/bottlesReducer.js","reducers/notificationReducer.js","components/Login.js","components/Bottle.js","components/Rating.js","components/Ratings.js","components/Home.js","reducers/filterReducer.js","components/ListSuggestion.js","components/SearchForm.js","components/Navigation.js","components/Register.js","components/BottleDetails.js","components/Bottles.js","components/StashDetails.js","components/Stash.js","components/Footer.js","reducers/picturesReducer.js","components/AddBottle.js","components/Notification.js","components/Rate.js","components/Profile.js","components/SearchResults.js","components/Brewery.js","components/Beer.js","components/About.js","components/ScrollToTop.js","App.js","store.js","index.js"],"names":["token","setToken","newToken","concat","useResource","baseUrl","getAll","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","abrupt","data","stop","apply","this","arguments","getOne","_ref2","_callee2","identifier","_context2","_x","create","_ref3","_callee3","resource","config","_context3","headers","Authorization","post","_x2","login","_ref4","_callee4","credentials","_context4","_x3","createImage","_ref5","_callee5","_context5","content-type","_x4","update","_ref6","_callee6","id","_context6","put","_x5","_x6","remove","_ref7","_callee7","_context7","delete","_x7","useTextField","type","minLength","maxLength","required","length","undefined","_useState","useState","_useState2","slicedToArray","value","setValue","_useState3","_useState4","validationMessage","setValidationMessage","onChange","event","target","onInvalid","useNumberField","min","max","step","_useState5","_useState6","_useState7","_useState8","loginService","logoutUser","dispatch","window","localStorage","removeItem","loginReducer","state","action","user","usersService","updateUserToState","username","usersReducer","users","map","u","filter","updatedUser","toConsumableArray","newUser","breweriesService","getOneBrewery","breweryName","brewery","addBrewery","newBrewery","breweriesReducer","breweries","beersService","getOneBeer","name","abv","beer","addBeer","newBeer","beersReducer","beers","ratingsService","ratingsReducer","ratings","rating","bottlesService","bottlesReducer","bottles","newBottle","b","updatedBottle","setNotification","message","notification","setTimeout","notificationReducer","mapDispatchToProps","loginUser","setItem","JSON","stringify","connect","withRouter","props","_useTextField","_useTextField3","password","handleLogin","preventDefault","history","push","t0","react_default","createElement","Fragment","Row","Jumbotron","as","Col","className","Form","onSubmit","Group","Label","Control","assign","placeholder","Button","variant","block","react_router_dom","to","Bottle","bottle","Card","Header","style","backgroundColor","color","Title","Body","picture","Img","src","alt","Footer","moment","added","fromNow","Rating","Table","responsive","aroma","taste","mouthfeel","appearance","overall","description","Ratings","visibleRatings","setVisibleRatings","ratingsToShow","slice","r","components_Rating","key","onClick","Home","visibleBottles","setVisibleBottles","byAdded","bottlesToShow","hidden","sort","marginTop","components_Bottle","components_Ratings","setFilter","filterReducer","ListSuggestion","suggestionsToShow","Set","suggestions","s","handleSearch","inline","list","components_ListSuggestion","Navbar","collapseOnSelect","expand","bg","Toggle","aria-controls","Collapse","Nav","Link","href","Item","width","height","borderRadius","components_SearchForm","e","registerUser","validated","setValidated","_useTextField2","usernameErrors","_useTextField4","passwordErrors","_useTextField5","_useTextField6","nameErrors","_useTextField7","_useTextField8","email","emailErrors","_useTextField9","_useTextField10","city","cityErrors","_useTextField11","_useTextField12","country","countryErrors","setHidden","handleRegister","checkValidity","maxWidth","margin","noValidate","Feedback","Check","checked","label","removeBottle","updateBottle","handleDrink","updateableBottle","objectSpread","count","Modal","centered","show","visible","onHide","toggleVisibility","closeButton","price","volume","bottled","format","expiration","Date","diff","userToView","pathname","Bottles","setVisible","setBottle","stash","hover","handleShowDetails","isBefore","components_BottleDetails","StashDetails","bottlesCount","reduce","sum","stashCost","stashVolume","ListGroup","Stash","stashVisible","setStashVisible","components_StashDetails","components_Bottles","picturesService","addPicture","newPicture","FormData","append","addBottle","isLoading","setIsLoading","setPicture","breweryErrors","_useNumberField","_useNumberField2","abvErrors","_useNumberField3","_useNumberField4","priceErrors","_useNumberField5","_useNumberField6","countErrors","_useNumberField7","_useNumberField8","volumeErrors","_useNumberField9","_useNumberField10","bottledErrors","_useNumberField11","_useNumberField12","expirationErrors","handleAddBottle","breweryId","beerId","pictureId","t1","accept","files","Text","disabled","Alert","addRating","beerName","beerErrors","setBeerName","setBreweryName","descriptionErrors","alcohol","alcoholErrors","setAlcohol","setBottled","_useNumberField13","useEffect","location","handleRate","newRating","ageofbeer","rows","removeUser","updateUser","setName","setEmail","setCity","setCountry","handleProfileUpdate","updateableUser","handleDelete","confirm","byBeerName","toLowerCase","includes","byBreweryName","beersToShow","breweriesToShow","Brewery","textAlign","Beer","About","children","scrollTo","setUserToState","getAllUsers","getAllBreweries","getAllBeers","getAllRatings","getAllBottles","loggedUser","getItem","parse","find","components_ScrollToTop","components_Navigation","components_Notification","react_router","exact","path","render","components_Home","components_Login","components_Register","components_About","components_SearchResults","match","components_Brewery","params","components_Beer","components_AddBottle","components_Rate","components_Profile","components_Stash","components_Footer","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.d7ff1bb6.chunk.js","sourcesContent":["import { useState } from 'react'\nimport axios from 'axios'\n\nlet token = null\n\nexport const setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nexport const useResource = (baseUrl) => {\n\n  const getAll = async () => {\n    const res = await axios.get(baseUrl)\n    return res.data\n  }\n\n  const getOne = async identifier => {\n    const res = await axios.get(`${baseUrl}/${identifier}`)\n    return res.data\n  }\n\n  const create = async (resource) => {\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    }\n    const res = await axios.post(baseUrl, resource, config)\n    return res.data\n  }\n\n  const login = async (credentials) => {\n    const res = await axios.post(baseUrl, credentials)\n    return res.data\n  }\n\n  const createImage = async (resource) => {\n    const config = {\n      headers: {\n        Authorization: token,\n        'content-type': 'multipart/form-data'\n      }\n    }\n    const res = await axios.post(baseUrl, resource, config)\n    return res.data\n  }\n\n  const update = async (id, resource) => {\n    const config = {\n      headers: { Authorization: token }\n    }\n    const res = await axios.put(`${baseUrl}/${id}`, resource, config)\n    return res.data\n  }\n\n  const remove = async id => {\n    const config = {\n      headers: { Authorization: token }\n    }\n    const res = await axios.delete(`${baseUrl}/${id}`, config)\n    return res.data\n  }\n\n  return  {\n    create, createImage, getAll, getOne, update, remove, login\n  }\n}\n\nexport const useTextField = (type, minLength, maxLength, required = false) => {\n  const [value, setValue] = useState('')\n  const [validationMessage, setValidationMessage] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  const onInvalid = (event) => {\n    setValidationMessage(event.target.validationMessage)\n  }\n\n  const setDefaultValue = (value) => {\n    setValue(value)\n  }\n\n  return [\n    {\n      type, minLength, maxLength, required, value, onChange, onInvalid\n    },\n    validationMessage,\n    setDefaultValue\n  ]\n}\n\nexport const useNumberField = (type, min, max, step = 1, required = false) => {\n  const [value, setValue] = useState('')\n  const [validationMessage, setValidationMessage] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  const onInvalid = (event) => {\n    setValidationMessage(event.target.validationMessage)\n  }\n\n  const setDefaultValue = (value) => {\n    setValue(value)\n  }\n\n  return [\n    {\n      type, min, max, step, required, value, onChange, onInvalid\n    },\n    validationMessage,\n    setDefaultValue\n  ]\n}","import { useResource, setToken } from '../hooks/'\n\nconst loginService = useResource('/api/login')\n\nconst initialState = null\n\nconst loginReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return action.user\n    case 'LOGOUT':\n      return null\n    default:\n      return state\n  }\n}\n\nexport const loginUser = (credentials) => {\n  return async dispatch => {\n    const user = await loginService.login(credentials)\n\n    window.localStorage.setItem('loggedBottlestashUser', JSON.stringify(user))\n    setToken(user.token)\n\n    dispatch({\n      type: 'LOGIN',\n      user\n    })\n  }\n}\n\nexport const logoutUser = () => {\n  return async dispatch => {\n    window.localStorage.removeItem('loggedBottlestashUser')\n    setToken(null)\n\n    dispatch({\n      type: 'LOGOUT'\n    })\n  }\n}\n\nexport const setUserToState = user => {\n  return async dispatch => {\n    setToken(user.token)\n\n    dispatch({\n      type: 'LOGIN',\n      user\n    })\n  }\n}\n\nexport default loginReducer","import { useResource } from '../hooks'\n\nconst usersService = useResource('/api/users')\n\nconst usersReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'GET_USERS':\n      return action.users\n    case 'UPDATE_USER_TO_STATE':\n      return state.map(u => u.id !== action.user.id ? u : action.user)\n    case 'REMOVE_USER':\n      return state.filter(u => u.id !== action.id)\n    case 'UPDATE_USER':\n      return state.map(u => u.id === action.updatedUser.id ? action.updatedUser : u)\n    case 'REGISTER_USER':\n      return [...state, action.newUser ]\n    default:\n      return state\n  }\n}\n\nexport const getAllUsers = () => {\n  return async dispatch => {\n    const users = await usersService.getAll()\n\n    dispatch({\n      type: 'GET_USERS',\n      users\n    })\n  }\n}\n\n// poista tämä kun AddBottle ja BottleDetails viewissä ei ole enää riippuvuuutta\nexport const updateUserToState = username => {\n  return async dispatch => {\n    const user = await usersService.getOne(username)\n\n    dispatch({\n      type: 'UPDATE_USER_TO_STATE',\n      user\n    })\n\n    return user\n  }\n}\n\nexport const registerUser = user => {\n  return async dispatch => {\n    const newUser = await usersService.create(user)\n\n    dispatch({\n      type: 'REGISTER_USER',\n      newUser\n    })\n  }\n}\n\nexport const removeUser = id => {\n  return async dispatch => {\n    await usersService.remove(id)\n\n    dispatch({\n      type: 'REMOVE_USER',\n      id\n    })\n  }\n}\n\nexport const updateUser = (id, user) => {\n  return async dispatch => {\n    const updatedUser = await usersService.update(id, user)\n\n    dispatch({\n      type: 'UPDATE_USER',\n      updatedUser\n    })\n  }\n}\n\nexport default usersReducer","import { useResource } from '../hooks'\n\nconst breweriesService = useResource('/api/breweries')\n\nconst breweriesReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'GET_BREWERIES':\n        return action.breweries\n      case 'ADD_BREWERY':\n        return [...state, action.brewery ]\n      default:\n        return state\n    }\n  }\n  \n  export const getAllBreweries = () => {\n    return async dispatch => {\n      const breweries = await breweriesService.getAll()\n  \n      dispatch({\n        type: 'GET_BREWERIES',\n        breweries\n      })\n    }\n  }\n\n  export const getOneBrewery = breweryName => {\n    return async dispatch => {\n      const brewery = await breweriesService.getOne(breweryName)\n      return brewery\n    }\n  }\n  \n  export const addBrewery = newBrewery => {\n    return async dispatch => {\n      const brewery = await breweriesService.create(newBrewery)\n  \n      dispatch({\n        type: 'ADD_BREWERY',\n        brewery\n      })\n\n      return brewery\n    }\n  }\n\n  export default breweriesReducer","import { useResource } from '../hooks'\n\nconst beersService = useResource('/api/beers')\n\nconst beersReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'GET_BEERS':\n        return action.beers\n      case 'ADD_BEER':\n        return [...state, action.beer ]\n      default:\n        return state\n    }\n  }\n  \n  export const getAllBeers = () => {\n    return async dispatch => {\n      const beers = await beersService.getAll()\n  \n      dispatch({\n        type: 'GET_BEERS',\n        beers\n      })\n    }\n  }\n\n  export const getOneBeer = (brewery, name, abv) => {\n    return async dispatch => {\n      const beer = await beersService.getOne(`${brewery}/${name}/${abv}`)\n      return beer\n    }\n  }\n  \n  export const addBeer = newBeer => {\n    return async dispatch => {\n      const beer = await beersService.create(newBeer)\n  \n      dispatch({\n        type: 'ADD_BEER',\n        beer\n      })\n\n      return beer\n    }\n  }\n\n  export default beersReducer","import { useResource } from '../hooks'\n\nconst ratingsService = useResource('/api/ratings')\n\nconst ratingsReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'GET_RATINGS':\n        return action.ratings\n      case 'ADD_RATING':\n        return [...state, action.rating ]\n      default:\n        return state\n    }\n  }\n  \n  export const getAllRatings = () => {\n    return async dispatch => {\n      const ratings = await ratingsService.getAll()\n\n      dispatch({\n        type: 'GET_RATINGS',\n        ratings\n      })\n    }\n  }\n  \n  export const addRating = ratings => {\n    return async dispatch => {\n      const rating = await ratingsService.create(ratings)\n  \n      dispatch({\n        type: 'ADD_RATING',\n        rating\n      })\n    }\n  }\n\n  export default ratingsReducer","import { useResource } from '../hooks'\n\nconst bottlesService = useResource('/api/bottles')\n\nconst bottlesReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'GET_BOTTLES':\n      return action.bottles\n    case 'ADD_BOTTLE':\n      return [...state, action.newBottle ]\n    case 'REMOVE_BOTTLE':\n      return state.filter(b => b.id !== action.id)\n    case 'UPDATE_BOTTLE':\n      return state.map(b => b.id === action.updatedBottle.id ? action.updatedBottle : b)\n    default:\n      return state\n  }\n}\n\nexport const getAllBottles = () => {\n  return async dispatch => {\n    const bottles = await bottlesService.getAll()\n\n    dispatch({\n      type: 'GET_BOTTLES',\n      bottles\n    })\n  }\n}\n\nexport const addBottle = bottle => {\n  return async dispatch => {\n    const newBottle = await bottlesService.create(bottle)\n\n    dispatch({\n      type: 'ADD_BOTTLE',\n      newBottle\n    })\n  }\n}\n\nexport const removeBottle = id => {\n  return async dispatch => {\n    await bottlesService.remove(id)\n\n    dispatch({\n      type: 'REMOVE_BOTTLE',\n      id\n    })\n  }\n}\n\nexport const updateBottle = (id, bottle) => {\n  return async dispatch => {\n    const updatedBottle = await bottlesService.update(id, bottle)\n\n    dispatch({\n      type: 'UPDATE_BOTTLE',\n      updatedBottle\n    })\n  }\n}\n\nexport default bottlesReducer","\nconst notificationReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_NOTIFICATION':\n      return action.notification\n    case 'CLEAR_NOTIFICATION':\n      return null\n    default:\n      return state\n  }\n}\n\nexport const setNotification = (message, type='success') => {\n  return async dispatch => {\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      notification: { message, type }\n    })\n    setTimeout(() => {\n      dispatch({\n        type: 'CLEAR_NOTIFICATION'\n      })\n    }, 4000)\n  }\n}\n\nexport default notificationReducer","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { Form, Button, Row, Col, Jumbotron } from 'react-bootstrap'\nimport { loginUser } from '../reducers/loginReducer'\nimport { Link } from 'react-router-dom'\nimport { useTextField } from '../hooks'\n\nconst Login = (props) => {\n  const [username] = useTextField('text', 5, 20, true)\n  const [password] = useTextField('password', 5, 20, true)\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    \n    try {\n      await props.loginUser({ username: username.value, password: password.value })\n      props.history.push('/')\n    } catch (exception) {\n      props.setNotification('Login failed', 'error')\n    }\n  }\n\n  return (\n    <>\n      <Row>\n        <Jumbotron as={Col} className='text-center'>\n          <h2>Login to Bottlestash</h2>\n        </Jumbotron>\n      </Row>\n      <Row id='loginForm'>\n        <Col className='formstyle'>\n          <Form onSubmit={handleLogin} >\n            <Form.Group  >\n              <Form.Label>Username</Form.Label>\n              <Form.Control {...username} placeholder='username' />\n            </Form.Group>\n            <Form.Group >\n              <Form.Label>Password</Form.Label>\n              <Form.Control {...password} placeholder='password' />\n            </Form.Group>\n            <Button id='login' variant='success' type='submit' block >Login</Button>\n          </Form>\n          <Row className='mt-2'>\n            <Col className='text-center'>\n              <small>\n                  Not yet a member? \n                <Link to='/register'> Register here</Link>\n              </small>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nconst mapDispatchToProps = {\n  loginUser\n}\n\nexport default connect(null, mapDispatchToProps)(withRouter(Login))","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Card } from 'react-bootstrap'\nimport moment from 'moment'\n\nconst Bottle = ({ bottle }) => {\n  if (!bottle) {\n    return null\n  }\n\n  return (\n    <Card className='p-2 m-2 text-center'>\n      <Card.Header style={{ backgroundColor: 'white', color: 'rgb(52, 58, 64)' }}>\n        <Card.Title><NavLink to={`/beers/${bottle.beer.id}`} >{bottle.beer.name} {bottle.beer.abv} %</NavLink></Card.Title>\n        <small className='text-left'>\n          brewery: <NavLink to={`/breweries/${bottle.beer.brewery.id}`} >{bottle.beer.brewery.name}</NavLink>\n        </small>\n      </Card.Header>\n      <Card.Body>\n        {bottle.picture &&\n          <Card.Img src={`/api/pictures/${bottle.picture}`} className='img-thumbnail' alt='' />\n        }\n      </Card.Body>\n      <Card.Footer>\n        <small className='text-muted'>\n          added by <NavLink to={`/users/${bottle.user.id}/stash`} >{bottle.user.name}</NavLink>, {moment(bottle.added).fromNow()}\n        </small>\n      </Card.Footer>\n    </Card>\n  )\n}\n\nexport default Bottle","import React from 'react'\nimport { Card, Table } from 'react-bootstrap'\nimport { NavLink } from 'react-router-dom'\nimport moment from 'moment'\n\nconst Rating = ({ rating }) => {\n  return (\n    <Card className='text-center p-2 m-2'>\n      <Card.Header style={{ backgroundColor: 'white', color: 'rgb(52, 58, 64)' }}>\n        <Card.Title><NavLink to={`/beers/${rating.beer.id}/`} >{rating.beer.name} {rating.beer.abv} %</NavLink></Card.Title>\n        <small className='text-left'>\n          brewery: <NavLink to={`/breweries/${rating.beer.brewery.id}/`} >{rating.beer.brewery.name}</NavLink>\n        </small>\n      </Card.Header>\n      <Table responsive>\n          <thead>\n            <tr>\n              <th><small className='text-muted'>aroma</small></th>\n              <th><small className='text-muted'>taste</small></th>\n              <th><small className='text-muted'>mouthfeel</small></th>\n              <th><small className='text-muted'>appearance</small></th>\n              <th><small className='text-muted'>overall</small></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td><small className='text-muted'>{rating.aroma}/10</small></td>\n              <td><small className='text-muted'>{rating.taste}/10</small></td>\n              <td><small className='text-muted'>{rating.mouthfeel}/5</small></td>\n              <td><small className='text-muted'>{rating.appearance}/5</small></td>\n              <td><small className='text-muted'>{rating.overall}/20</small></td>\n            </tr>\n          </tbody>\n        </Table>\n      <Card.Body>\n        {rating.picture &&\n          <Card.Img src={`/api/pictures/${rating.picture}`} className='img-thumbnail' alt='' />\n        }\n\n        <blockquote className='blockquote mt-2'>{rating.description}</blockquote>\n        <footer className='blockquote-footer'> <cite>{rating.user.name}</cite></footer>\n      </Card.Body>\n      <Card.Footer>\n        <small className='text-muted'>\n          by <NavLink to={`/users/${rating.user.id}/stash`} >{rating.user.name}</NavLink>, {moment(rating.added).fromNow()}\n        </small>\n      </Card.Footer>\n    </Card>\n  )\n}\n\nexport default Rating","import React, { useState } from 'react'\nimport { Row, Col, Button } from 'react-bootstrap'\nimport Rating from './Rating'\n\nconst Ratings = (props) => {\n  const [visibleRatings, setVisibleRatings] = useState(5)\n    \n  const handleSetVisibleRatings = () => {\n    setVisibleRatings(visibleRatings + 5)\n  }\n\n  const ratingsToShow = props.ratings.slice(0, visibleRatings)\n  \n  return (\n    <>\n      <Row>\n        <Col className='maindiv'>\n          {ratingsToShow.map(r =>\n            <Rating key={r.id} rating={r} ></Rating>\n          )}\n        </Col>\n      </Row>\n      <Row>\n        <Col className='d-flex justify-content-center mb-2'>\n          {ratingsToShow.length > visibleRatings &&\n            <Button onClick={handleSetVisibleRatings}>Load more ...</Button>\n          }\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default Ratings","import React, { useState } from 'react'\nimport { Jumbotron, Row, Col, Button } from 'react-bootstrap'\nimport Bottle from './Bottle'\nimport { NavLink } from 'react-router-dom'\nimport Ratings from './Ratings'\n\nconst Home = (props) => {\n  const [visibleBottles, setVisibleBottles] = useState(6)\n\n  const handleSetVisibleBottles = () => {\n    setVisibleBottles(visibleBottles + 6)\n  }\n\n  const byAdded = (a, b) => b.added > a.added ? 1 : -1\n  const byHidden = b => !b.user.hidden\n\n  const bottlesToShow = props.bottles\n    .filter(byHidden)\n    .sort(byAdded)\n    .slice(0, visibleBottles)\n\n  const ratingsToShow = props.ratings.sort(byAdded)\n  \n  return (\n    <>\n      <Row>\n        <Jumbotron as={Col} className='text-center'>\n          <h1>Bottlestash</h1>\n          <h5>Cooler than your wine cellar - wetter than Finnish summer</h5>\n          <h6>(or something as lame)</h6>\n        </Jumbotron>\n      </Row>\n\n      {!props.user &&\n      <div className='home' style={{ marginTop: '-2rem' }}>\n      <Row>\n        <Col className='maindiv mt-4' style={{ backgroundColor: 'rgba(245, 245, 245, 0.9)' }}>\n          <h2 className='mb-3'>Bottlestash, eh?</h2>\n        </Col>\n      </Row>\n      <Row>\n        <Col className='maindiv' style={{ backgroundColor: 'rgba(245, 245, 245, 0.9)' }} >\n          <section>\n            <h3 className='mb-3'>\n              That's right mate!\n            </h3>\n            <p>\n              Bottlestash is an app which let you keep track of your beer cellar.\n              Because lets face it; you like beer. So do I - it's allright!\n            </p>\n            <p>\n              So you have lot's of good beer in your cellar - or more likely - in\n              your wardrope. Not really sure what and how many bottles, or is their\n              expiration day long gone.\n            </p>\n            <p>\n              Bottlestash helps you with that! With Bottlestash you can keep track of your beer cellar, \n              so you can easily track what beers do you have, how many bottles and when to drink them!\n            </p>\n          </section>\n          \n        </Col>\n      </Row>\n      <Row>\n        <Col className='maindiv' style={{ backgroundColor: 'rgba(245, 245, 245, 0.9)' }}>\n          <h3 className='mb-2'>Main features:</h3>\n            <p>Save bottles to your stash</p>\n            <p>Keep track of your beers expiration and drink them before</p>\n            <p>Rate beers you drink</p>\n            <p>Peek other user's cellars and see what beers they have</p>\n        </Col>\n      </Row>\n      <Row>\n        <Col className='maindiv' style={{ backgroundColor: 'rgba(245, 245, 245, 0.9)' }}>\n          <h3 className='mb-2'>So do we have a deal?</h3>\n            <p>Perfect! Register for free and start collect some awesomeness in your stash!</p>\n            <NavLink to='/register'>To registration</NavLink>\n        </Col>\n      </Row>\n      </div>\n      }\n\n      {props.user &&\n      <>\n      <Row>\n        <Col className='maindiv'>\n          <h3>Recently added bottles</h3>\n        </Col>\n      </Row>\n      <Row>\n        <Col className='maindiv' >\n          {bottlesToShow.map(b =>\n            <Bottle key={b.id} bottle={b} ></Bottle>\n          )}\n        </Col>\n      </Row>\n      <Row>\n        <Col className='d-flex justify-content-center mb-3'>\n          {props.bottles.length > visibleBottles &&\n            <Button onClick={handleSetVisibleBottles}>Load more ...</Button>\n          }\n        </Col>\n      </Row>\n      <Row>\n        <Col className='maindiv'>\n          <h3>Recently added ratings</h3>\n        </Col>\n      </Row>\n      <Ratings ratings={ratingsToShow} />\n      </>\n      }\n    </>\n    \n  )\n}\n\nexport default Home","\nconst filterReducer = (state = null, action) => {\n    switch (action.type) {\n      case 'SET_FILTER':\n        return action.filter\n      default:\n        return state\n    }\n  }\n  \n  export const setFilter = filter => {\n    return {\n      type: 'SET_FILTER',\n      filter\n    }\n  }\n  \n  export default filterReducer","import React from 'react'\n\nconst ListSuggestion = (props) => {\n\n  const suggestionsToShow = [ ...new Set(props.suggestions) ]\n\n  return (\n    <datalist id={props.id} >\n      {suggestionsToShow.map(s => \n        <option key={s} value={s} ></option>\n      )}\n    </datalist>\n  )\n}\n\nexport default ListSuggestion","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Form, Button } from 'react-bootstrap'\nimport ListSuggestion from './ListSuggestion'\n\nconst SearchForm = (props) => {\n\n  const suggestions =\n    props.bottles ? props.bottles.map(b => b.beer.name) : null\n\n  return (\n    <Form onSubmit={props.handleSearch} inline>\n      <Form.Control list={props.id} name='filter' type ='text' className='p-2 m-2' placeholder='search for bottles, beers and more ...'></Form.Control>\n        <ListSuggestion\n          suggestions={suggestions}\n          id={props.id}\n        />\n      <Button type='submit'>Search</Button>\n    </Form>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    bottles: state.bottles,\n    beers: state.beers,\n    breweries: state.breweries\n  }\n}\n\nexport default connect(mapStateToProps)(SearchForm)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { NavLink } from 'react-router-dom'\nimport { Navbar, Nav, Row, Card } from 'react-bootstrap'\nimport { logoutUser } from '../reducers/loginReducer'\nimport { setFilter } from '../reducers/filterReducer'\nimport SearchForm from './SearchForm'\n\nconst Navigation = (props) => {\n\n  const handleLogout = () => {\n    props.logoutUser()\n    props.setNotification('Logout was successfull')\n    props.history.push('/')\n  }\n\n  const handleSearch = (e) => {\n    e.preventDefault()\n    props.setFilter(e.target.filter.value)\n    e.target.filter.value = ''\n    props.history.push('/search')\n  }\n\n  return (\n    <Navbar as={Row} collapseOnSelect expand='lg' bg='dark' variant='dark'>\n      <Navbar.Toggle aria-controls='responsive-navbar-nav' />\n      <Navbar.Collapse id='responsive-navbar-nav'>\n        <Nav className='mr-auto'>\n          <Nav.Link href='#' as='span'>\n            <NavLink to='/' >Home</NavLink>\n          </Nav.Link>\n\n          {!props.user &&\n            <>\n              <Nav.Link href='#' as='span'>\n                <NavLink to='/login' >Login</NavLink>\n              </Nav.Link>\n              <Nav.Link href='#' as='span'>\n                <NavLink to='/register' >Create account</NavLink>\n              </Nav.Link>\n            </>\n          }\n\n          {props.user &&\n            <>\n              <Nav.Link href='#' as='span'>\n                <NavLink to={`/users/${props.user.id}/stash`} >Manage stash</NavLink>\n              </Nav.Link>\n              <Nav.Link href='#' as='span'>\n                <NavLink to='/rate' >Rate beer</NavLink>\n              </Nav.Link>\n              <Nav.Link href='#' as='span'>\n                <Nav.Item onClick={handleLogout} >Logout</Nav.Item>\n              </Nav.Link>\n\n              {!props.user.picture &&\n                <Nav.Link href='#' as='span'>\n                  <NavLink to='/profile' >Profile</NavLink>\n                </Nav.Link>\n              }\n            </>\n          }\n        </Nav>\n        \n        {props.user &&\n          <>\n          {props.user.picture &&\n            <NavLink to='/profile' >\n              <Card.Img\n                src={`/api/pictures/${props.user.picture}`}\n                href='/profile'\n                style={{ width: '50px', height: '50px', borderRadius: '50%' }}\n                className='avatar'\n                alt='Profile'\n              />\n            </NavLink>\n          }\n          <SearchForm\n            handleSearch={handleSearch}\n            id='search'\n          />\n          </>\n        }\n      </Navbar.Collapse>\n    </Navbar>\n  )\n}\n\nconst mapDispatchToProps = {\n  logoutUser, setFilter\n}\n\nexport default connect(null, mapDispatchToProps)(withRouter(Navigation))","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { Form, Button, Row, Col, Jumbotron } from 'react-bootstrap'\nimport { registerUser } from '../reducers/usersReducer'\nimport { useTextField } from '../hooks'\n\nconst Register = (props) => {\n  const [validated, setValidated] = useState(false)\n  const [username, usernameErrors] = useTextField('text', 5, 20, true)\n  const [password, passwordErrors] = useTextField('password', 5, 20, true)\n  const [name, nameErrors] = useTextField('text', 1, 20, true)\n  const [email, emailErrors] = useTextField('text', 1, 50, true)\n  const [city, cityErrors] = useTextField('text', 1, 50, false)\n  const [country, countryErrors] = useTextField('text', 1, 20, false)\n  const [hidden, setHidden] = useState(false)\n\n  const handleRegister = async (event) => {\n    event.preventDefault()\n    setValidated(true)\n\n    if (!event.target.checkValidity()) {\n      return\n    }\n    \n    try {\n      await props.registerUser({\n        username: username.value,\n        password: password.value,\n        name: name.value,\n        email: email.value,\n        city: city.value,\n        country: country.value,\n        hidden\n      })\n  \n      props.setNotification('User registration was succesfull')\n      props.history.push('/login')\n    \n    } catch (exception) {\n      props.setNotification('User registration failed', 'error')\n    }  \n  }\n\n  return (\n    <>\n      <Row>\n        <Jumbotron as={Col} className='text-center'>\n          <h2>Register to Bottlestash</h2>\n        </Jumbotron>\n      </Row>\n      <Row className='mb-3'>\n        <Col style={{ maxWidth: '25rem', margin: 'auto' }}>\n          <Form noValidate validated={validated} onSubmit={handleRegister} id='registerForm' >\n            <Form.Group >\n              <Form.Label >Username</Form.Label>\n              <Form.Control {...username} placeholder='username' />\n              <Form.Control.Feedback type='invalid' >{usernameErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Password</Form.Label>\n              <Form.Control {...password} placeholder='password' />\n              <Form.Control.Feedback type='invalid' >{passwordErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Name</Form.Label>\n              <Form.Control {...name} placeholder='name to show other users' />\n              <Form.Control.Feedback type='invalid' >{nameErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Email</Form.Label>\n              <Form.Control {...email} placeholder='email' />\n              <Form.Control.Feedback type='invalid' >{emailErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Row>\n              <Form.Group as={Col} className='p-2'>\n                <Form.Label>City</Form.Label>\n                <Form.Control {...city} placeholder='what city your stash at' />\n                <Form.Control.Feedback type='invalid' >{cityErrors}</Form.Control.Feedback>\n              </Form.Group >\n              <Form.Group as={Col} className='p-2'>\n                <Form.Label>Country</Form.Label>\n                <Form.Control {...country} placeholder='what country your stash at' />\n                <Form.Control.Feedback type='invalid' >{countryErrors}</Form.Control.Feedback>\n              </Form.Group>\n            </Form.Row>\n            <Form.Group>\n              <Form.Check\n                type='checkbox'\n                onChange={({ target }) => setHidden(target.checked)}\n                label='I want my stash to be private' />\n            </Form.Group>\n            <Button variant='success' type='submit' block>Register</Button>\n          </Form>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nconst mapDispatchToProps = {\n  registerUser\n}\n\nexport default connect(null, mapDispatchToProps)(withRouter(Register))","import React from 'react'\nimport { Modal, Button } from 'react-bootstrap'\nimport { NavLink } from 'react-router-dom'\nimport { updateUserToState } from '../reducers/usersReducer'\nimport { setNotification } from '../reducers/notificationReducer'\nimport { removeBottle, updateBottle } from '../reducers/bottlesReducer'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\n\nconst BottleDetails = (props) => {\n  if (!props.bottle) {\n    return null\n  }\n  \n  const bottle = props.bottle\n\n  const handleDrink = async () => {\n    try {\n      const updateableBottle = { ...bottle,\n        beer: bottle.beer.id,\n        count: bottle.count - 1\n      }\n\n      if (bottle.count < 2) {\n        await props.removeBottle(bottle.id)\n        props.setNotification(`This was your last bottle of ${bottle.beer.name}`)\n      } else {\n        await props.updateBottle(bottle.id, updateableBottle)\n        props.setNotification(`You drinked one bottle of ${bottle.beer.brewery.name} ${bottle.beer.name}`)\n      }\n    \n      props.updateUserToState(props.user.username)\n          \n    } catch (exception) {\n      props.setNotification('Bottle update failed!', 'error')\n    }\n  }\n    \n  return (\n    <Modal className='text-center' centered show={props.visible} onHide={props.toggleVisibility}>\n      <Modal.Header closeButton>\n        <Modal.Title >{bottle.beer.name}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>Alcohol: {bottle.beer.abv} %</p>\n        <p>Brewery: {bottle.beer.brewery.name}</p>\n        <p>Price: {bottle.price} &euro;</p>\n        <p>Volume: {bottle.volume} litres</p>\n        <p>Bottled: {moment(bottle.bottled).format('DD.MM.YYYY')}</p>\n        <p>Expires: {moment(bottle.expiration).format('DD.MM.YYYY')}</p>\n        <p>Beers age: {moment(new Date()).diff(moment(bottle.bottled), 'months')} months</p>\n        <p>Bottles: {bottle.count}</p>\n      </Modal.Body>\n\n      {props.user.username === props.userToView.username &&\n        <Modal.Footer>\n          <NavLink className='btn' onClick={handleDrink} to={{ pathname: '/rate', state: { bottle }}} >Drink and rate</NavLink>\n          <Button onClick={handleDrink} variant='light'>Just drink</Button>\n        </Modal.Footer>\n      }\n    </Modal>\n  )\n}\n\nconst mapDispatchToProps = {\n  removeBottle,\n  updateBottle,\n  updateUserToState,\n  setNotification\n}  \n\nexport default connect(null, mapDispatchToProps)(BottleDetails)","import React, { useState } from 'react'\nimport { Col, Table } from 'react-bootstrap'\nimport BottleDetails from './BottleDetails'\nimport moment from 'moment'\n\nconst Bottles = (props) => {\n  const [visible, setVisible] = useState(false)\n  const [bottle, setBottle] = useState(null)\n\n  if (!props.stash) {\n    return null\n  }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  const handleShowDetails = (b) => {\n    setBottle(b)\n    setVisible(true)\n  }\n\n  return (\n    <Col className='maindiv'>\n      <Table hover responsive>\n        <thead>\n          <tr>\n            <th>Count</th>\n            <th>Brewery</th>\n            <th>Beer</th>\n            <th>Expiration</th>\n          </tr>\n        </thead>\n        <tbody >\n          {props.stash.map(b =>\n            <tr\n              key={b.id}\n              onClick={() => handleShowDetails(b)}\n            >\n              <td>{b.count}</td>\n              <td>{b.beer.brewery.name}</td>\n              <td>{b.beer.name}, {b.beer.abv} %</td>\n              <td style={{ color: moment(b.expiration).isBefore(new Date()) ? 'red' : 'black'}}>{b.expiration ? moment(b.expiration).fromNow() : '-'}</td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n      <BottleDetails\n        user={props.user}\n        userToView={props.userToView}\n        bottle={bottle}\n        visible={visible}\n        toggleVisibility={toggleVisibility}\n      />\n    </Col>\n  )\n}\n\nexport default Bottles","import React from 'react'\nimport { Col, Card, ListGroup } from 'react-bootstrap'\n\nconst StashDetails = ({ stash }) => {\n\n  const bottlesCount = stash.reduce((sum, bottle) => sum + bottle.count, 0)\n  const stashCost = stash.reduce((sum, bottle) => sum + bottle.price, 0)\n  const stashVolume = stash.reduce((sum, bottle) => sum + bottle.volume, 0)\n\n  return (\n    <Col className='maindiv'>\n      <Card>\n        <Card.Header>\n          <Card.Title>Details of your stash</Card.Title>\n        </Card.Header>\n        <ListGroup variant='flush'>\n          <ListGroup.Item>{stash.length} different beers and {bottlesCount} different bottles</ListGroup.Item>\n          <ListGroup.Item>Your stash costs {stashCost} &euro;</ListGroup.Item>\n          <ListGroup.Item>Your stash has {stashVolume} litres of beer</ListGroup.Item>\n        </ListGroup>\n      </Card>\n    </Col>\n  )\n}\n\nexport default StashDetails","import React, { useState } from 'react'\nimport { Row, Col, Jumbotron, Nav } from 'react-bootstrap'\nimport { NavLink } from 'react-router-dom'\nimport Bottles from './Bottles'\nimport StashDetails from './StashDetails'\n\nconst Stash = (props) => {\n  const [stashVisible, setStashVisible] = useState(false)\n\n  if (!props.userToView) {\n    return null\n  }\n\n  const stash = props.userToView.stash\n\n  return (\n    <>\n      <Row>\n        <Jumbotron as={Col} className='text-center'>\n          <h2>{props.userToView.name} 's Stash</h2>\n        </Jumbotron>\n      </Row>\n\n      {props.userToView.username === props.user.username && props.userToView.hidden &&\n      <Row>\n        <Col className='maindiv'>\n          <p>\n            Your stash is hidden and won't show to other users.\n            If you wan't to make it visible to other users, please\n            update visibility settings in your profile\n          </p>\n        </Col>\n      </Row>\n      }\n\n      {props.userToView.username !== props.user.username && props.userToView.hidden &&\n      <Row>\n        <Col className='maindiv'>\n          <p>This stash is private and cannot be peeked - sorry!</p>\n        </Col>\n      </Row>\n      }\n\n      {(props.userToView.username === props.user.username) &&\n      <Row>\n        <Col className='d-flex justify-content-center mb-4'>\n          <Nav>\n            <Nav.Link onClick={() => setStashVisible(!stashVisible)} className='p-2'>\n              {stashVisible ? 'Back to stash' : 'Stash details'}\n            </Nav.Link>\n            <Nav.Link as='span' className='p-2'>\n              <NavLink to='/bottles'>Add new bottle</NavLink>\n            </Nav.Link>\n          </Nav>\n        </Col>\n      </Row>\n      }\n      {(props.userToView.username === props.user.username || !props.userToView.hidden) &&\n      <Row className='mb-3'>\n        {!stashVisible\n          ? <Bottles stash={stash} user={props.user} userToView={props.userToView}></Bottles>\n          : <StashDetails stash={stash}></StashDetails>\n        }\n      </Row>\n      }\n    </>\n  )\n}\n\nexport default (Stash)","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Row, Col, Jumbotron, Nav } from 'react-bootstrap'\n\nconst Footer = (props) => {\n  return (\n    <Jumbotron className='mt-5' style={{ backgroundColor: 'whitesmoke', color: 'black' }}>\n      <Row>\n        <Col>\n          <Nav className='justify-content-center'>\n            <Nav.Link as='span'>\n              <NavLink to='/' >Home</NavLink>\n            </Nav.Link>\n            <Nav.Link as='span'>\n              <NavLink to='/about' >About</NavLink>\n            </Nav.Link>\n            <Nav.Link href='https://github.com/MiguelSombrero/bottlestash-app-backend'>Github</Nav.Link>\n          </Nav>\n        </Col>\n      </Row>\n      <Row className='mt-4'>\n        <Col className='text-center'>\n          <p>&copy; Miika Somero 2019</p>\n        </Col>\n      </Row>\n    </Jumbotron>\n  )\n}\n\nexport default Footer","import { useResource } from '../hooks'\n\nconst picturesService = useResource('/api/pictures')\n\nconst picturesReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'GET_PICTURE':\n        return [...state, action.picture ]\n      default:\n        return state\n    }\n  }\n  \n  export const getOnePicture = id => {\n    return async dispatch => {\n      const picture = await picturesService.getOne(id)\n      \n      dispatch({\n        type: 'GET_PICTURE',\n        picture\n      })\n    }\n  }\n  \n  export const addPicture = newPicture => {\n    return async dispatch => {\n      const data = new FormData()\n      data.append('picture', newPicture)\n      const picture = await picturesService.createImage(data)\n      return picture\n    }\n  }\n\n  export default picturesReducer","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { addBeer, getOneBeer } from '../reducers/beersReducer'\nimport { addBrewery, getOneBrewery } from '../reducers/breweriesReducer'\nimport { addBottle } from '../reducers/bottlesReducer'\nimport { addPicture } from '../reducers/picturesReducer'\nimport { updateUserToState } from '../reducers/usersReducer'\nimport { withRouter } from 'react-router-dom'\nimport { Row, Col, Jumbotron, Form, Button } from 'react-bootstrap'\nimport { useTextField, useNumberField } from '../hooks'\nimport ListSuggestion from './ListSuggestion'\n\nconst AddBottle = (props) => {\n  const [validated, setValidated] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [picture, setPicture] = useState(null)\n  const [breweryName, breweryErrors] = useTextField('text', 1, 50, true)\n  const [name, nameErrors] = useTextField('text', 1, 50, true)\n  const [abv, abvErrors] = useNumberField('number', 0, 100, 0.1, true)\n  const [price, priceErrors] = useNumberField('number', 0, 1000, 0.01)\n  const [count, countErrors] = useNumberField('number', 0, 50, 1, true)\n  const [volume, volumeErrors] = useNumberField('number', 0, 10, 0.01)\n  const [bottled, bottledErrors] = useNumberField('date', '1990-01-01', '2050-01-01', 1)\n  const [expiration, expirationErrors] = useNumberField('date', '1990-01-01', '2050-01-01', 1)\n  \n  const handleAddBottle = async (event) => {\n    event.preventDefault()\n    setValidated(true)\n\n    if (!event.target.checkValidity()) {\n      return\n    }\n\n    setIsLoading(true)\n\n    try {\n      let brewery = await props.getOneBrewery(breweryName.value)\n      \n      if (!brewery) {\n        brewery = await props.addBrewery({ name: breweryName.value })\n      }\n\n      let beer = await props.getOneBeer(brewery.id, name.value, abv.value)\n\n      if (!beer) {\n        beer = await props.addBeer({ breweryId: brewery.id, name: name.value, abv: abv.value })\n      }\n\n      const newPicture = picture\n        ? await props.addPicture(picture)\n        : null\n\n      await props.addBottle({\n        price: price.value,\n        count: count.value,\n        volume: volume.value,\n        bottled: bottled.value,\n        expiration: expiration.value,\n        beerId: beer.id,\n        pictureId: newPicture ? newPicture.id : null\n      })\n\n      // tämän voisi muuttaa niin, että yllä oleva pullo lisätään käyttäjän\n      // stashiin ja käyttäjä viedään tilaan, ilman että haetaan tietokannasta\n      const user = await props.updateUserToState(props.user.username)\n\n      setIsLoading(false)\n      props.setNotification('Added bottle succesfully')\n      props.history.push(`/users/${user.id}/stash`)\n      \n    } catch (exception) {\n      props.setNotification('Adding bottle failed - sorry!', 'error')\n    }\n  }\n\n  const breweriesAsList = () => !props.breweries\n    ? null\n    : props.breweries.map(b => b.name)\n\n  const beersAsList = () => !props.beers\n    ? null\n    : props.beers.filter(b => b.brewery.name === breweryName.value).map(b => b.name)\n\n  const abvAsList = () => !props.beers\n    ? null\n    : props.beers.filter(b => b.brewery.name === breweryName.value && b.name === name.value).map(b => b.abv)\n\n    return (\n    <>\n      <Row>\n        <Jumbotron as={Col} className='text-center'>\n          <h2>Add new bottle to your stash</h2>\n        </Jumbotron>\n      </Row>\n      <Row className='mb-3'>\n        <Col className='formstyle'>\n          <Form noValidate validated={validated} onSubmit={handleAddBottle} id='addBottleForm' >\n            <Form.Group >\n            <Form.Label>Brewery</Form.Label>\n              <Form.Control {...breweryName} list='breweriesAsList' placeholder='name of the brewery' />\n              <ListSuggestion suggestions={breweriesAsList()} id='breweriesAsList' />\n              <Form.Control.Feedback type='invalid' >{breweryErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Name</Form.Label>\n              <Form.Control {...name} list='beersAsList' placeholder='name of your beer' />\n              <ListSuggestion suggestions={beersAsList()} id='beersAsList' />\n              <Form.Control.Feedback type='invalid' >{nameErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Abv</Form.Label>\n              <Form.Control {...abv} list='abvAsList' placeholder='alcohol %' />\n              <ListSuggestion suggestions={abvAsList()} id='abvAsList' />\n              <Form.Control.Feedback type='invalid' >{abvErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Count</Form.Label>\n              <Form.Control {...count} placeholder='number of bottles to save' />\n              <Form.Control.Feedback type='invalid' >{countErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Volume</Form.Label>\n              <Form.Control {...volume} placeholder='volume of the bottle in litres' />\n              <Form.Control.Feedback type='invalid' >{volumeErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Price</Form.Label>\n              <Form.Control {...price} placeholder='price of an one bottle' />\n              <Form.Control.Feedback type='invalid' >{priceErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Row>\n              <Form.Group style={{ maxWidth: '50%' }} className=' p-2'>\n                <Form.Label>Bottled</Form.Label>\n                <Form.Control {...bottled} placeholder='day beer was bottled' />\n                <Form.Control.Feedback type='invalid' >{bottledErrors}</Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group style={{ maxWidth: '50%' }} className='p-2'>\n                <Form.Label>Expiration</Form.Label>\n                <Form.Control {...expiration} placeholder='expiration day of bottles' />\n                <Form.Control.Feedback type='invalid' >{expirationErrors}</Form.Control.Feedback>\n              </Form.Group>\n            </Form.Row>\n            <Form.Group className='custom-file mb-4 p-2'>\n              <Form.Label className='custom-file-label'>Click to add pic of your bottle</Form.Label>\n              <Form.Control\n                name='picture'\n                className='custom-file-input'\n                type='file'\n                accept='image/*'\n                onChange={({ target }) => setPicture(target.files[0])}\n              />\n              {picture &&\n              <Form.Text className='text-center'>{picture.name}</Form.Text>\n              }\n            </Form.Group>\n            <Button\n              variant='success'\n              type='submit'\n              block\n              disabled={isLoading}\n              \n              > {isLoading ? 'Loading ...' : 'Add beer'}\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nconst mapDispatchToProps = {\n  addBeer,\n  addBrewery,\n  addBottle,\n  addPicture,\n  getOneBeer,\n  getOneBrewery,\n  updateUserToState\n}\n\nexport default connect(null, mapDispatchToProps)(withRouter(AddBottle))","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Row, Alert, Col } from 'react-bootstrap'\n\nconst Notification = (props) => {\n  if (!props.notification) {\n    return null\n  }\n\n  return (\n    <Row>\n      <Alert as={Col} className='text-center col-12' variant={props.notification.type === 'success' ? 'success' : 'danger'}>\n        {props.notification.message}\n      </Alert>\n    </Row>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification\n  }\n}\n\nexport default connect(mapStateToProps)(Notification)","import React, { useState, useEffect } from 'react'\nimport { Row, Col, Jumbotron, Form, Button } from 'react-bootstrap'\nimport { useTextField, useNumberField } from '../hooks'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { addBeer, getOneBeer } from '../reducers/beersReducer'\nimport { addBrewery, getOneBrewery } from '../reducers/breweriesReducer'\nimport { addRating } from '../reducers/ratingsReducer'\nimport { addPicture } from '../reducers/picturesReducer'\nimport { setNotification } from '../reducers/notificationReducer'\nimport moment from 'moment'\n\nconst Rate = (props) => {\n  const [validated, setValidated] = useState(false)\n  const [picture, setPicture] = useState(null)\n  const [beerName, beerErrors, setBeerName] = useTextField('text', 1, 50, true)\n  const [breweryName, breweryErrors, setBreweryName] = useTextField('text', 1, 50, true)\n  const [description, descriptionErrors] = useTextField('text', 0, 1000, false)\n  const [alcohol, alcoholErrors, setAlcohol] = useNumberField('number', 0, 100, 0.1, true)\n  const [bottled, bottledErrors, setBottled] = useNumberField('date', '1990-01-01', '2050-01-01', 1, false)\n  const [aroma] = useNumberField('range', 1, 10, 1, true)\n  const [taste] = useNumberField('range', 1, 10, 1, true)\n  const [appearance] = useNumberField('range', 1, 5, 1, true)\n  const [mouthfeel] = useNumberField('range', 1, 5, 1, true)\n  const [overall] = useNumberField('range', 1, 20, 1, true)\n\n  useEffect(() => {\n    if (props.location.state) {\n      const bottle = props.location.state.bottle\n\n      setBeerName(bottle.beer.name)\n      setBreweryName(bottle.beer.brewery.name)\n      setAlcohol(bottle.beer.abv)\n      setBottled(moment(bottle.bottled).format('YYYY-MM-DD'))\n    }\n  }, [])\n\n  const handleRate = async (event) => {\n    event.preventDefault()\n    setValidated(true)\n\n    if (!event.target.checkValidity()) {\n      return\n    }\n    \n    try {\n      let beer = null\n\n      if (!props.beer) {\n        let brewery = await props.getOneBrewery(breweryName.value)\n        \n        if (!brewery) {\n          brewery = await props.addBrewery({ name: breweryName.value })\n        }\n  \n        beer = await props.getOneBeer({ breweryId: brewery.id, name: beerName.value, abv: alcohol.value })\n  \n        if (!beer) {\n          beer = await props.addBeer({ breweryId: brewery.id, name: beerName.value, abv: alcohol.value })\n        }\n      }\n\n      const newPicture = picture\n        ? await props.addPicture(picture)\n        : null\n\n      const newRating = {\n        beerId: props.beer === undefined ? beer.id : props.beer.id,\n        description: description.value,\n        ageofbeer: bottled ? moment(new Date()).diff(moment(bottled.value), 'months') : null,\n        aroma: aroma.value,\n        taste: taste.value,\n        appearance: appearance.value,\n        mouthfeel: mouthfeel.value,\n        overall: overall.value,\n        pictureId: newPicture ? newPicture.id : null\n      }\n  \n      props.addRating(newRating)\n      props.setNotification('New rating added!')\n      props.history.push('/')\n\n    } catch (exception) {\n      props.setNotification('Adding a new rating failed!', 'error')\n    }\n  }\n\n  return (\n    <>\n      <Row>\n        <Jumbotron as={Col} className='text-center mb-2'>\n            <h2>Rate beer</h2>\n        </Jumbotron>\n      </Row>\n      <Row className='mb-3'>\n        <Col style={{ maxWidth: '25rem', margin: 'auto' }}>\n          <Form noValidate validated={validated} onSubmit={handleRate} id='rateForm'>\n            <Form.Group >\n              <Form.Label>Brewery</Form.Label>\n              <Form.Control {...breweryName} placeholder='name of brewery' />\n              <Form.Control.Feedback type='invalid' >{breweryErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group >\n              <Form.Label>Beer</Form.Label>\n              <Form.Control {...beerName} placeholder='name of beer' />\n              <Form.Control.Feedback type='invalid' >{beerErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group >\n              <Form.Label>Abv</Form.Label>\n              <Form.Control {...alcohol} placeholder='alcohol volume' />\n              <Form.Control.Feedback type='invalid' >{alcoholErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group >\n              <Form.Label>Bottled</Form.Label>\n              <Form.Control {...bottled} placeholder='(optional)' />\n              <Form.Control.Feedback type='invalid' >{bottledErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group >\n              <Form.Label>Aroma</Form.Label>\n              <Form.Text>{aroma.value || 0}</Form.Text>\n              <Form.Control {...aroma} />\n            </Form.Group>\n            <Form.Group >\n              <Form.Label>Taste</Form.Label>\n              <Form.Text>{taste.value || 0}</Form.Text>\n              <Form.Control {...taste} />\n            </Form.Group>\n            <Form.Group >\n              <Form.Label>Appearance</Form.Label>\n              <Form.Text>{appearance.value || 0}</Form.Text>\n              <Form.Control {...appearance} />\n            </Form.Group>\n            <Form.Group >\n              <Form.Label>Mouthfeel</Form.Label>\n              <Form.Text>{mouthfeel.value || 0}</Form.Text>\n              <Form.Control {...mouthfeel} />\n            </Form.Group>\n            <Form.Group >\n              <Form.Label>Overall</Form.Label>\n              <Form.Text>{overall.value || 0}</Form.Text>\n              <Form.Control {...overall} />\n            </Form.Group>\n            <Form.Group >\n              <Form.Label>Description</Form.Label>\n              <Form.Control as='textarea' rows='4' {...description} placeholder='describe your beer' />\n              <Form.Control.Feedback type='invalid' >{descriptionErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group className='custom-file mb-4 p-2'>\n              <Form.Label className='custom-file-label'>Click to add pic of your beer</Form.Label>\n              <Form.Control\n                name='picture'\n                className='custom-file-input'\n                type='file'\n                accept='image/*'\n                onChange={({ target }) => setPicture(target.files[0])}\n              />\n              {picture &&\n              <Form.Text className='text-center'>{picture.name}</Form.Text>\n              }\n            </Form.Group>\n            <Button type='submit' variant='success' block>Add rating</Button>\n          </Form>\n        </Col>\n      </Row>    \n    </>\n  )\n}\n\nconst mapDispatchToProps = {\n  addBeer,\n  getOneBeer,\n  addBrewery,\n  getOneBrewery,\n  addRating,\n  addPicture,\n  setNotification\n}\n\nexport default connect(null, mapDispatchToProps)(withRouter(Rate))","import React, { useState, useEffect } from 'react'\nimport { Row, Col, Form, Button, Jumbotron, Nav } from 'react-bootstrap'\nimport { NavLink, withRouter } from 'react-router-dom'\nimport { useTextField } from '../hooks'\nimport { connect } from 'react-redux'\nimport { removeUser, updateUser } from '../reducers/usersReducer'\nimport { addPicture } from '../reducers/picturesReducer'\nimport { logoutUser } from '../reducers/loginReducer'\nimport { setNotification } from '../reducers/notificationReducer'\n\nconst Profile = (props) => {\n  const [validated, setValidated] = useState(false)\n  const [picture, setPicture] = useState(null)\n  const [name, nameErrors, setName] = useTextField('text', 1, 20, true)\n  const [email, emailErrors, setEmail] = useTextField('text', 1, 50, true)\n  const [city, cityErrors, setCity] = useTextField('text', 1, 50, false)\n  const [country, countryErrors, setCountry] = useTextField('text', 1, 20, false)\n  const [hidden, setHidden] = useState(false)\n\n  useEffect(() => {\n    setName(props.user.name || '')\n    setEmail(props.user.email || '')\n    setCity(props.user.city || '')\n    setCountry(props.user.country || '')\n    setHidden(props.user.hidden)\n  }, [])\n\n  if (!props.user) {\n    return null\n  }\n  \n  const handleProfileUpdate = async (event) => {\n    event.preventDefault()\n    setValidated(true)\n\n    if (!event.target.checkValidity()) {\n      return\n    }\n\n    try {\n      const newPicture = picture\n        ? await props.addPicture(picture)\n        : null\n\n      const updateableUser = {\n        name: name.value,\n        email: email.value,\n        city: city.value,\n        country: country.value,\n        pictureId: newPicture ? newPicture.id : null,\n        hidden\n      }\n  \n      await props.updateUser(props.user.id, updateableUser)\n      props.setNotification('Profile saved!')\n\n    } catch (exception) {\n      props.setNotification('Saving profile failed!', 'error')\n    }\n  }\n\n  const handleDelete = async () => {\n    if (window.confirm('Are you sure you want to delete your profile and all its data?')) {\n      try {\n        await props.removeUser(props.user.id)\n        await props.logoutUser()\n        props.setNotification('Your profile and data has been deleted')\n        props.history.push('/')\n  \n      } catch (exception) {\n        props.setNotification('Removing yor profile failed!', 'error')\n      }\n    }\n  }\n\n  return (\n    <>\n      <Row>\n        <Jumbotron as={Col} className='text-center mb-2'>\n          <h2>{props.user.username} profile</h2>\n        </Jumbotron>\n      </Row>\n      <Row>\n        <Col className='d-flex justify-content-center mb-4'>\n          <Nav>\n            <Nav.Link as='span' className='p-2'>\n              <NavLink to={`/users/${props.user.id}/stash`} >Your stash</NavLink>\n            </Nav.Link>\n            <Nav.Link as='span' className='p-2'>\n              <NavLink to={`/users/${props.user.id}/ratings`} >Your ratings</NavLink>\n            </Nav.Link>\n            <Nav.Link onClick={handleDelete} as='span' className='p-2'>\n              Delete profile\n            </Nav.Link>\n          </Nav>\n        </Col>\n      </Row>\n      <Row className='mb-3'>\n        <Col >\n          <Form noValidate validated={validated} style={{ maxWidth: '25rem', margin: 'auto' }} onSubmit={handleProfileUpdate} id='profileUpdateForm' >\n            <Form.Group >\n              <Form.Label>Name</Form.Label>\n              <Form.Control {...name} />\n              <Form.Control.Feedback type='invalid' >{nameErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group >\n              <Form.Label>Email</Form.Label>\n              <Form.Control {...email} />\n              <Form.Control.Feedback type='invalid' >{emailErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Row>\n              <Form.Group style={{ maxWidth: '50%' }} className='p-2'>\n                <Form.Label>City</Form.Label>\n                <Form.Control {...city} />\n                <Form.Control.Feedback type='invalid' >{cityErrors}</Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group style={{ maxWidth: '50%' }} className='p-2'>\n                <Form.Label>Country</Form.Label>\n                <Form.Control {...country} />\n                <Form.Control.Feedback type='invalid' >{countryErrors}</Form.Control.Feedback>\n              </Form.Group>\n            </Form.Row>\n            <Form.Group>\n              <Form.Check\n                type='checkbox'\n                checked={hidden}\n                onChange={({ target }) => setHidden(target.checked)}\n                label='I want my stash to be private' />\n            </Form.Group>\n            <Form.Group className='custom-file mb-4 p-2'>\n              <Form.Label className='custom-file-label'>Click to add profile picture</Form.Label>\n              <Form.Control\n                name='picture'\n                className='custom-file-input'\n                type='file'\n                accept='image/*'\n                onChange={({ target }) => setPicture(target.files[0])}\n              />\n              {picture &&\n              <Form.Text className='text-center'>{picture.name}</Form.Text>\n              }\n            </Form.Group>\n            <Button type='submit' variant='success' block>Save profile</Button>\n          </Form>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nconst mapDispatchToProps = {\n  removeUser,\n  updateUser,\n  logoutUser,\n  addPicture,\n  setNotification\n}\n\nexport default connect(null, mapDispatchToProps)(withRouter(Profile))\n","import React from 'react'\nimport { Col, Row, Jumbotron, ListGroup } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { setFilter } from '../reducers/filterReducer'\nimport SearchForm from './SearchForm'\nimport { NavLink } from 'react-router-dom'\n\nconst SearchResults = (props) => {\n\n  const byHidden = (b) => !b.user.hidden\n  const byBeerName = (b) => !props.filter ? false : b.name.toLowerCase().includes(props.filter.toLowerCase())\n  const byBreweryName = (b) => !props.filter ? false : b.name.toLowerCase().includes(props.filter.toLowerCase())\n\n  const bottlesToShow = props.bottles\n    ? props.bottles.filter(byHidden).filter(b => byBeerName(b.beer) || byBreweryName(b.beer.brewery))\n    : null\n\n  const beersToShow = props.beers\n    ? props.beers.filter(byBeerName)\n    : null\n\n  const breweriesToShow = props.breweries\n    ? props.breweries.filter(byBreweryName)\n    : null\n\n  const handleSearch = (e) => {\n    e.preventDefault()\n    props.setFilter(e.target.filter.value)\n    e.target.filter.value = ''\n  }\n\n  const showBottles = () => \n    <>\n    <Row>\n      <Col className='text-center'>\n        <h3>Bottles</h3>\n        <p>\n          {bottlesToShow.length} bottles for search '{props.filter}'\n        </p>\n      </Col>\n    </Row>\n    <Row>\n      <Col className='maindiv'>\n        <ListGroup variant='flush'>\n          {bottlesToShow.map(b =>\n            <ListGroup.Item key={b.id}>\n              {b.beer.name} {b.beer.abv} %, {b.beer.brewery.name} <NavLink to={`users/${b.user.id}/stash`} >in {b.user.name} stash</NavLink>\n            </ListGroup.Item>\n          )}\n        </ListGroup>\n      </Col>\n    </Row>\n  </>\n\nconst showBeers = () => \n  <>\n    <Row>\n      <Col className='text-center'>\n        <h3>Beers</h3>\n        <p>\n          {beersToShow.length} beers for search '{props.filter}'\n        </p>\n      </Col>\n    </Row>\n    <Row>\n      <Col className='maindiv'>\n        <ListGroup variant='flush'>\n          {beersToShow.map(b =>\n            <ListGroup.Item key={b.id}>\n              <NavLink to={`/beers/${b.id}`} >{b.name} {b.abv} %</NavLink>, beer by {b.brewery.name}\n            </ListGroup.Item>\n          )}\n        </ListGroup>\n      </Col>\n    </Row>\n  </>\n\nconst showBreweries = () => \n  <>\n    <Row>\n      <Col className='text-center'>\n        <h3>Breweries</h3>\n        <p>\n          {breweriesToShow.length} breweries for search '{props.filter}'\n        </p>\n      </Col>\n    </Row>\n    <Row>\n      <Col className='maindiv'>\n        <ListGroup variant='flush'>\n          {breweriesToShow.map(b =>\n            <ListGroup.Item key={b.id}>\n              <NavLink to={`/breweries/${b.id}`} >{b.name}</NavLink>\n            </ListGroup.Item>\n          )}\n        </ListGroup>\n      </Col>\n    </Row>\n  </>\n\n  return (\n    <>\n      <Row>\n        <Jumbotron as={Col} className='text-center'>\n          <h2>Search from Bottlestash</h2>\n        </Jumbotron>\n      </Row>\n      <Row>\n        <Col className='d-flex justify-content-center mb-5'>\n          <SearchForm\n            handleSearch={handleSearch}\n            id='search'\n          />\n        </Col>\n      </Row>\n      {props.filter &&\n        <>\n          {bottlesToShow.length > 0\n            ? showBottles()\n            : <p className='text-center'>No bottles for search '{props.filter}'</p>\n          }\n          {beersToShow.length > 0\n            ? showBeers()\n            : <p className='text-center'>No beers for search '{props.filter}'</p>\n          }\n          {breweriesToShow.length > 0\n            ? showBreweries()\n            : <p className='text-center'>No breweries for search '{props.filter}'</p>\n          }\n        </>\n      }\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    filter: state.filter,\n    bottles: state.bottles,\n    beers: state.beers,\n    breweries: state.breweries\n  }\n}\n\nconst mapDispatchToProps = {\n  setFilter\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResults)","import React from 'react'\nimport { Row, Col, Jumbotron, ListGroup } from 'react-bootstrap'\nimport { NavLink } from 'react-router-dom'\n\nconst Brewery = ({ brewery }) => {\n  \n  if (!brewery) {\n    return null\n  }\n\n  return (\n    <>\n      <Row>\n        <Jumbotron as={Col} className='text-center'>\n          <h2>{brewery.name}</h2>\n        </Jumbotron>\n      </Row>\n      <Row>\n        <Col className='text-center'>\n          <h3>Beers</h3>\n        </Col>\n      </Row>\n      <Row>\n        <Col style={{ maxWidth: '35rem', margin: 'auto', textAlign: 'center' }}>\n          <ListGroup variant='flush'>\n            {brewery.beers.map(b =>\n              <ListGroup.Item key={b.id}>\n                  <NavLink to={`/beers/${b.id}`} >{b.name} {b.abv} %</NavLink>\n              </ListGroup.Item>\n            )}\n          </ListGroup>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default Brewery","import React from 'react'\nimport { Row, Col, Jumbotron } from 'react-bootstrap'\nimport Ratings from './Ratings'\n\nconst Beer = ({ beer, ratings }) => {\n  \n  if (!beer) {\n    return null\n  }\n\n  const ratingsToShow = ratings\n    .filter(r => r.beer.id === beer.id)\n\n  const showRatings = () =>\n    <>\n    <Row>\n      <Col className='text-center'>\n        <h3>Ratings</h3>\n      </Col>\n    </Row>\n    <Ratings ratings={ratingsToShow} />\n  </>\n\n  return (\n    <>\n      <Row>\n        <Jumbotron as={Col} className='text-center'>\n          <h2>{beer.name} {beer.abv} %</h2>\n          <h5>{beer.brewery.name}</h5>\n        </Jumbotron>\n      </Row>\n      {ratingsToShow.length > 0\n        ? showRatings()\n        : <h4 className='text-center'>No ratings for this beer</h4>\n      }\n    </>\n  )\n}\n\nexport default Beer","import React from 'react'\nimport { Row, Col, Jumbotron } from 'react-bootstrap'\n\nconst About = () => {\n  return (\n    <>\n      <Row>\n        <Jumbotron as={Col} className='text-center'>\n            <h2>About Bottlestash</h2>\n        </Jumbotron>\n      </Row>\n      <Row>\n        <Col className='maindiv'>\n          <p>\n            Bottlestash is my (Miika Somero) course project for University of\n            Helsinki course <a href='https://fullstackopen.com/' >Full Stack Open 2019</a>.\n          </p>\n          <p>\n            Project is about rehearsing web development with React and Node.js. See source code\n            and documentation from my <a href='https://github.com/MiguelSombrero/bottlestash-app-backend' >Github</a> page\n          </p>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default About","import { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nconst ScrollToTop = ({ children, location: { pathname } }) => {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n  \n  return children || null;\n}\n\nexport default withRouter(ScrollToTop)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { setUserToState } from './reducers/loginReducer'\nimport { getAllUsers } from './reducers/usersReducer'\nimport { getAllBreweries } from './reducers/breweriesReducer'\nimport { getAllBeers } from './reducers/beersReducer'\nimport { getAllRatings } from './reducers/ratingsReducer'\nimport { getAllBottles } from './reducers/bottlesReducer'\nimport { setNotification } from './reducers/notificationReducer'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport Login from './components/Login'\nimport Home from './components/Home'\nimport Navigation from './components/Navigation'\nimport Register from './components/Register'\nimport Stash from './components/Stash'\nimport Footer from './components/Footer'\nimport AddBottle from './components/AddBottle'\nimport Notification from './components/Notification'\nimport Rate from './components/Rate'\nimport Profile from './components/Profile'\nimport SearchResults from './components/SearchResults'\nimport Brewery from './components/Brewery'\nimport Beer from './components/Beer'\nimport About from './components/About'\nimport Ratings from './components/Ratings'\nimport ScrollToTop from './components/ScrollToTop'\n\nimport './App.css'\n\nconst App = (props) => {\n\n  useEffect(() => {\n    const loggedUser = window.localStorage.getItem('loggedBottlestashUser')\n    if (loggedUser) {\n      props.setUserToState(JSON.parse(loggedUser))\n    }\n  }, [])\n\n  useEffect(() => {\n    props.getAllUsers()\n  }, [])\n\n  useEffect(() => {\n    props.getAllBreweries()\n  }, [])\n\n  useEffect(() => {\n    props.getAllBeers()\n  }, [])\n\n  useEffect(() => {\n    props.getAllRatings()\n  }, [])\n\n  useEffect(() => {\n    props.getAllBottles()\n  }, [])\n\n  const userById = (id) => \n    props.users.find(u => u.id === id)\n\n  const breweryById = (id) =>\n    props.breweries.find(b => b.id === id)\n\n  const beerById = (id) =>\n    props.beers.find(b => b.id === id)\n\n  const ratingsByUserId = (id) =>\n    props.ratings.filter(r => r.user.id === id)\n\n  const loggedUser = () =>\n    !props.user ? null : props.users.find(user => user.username === props.user.username)\n\n  return (\n    <>\n      <BrowserRouter>\n        <ScrollToTop />\n        <Navigation\n          user={loggedUser()}\n          setNotification={props.setNotification}\n        />\n        <Notification />\n\n        <Route\n          exact path='/'\n          render={() => \n            <Home\n              user={props.user}\n              bottles={props.bottles}\n              ratings={props.ratings}\n            />\n          }\n        />\n        <Route\n          exact path='/login'\n          render={() => <Login setNotification={props.setNotification} />}\n        />\n        <Route\n          exact path='/register'\n          render={() => <Register setNotification={props.setNotification} />}\n        />\n        <Route\n          exact path='/about'\n          render={() => <About />}\n        />\n        <Route\n          exact path='/search'\n          render={() =>\n            <SearchResults user={props.user} /> }\n        />\n        <Route\n            exact path='/breweries/:id/'\n            render={({ match }) => \n              <Brewery\n                brewery={breweryById(match.params.id)}\n              />\n            }\n          />\n        <Route\n          exact path='/beers/:id/'\n          render={({ match }) => \n            <Beer\n              beer={beerById(match.params.id)}\n              ratings={props.ratings}\n            />\n          }\n        />\n\n        {props.user &&\n        <>  \n          <Route\n            exact path='/bottles'\n            render={() =>\n              <AddBottle\n                breweries={props.breweries}\n                beers={props.beers}\n                user={props.user}\n                setNotification={props.setNotification}\n              />\n            }\n          />\n          <Route\n            exact path='/users/:id/ratings'\n            render={({ match }) =>\n              <Ratings \n                ratings={ratingsByUserId(match.params.id)}\n              /> \n            }\n          />\n          <Route\n            exact path='/rate'\n            render={(props) => <Rate {...props} /> }\n          />\n\n          {loggedUser() &&\n          <Route\n            exact path='/profile'\n            render={() =>\n              <Profile\n                setNotification={props.setNotification}\n                user={loggedUser()}\n              />\n            }\n          />\n          }\n          <Route\n            exact path='/users/:id/stash'\n            render={({ match }) => \n              <Stash\n                userToView={userById(match.params.id)}\n                user={props.user}\n              />\n            }\n          />\n        </>\n        }\n        \n        <Footer />\n      </BrowserRouter>\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    users: state.users,\n    breweries: state.breweries,\n    beers: state.beers,\n    bottles: state.bottles,\n    ratings: state.ratings\n  }\n}\n\nconst mapDispatchToProps = {\n  setUserToState,\n  getAllUsers,\n  getAllBreweries,\n  getAllBeers,\n  getAllRatings,\n  getAllBottles,\n  setNotification\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport loginReducer from './reducers/loginReducer'\nimport usersReducer from './reducers/usersReducer'\nimport beersReducer from './reducers/beersReducer'\nimport breweriesReducer from './reducers/breweriesReducer'\nimport notificationReducer from './reducers/notificationReducer'\nimport ratingsReducer from './reducers/ratingsReducer'\nimport bottlesReducer from './reducers/bottlesReducer'\nimport filterReducer from './reducers/filterReducer'\n\nconst reducer = combineReducers({\n  user: loginReducer,\n  users: usersReducer,\n  beers: beersReducer,\n  breweries: breweriesReducer,\n  notification: notificationReducer,\n  ratings: ratingsReducer,\n  bottles: bottlesReducer,\n  filter: filterReducer\n})\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store} >\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}