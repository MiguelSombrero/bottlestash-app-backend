{"version":3,"sources":["services/login.js","hooks/index.js","reducers/loginReducer.js","reducers/usersReducer.js","reducers/breweriesReducer.js","reducers/ratingsReducer.js","reducers/bottlesReducer.js","reducers/notificationReducer.js","components/Login.js","components/Rating.js","components/Bottle.js","components/Home.js","reducers/filterReducer.js","components/ListSuggestion.js","components/SearchForm.js","components/Navigation.js","components/Register.js","components/BottleDetails.js","components/Bottles.js","components/StashDetails.js","components/Stash.js","components/Footer.js","reducers/beersReducer.js","reducers/picturesReducer.js","components/AddBottle.js","components/Notification.js","services/breweries.js","services/beers.js","components/Rate.js","components/Profile.js","components/SearchResults.js","App.js","store.js","index.js"],"names":["services_login","login","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","credentials","res","wrap","_context","prev","next","axios","post","sent","abrupt","data","stop","_x","apply","this","arguments","token","setToken","newToken","concat","useResource","baseUrl","getAll","get","getOne","_ref2","_callee2","identifier","_context2","create","_ref3","_callee3","resource","config","_context3","headers","Authorization","_x2","createImage","_ref4","_callee4","_context4","content-type","_x3","update","_ref5","_callee5","id","_context5","put","_x4","_x5","remove","_ref6","_callee6","_context6","delete","_x6","useTextField","type","minLength","maxLength","required","length","undefined","_useState","useState","_useState2","slicedToArray","value","setValue","_useState3","_useState4","validationMessage","setValidationMessage","onChange","event","target","onInvalid","useNumberField","min","max","step","_useState5","_useState6","_useState7","_useState8","logoutUser","dispatch","window","localStorage","removeItem","loginReducer","state","action","user","usersService","updateUserToState","username","usersReducer","users","map","u","filter","updatedUser","toConsumableArray","newUser","breweriesService","addBrewery","newBrewery","brewery","breweriesReducer","breweries","ratingsService","ratingsReducer","ratings","rating","bottlesService","bottlesReducer","bottles","newBottle","b","updatedBottle","setNotification","message","notification","setTimeout","notificationReducer","mapDispatchToProps","loginUser","password","loginService","setItem","JSON","stringify","connect","withRouter","props","_useTextField","_useTextField3","handleLogin","preventDefault","history","push","t0","react_default","createElement","Fragment","Row","Jumbotron","as","Col","className","style","maxWidth","margin","Form","onSubmit","Group","Label","Control","assign","placeholder","Button","variant","block","react_router_dom","to","Rating","Card","Header","backgroundColor","color","Title","beer","name","Subtitle","abv","Body","description","Footer","moment","added","fromNow","Bottle","bottle","picture","Img","src","alt","Home","visibleRatings","setVisibleRatings","visibleBottles","setVisibleBottles","byAdded","bottlesToShow","hidden","sort","slice","ratingsToShow","components_Bottle","key","onClick","components_Rating","setFilter","filterReducer","ListSuggestion","suggestions","suggestion","SearchForm","handleSearch","inline","list","components_ListSuggestion","Navbar","collapseOnSelect","expand","bg","Toggle","aria-controls","Collapse","Nav","Link","href","Item","components_SearchForm","e","registerUser","validated","setValidated","_useTextField2","usernameErrors","_useTextField4","passwordErrors","_useTextField5","_useTextField6","nameErrors","_useTextField7","_useTextField8","email","emailErrors","_useTextField9","_useTextField10","city","cityErrors","_useTextField11","_useTextField12","country","countryErrors","setHidden","handleRegister","checkValidity","noValidate","Feedback","Check","checked","label","removeBottle","updateBottle","handleDrink","updateableBottle","objectSpread","count","setShow","Modal","centered","show","onHide","closeButton","price","volume","bottled","expiration","pathname","Bottles","showDetails","setShowDetails","setBottle","stash","Table","hover","responsive","handleShowDetails","components_BottleDetails","StashDetails","Text","reduce","sum","Stash","stashVisible","setStashVisible","userToView","md","justify","components_Bottles","components_StashDetails","beersService","addBeer","newBeer","beersReducer","beers","picturesService","addBottle","addPicture","newPicture","getOneBeer","getOneBrewery","breweryName","isLoading","setIsLoading","setPicture","breweryErrors","_useNumberField","_useNumberField2","abvErrors","_useNumberField3","_useNumberField4","priceErrors","_useNumberField5","_useNumberField6","countErrors","_useNumberField7","_useNumberField8","volumeErrors","_useNumberField9","_useNumberField10","bottledErrors","_useNumberField11","_useNumberField12","expirationErrors","handleAddBottle","breweryId","FormData","append","beerId","pictureId","files","disabled","Alert","services_breweries","services_beers","addRating","beerName","beerErrors","setBeerName","setBreweryName","descriptionErrors","alcohol","alcoholErrors","setAlcohol","ageofbeer","ageofbeerErrors","aroma","taste","appearance","mouthfeel","_useNumberField13","overall","useEffect","location","handleRate","newRating","rows","removeUser","updateUser","setName","setEmail","setCity","setCountry","handleProfileUpdate","updateableUser","handleDelete","confirm","toLowerCase","includes","setUserToState","getAllUsers","getAllBreweries","getAllRatings","getAllBottles","loggedUser","getItem","parse","find","Container","fluid","components_Navigation","components_Notification","react_router","exact","path","render","components_Home","components_Login","components_Register","components_SearchResults","components_AddBottle","components_Rate","components_Profile","match","components_Stash","params","components_Footer","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.75ccd750.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const res = await axios.post(baseUrl, credentials)\n  return res.data\n}\n\nexport default { login }","import { useState } from 'react'\nimport axios from 'axios'\n\nlet token = null\n\nexport const setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nexport const useResource = (baseUrl) => {\n\n  const getAll = async () => {\n    const res = await axios.get(baseUrl)\n    return res.data\n  }\n\n  const getOne = async identifier => {\n    const res = await axios.get(`${baseUrl}/${identifier}`)\n    return res.data\n  }\n\n  const create = async (resource) => {\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    }\n    const res = await axios.post(baseUrl, resource, config)\n    return res.data\n  }\n\n  const createImage = async (resource) => {\n    const config = {\n      headers: {\n        Authorization: token,\n        'content-type': 'multipart/form-data'\n      }\n    }\n    const res = await axios.post(baseUrl, resource, config)\n    return res.data\n  }\n\n  const update = async (id, resource) => {\n    const config = {\n      headers: { Authorization: token }\n    }\n    const res = await axios.put(`${baseUrl}/${id}`, resource, config)\n    return res.data\n  }\n\n  const remove = async id => {\n    const config = {\n      headers: { Authorization: token }\n    }\n    const res = await axios.delete(`${baseUrl}/${id}`, config)\n    return res.data\n  }\n\n  return  {\n    create, createImage, getAll, getOne, update, remove\n  }\n}\n\nexport const useTextField = (type, minLength, maxLength, required = false) => {\n  const [value, setValue] = useState('')\n  const [validationMessage, setValidationMessage] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  const onInvalid = (event) => {\n    setValidationMessage(event.target.validationMessage)\n  }\n\n  const setDefaultValue = (value) => {\n    setValue(value)\n  }\n\n  return [\n    {\n      type, minLength, maxLength, required, value, onChange, onInvalid\n    },\n    validationMessage,\n    setDefaultValue\n  ]\n}\n\nexport const useNumberField = (type, min, max, step = 1, required = false) => {\n  const [value, setValue] = useState('')\n  const [validationMessage, setValidationMessage] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  const onInvalid = (event) => {\n    setValidationMessage(event.target.validationMessage)\n  }\n\n  const setDefaultValue = (value) => {\n    setValue(value)\n  }\n\n  return [\n    {\n      type, min, max, step, required, value, onChange, onInvalid\n    },\n    validationMessage,\n    setDefaultValue\n  ]\n}","import loginService from '../services/login'\nimport { setToken } from '../hooks/'\n\nconst initialState = null\n\nconst loginReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return action.user\n    case 'LOGOUT':\n      return null\n    default:\n      return state\n  }\n}\n\nexport const loginUser = (username, password) => {\n  return async dispatch => {\n    const user = await loginService.login({\n      username, password\n    })\n\n    window.localStorage.setItem('loggedBottlestashUser', JSON.stringify(user))\n    setToken(user.token)\n\n    dispatch({\n      type: 'LOGIN',\n      user\n    })\n  }\n}\n\nexport const logoutUser = () => {\n  return async dispatch => {\n    window.localStorage.removeItem('loggedBottlestashUser')\n    setToken(null)\n\n    dispatch({\n      type: 'LOGOUT'\n    })\n  }\n}\n\nexport const setUserToState = user => {\n  return async dispatch => {\n    setToken(user.token)\n\n    dispatch({\n      type: 'LOGIN',\n      user\n    })\n  }\n}\n\nexport default loginReducer","import { useResource } from '../hooks'\n\nconst usersService = useResource('/api/users')\n\nconst usersReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'GET_USERS':\n      return action.users\n    case 'UPDATE_USER_TO_STATE':\n      return state.map(u => u.id !== action.user.id ? u : action.user)\n    case 'REMOVE_USER':\n      return state.filter(u => u.id !== action.id)\n    case 'UPDATE_USER':\n      return state.map(u => u.id === action.updatedUser.id ? action.updatedUser : u)\n    case 'REGISTER_USER':\n      return [...state, action.newUser ]\n    default:\n      return state\n  }\n}\n\nexport const getAllUsers = () => {\n  return async dispatch => {\n    const users = await usersService.getAll()\n\n    dispatch({\n      type: 'GET_USERS',\n      users\n    })\n  }\n}\n\n// poista tämä kun AddBottle ja BottleDetails viewissä ei ole enää riippuvuuutta\nexport const updateUserToState = username => {\n  return async dispatch => {\n    const user = await usersService.getOne(username)\n\n    dispatch({\n      type: 'UPDATE_USER_TO_STATE',\n      user\n    })\n\n    return user\n  }\n}\n\nexport const registerUser = user => {\n  return async dispatch => {\n    const newUser = await usersService.create(user)\n\n    dispatch({\n      type: 'REGISTER_USER',\n      newUser\n    })\n  }\n}\n\nexport const removeUser = id => {\n  return async dispatch => {\n    await usersService.remove(id)\n\n    dispatch({\n      type: 'REMOVE_USER',\n      id\n    })\n  }\n}\n\nexport const updateUser = (id, user) => {\n  return async dispatch => {\n    const updatedUser = await usersService.update(id, user)\n\n    dispatch({\n      type: 'UPDATE_USER',\n      updatedUser\n    })\n  }\n}\n\nexport default usersReducer","import { useResource } from '../hooks'\n\nconst breweriesService = useResource('/api/breweries')\n\nconst breweriesReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'GET_BREWERIES':\n        return action.breweries\n      case 'ADD_BREWERY':\n        return [...state, action.brewery ]\n      default:\n        return state\n    }\n  }\n  \n  export const getAllBreweries = () => {\n    return async dispatch => {\n      const breweries = await breweriesService.getAll()\n  \n      dispatch({\n        type: 'GET_BREWERIES',\n        breweries\n      })\n    }\n  }\n\n  export const getOneBrewery = breweryName => {\n    return async dispatch => {\n      const brewery = await breweriesService.getOne(breweryName)\n      return brewery\n    }\n  }\n  \n  export const addBrewery = newBrewery => {\n    return async dispatch => {\n      const brewery = await breweriesService.create(newBrewery)\n  \n      dispatch({\n        type: 'ADD_BREWERY',\n        brewery\n      })\n\n      return brewery\n    }\n  }\n\n  export default breweriesReducer","import { useResource } from '../hooks'\n\nconst ratingsService = useResource('/api/ratings')\n\nconst ratingsReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'GET_RATINGS':\n        return action.ratings\n      case 'ADD_RATING':\n        return [...state, action.rating ]\n      default:\n        return state\n    }\n  }\n  \n  export const getAllRatings = () => {\n    return async dispatch => {\n      const ratings = await ratingsService.getAll()\n\n      dispatch({\n        type: 'GET_RATINGS',\n        ratings\n      })\n    }\n  }\n  \n  export const addRating = ratings => {\n    return async dispatch => {\n      const rating = await ratingsService.create(ratings)\n  \n      dispatch({\n        type: 'ADD_RATING',\n        rating\n      })\n    }\n  }\n\n  export default ratingsReducer","import { useResource } from '../hooks'\n\nconst bottlesService = useResource('/api/bottles')\n\nconst bottlesReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'GET_BOTTLES':\n      return action.bottles\n    case 'ADD_BOTTLE':\n      return [...state, action.newBottle ]\n    case 'REMOVE_BOTTLE':\n      return state.filter(b => b.id !== action.id)\n    case 'UPDATE_BOTTLE':\n      return state.map(b => b.id === action.updatedBottle.id ? action.updatedBottle : b)\n    default:\n      return state\n  }\n}\n\nexport const getAllBottles = () => {\n  return async dispatch => {\n    const bottles = await bottlesService.getAll()\n\n    dispatch({\n      type: 'GET_BOTTLES',\n      bottles\n    })\n  }\n}\n\nexport const addBottle = bottle => {\n  return async dispatch => {\n    const newBottle = await bottlesService.create(bottle)\n\n    dispatch({\n      type: 'ADD_BOTTLE',\n      newBottle\n    })\n  }\n}\n\nexport const removeBottle = id => {\n  return async dispatch => {\n    await bottlesService.remove(id)\n\n    dispatch({\n      type: 'REMOVE_BOTTLE',\n      id\n    })\n  }\n}\n\nexport const updateBottle = (id, bottle) => {\n  return async dispatch => {\n    const updatedBottle = await bottlesService.update(id, bottle)\n\n    dispatch({\n      type: 'UPDATE_BOTTLE',\n      updatedBottle\n    })\n  }\n}\n\nexport default bottlesReducer","\nconst notificationReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_NOTIFICATION':\n      return action.notification\n    case 'CLEAR_NOTIFICATION':\n      return null\n    default:\n      return state\n  }\n}\n\nexport const setNotification = (message, type='success') => {\n  return async dispatch => {\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      notification: { message, type }\n    })\n    setTimeout(() => {\n      dispatch({\n        type: 'CLEAR_NOTIFICATION'\n      })\n    }, 4000)\n  }\n}\n\nexport default notificationReducer","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { Form, Button, Row, Col, Jumbotron } from 'react-bootstrap'\nimport { loginUser } from '../reducers/loginReducer'\nimport { Link } from 'react-router-dom'\nimport { useTextField } from '../hooks'\n\nconst Login = (props) => {\n  const [username] = useTextField('text', 5, 20, true)\n  const [password] = useTextField('password', 5, 20, true)\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    \n    try {\n      await props.loginUser(username.value, password.value)\n      props.history.push('/')\n    } catch (exception) {\n      props.setNotification('Login failed', 'error')\n    }\n  }\n\n  return (\n    <>\n      <Row>\n        <Jumbotron as={Col} className='text-center'>\n          <h2>Login to Bottlestash</h2>\n        </Jumbotron>\n      </Row>\n      <Row id='loginForm' >\n        <Col style={{ maxWidth: '25rem', margin: 'auto' }}>\n          <Form onSubmit={handleLogin} >\n            <Form.Group  >\n              <Form.Label>Username</Form.Label>\n              <Form.Control {...username} placeholder='username' />\n            </Form.Group>\n            <Form.Group >\n              <Form.Label>Password</Form.Label>\n              <Form.Control {...password} placeholder='password' />\n            </Form.Group>\n            <Button id='login' variant='success' type='submit' block >Login</Button>\n          </Form>\n        </Col>\n      </Row>\n      <Row className='m-2 p-2'>\n        <Col style={{ maxWidth: '20rem', margin: 'auto' }}>\n          <small>\n            Not yet a member? \n            <Link to='/register'> Register here</Link>\n          </small>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nconst mapDispatchToProps = {\n  loginUser\n}\n\nexport default connect(null, mapDispatchToProps)(withRouter(Login))","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport { NavLink } from 'react-router-dom'\nimport moment from 'moment'\n\nconst Rating = ({ rating }) => {\n  return (\n    <Card className='text-center p-2 m-2'>\n      <Card.Header style={{ backgroundColor: 'rgb(52, 58, 64)', color: 'rgb(255, 172, 65)' }}>\n        <Card.Title>{rating.beer.brewery.name}</Card.Title>\n        <Card.Subtitle>{rating.beer.name}, {rating.beer.abv} %</Card.Subtitle>\n      </Card.Header>\n      <Card.Body>\n        <blockquote>\n          {rating.description}\n        </blockquote>\n      </Card.Body>\n      <Card.Footer>\n        <small className='text-muted'>\n          by <NavLink to={`/users/${rating.user.id}/stash`} >{rating.user.name}</NavLink>, {moment(rating.added).fromNow()}\n        </small>\n      </Card.Footer>\n    </Card>\n  )\n}\n\nexport default Rating","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Card } from 'react-bootstrap'\nimport moment from 'moment'\n\nconst Bottle = ({ bottle }) => {\n  if (!bottle) {\n    return null\n  }\n\n  return (\n    <Card className='p-2 m-2 text-center'>\n      <Card.Header style={{ backgroundColor: 'rgb(52, 58, 64)', color: 'rgb(255, 172, 65)' }}>\n        <Card.Title>{bottle.beer.brewery.name} </Card.Title>\n        <Card.Subtitle>{bottle.beer.name}, {bottle.beer.abv} %</Card.Subtitle>\n      </Card.Header>\n      <Card.Body>\n        {bottle.picture &&\n          <Card.Img src={`/api/pictures/${bottle.picture}`} className='img-thumbnail' alt='' />\n        }\n      </Card.Body>\n      <Card.Footer>\n        <small className='text-muted'>\n          by <NavLink to={`/users/${bottle.user.id}/stash`} >{bottle.user.name}</NavLink>, {moment(bottle.added).fromNow()}\n        </small>\n      </Card.Footer>\n    </Card>\n  )\n}\n\nexport default Bottle","import React, { useState } from 'react'\nimport { Jumbotron, Row, Col, Button } from 'react-bootstrap'\nimport Rating from './Rating'\nimport Bottle from './Bottle'\n\nconst Home = (props) => {\n  const [visibleRatings, setVisibleRatings] = useState(6)\n  const [visibleBottles, setVisibleBottles] = useState(6)\n\n  const handleSetVisibleRatings = () => {\n    setVisibleRatings(visibleRatings + 6)\n  }\n\n  const handleSetVisibleBottles = () => {\n    setVisibleBottles(visibleBottles + 6)\n  }\n\n  const byAdded = (a, b) => b.added > a.added ? 1 : -1\n\n  const bottlesToShow = props.bottles\n    .filter(b => !b.user.hidden)\n    .sort(byAdded)\n    .slice(0, visibleBottles)\n\n  const ratingsToShow = props.ratings\n    .sort(byAdded)\n    .slice(0, visibleRatings)\n  \n  return (\n    <>\n      <Row>\n        <Jumbotron as={Col} className='text-center'>\n          <h1>Bottlestash</h1>\n          <h5>Cooler than wine cellar - wetter than Finnish summer</h5>\n        </Jumbotron>\n      </Row>\n\n      {!props.user &&\n      <>\n      <Row>\n        <Col className='maindiv' >\n          <h2 className='mb-5'>Bottlestash, you say?</h2>\n          <h4>That's right!</h4>\n          <p>\n            With Bottlestash you can keep track of your beer cellar - \n            what beer do you have, how many and when to drink them!\n          </p>\n        </Col>\n      </Row>\n      <Row>\n        <Col className='maindiv' >\n          <h3 className='mb-2'>Main features:</h3>\n            <p>Save bottles to your stash</p>\n            <p>Keep track of your beers expiration</p>\n            <p>Rate beers you drink</p>\n            <p>Peek other user's cellars</p>\n        </Col>\n      </Row>\n      </>\n      }\n\n      {props.user &&\n      <>\n      <Row>\n        <Col className='text-center' >\n          <h5>Recently added bottles:</h5>\n        </Col>\n      </Row>\n      <Row>\n        <Col style={{ maxWidth: '35rem', margin: 'auto' }} >\n          {bottlesToShow.map(b =>\n            <Bottle key={b.id} bottle={b} ></Bottle>\n          )}\n        </Col>\n      </Row>\n      <Row>\n        <Col className='d-flex justify-content-center mb-5'>\n          {props.bottles.length > visibleBottles &&\n            <Button onClick={handleSetVisibleBottles}>Load more ...</Button>\n          }\n        </Col>\n      </Row>\n      <Row>\n        <Col className='text-center'>\n          <h4>Recently added ratings:</h4>\n        </Col>\n      </Row>\n      <Row>\n        <Col style={{ maxWidth: '35rem', margin: 'auto' }}>\n          {ratingsToShow.map(rating =>\n            <Rating key={rating.id} rating={rating} ></Rating>\n          )}\n        </Col>\n      </Row>\n      <Row>\n        <Col className='d-flex justify-content-center mb-5'>\n          {props.ratings.length > visibleRatings &&\n            <Button onClick={handleSetVisibleRatings}>Load more ...</Button>\n          }\n        </Col>\n      </Row>\n      </>\n      }\n    </>\n    \n  )\n}\n\nexport default Home","\nconst filterReducer = (state = null, action) => {\n    switch (action.type) {\n      case 'SET_FILTER':\n        return action.filter\n      default:\n        return state\n    }\n  }\n  \n  export const setFilter = filter => {\n    return {\n      type: 'SET_FILTER',\n      filter\n    }\n  }\n  \n  export default filterReducer","import React from 'react'\n\nconst ListSuggestion = (props) => {\n  return (\n    <datalist id={props.id} >\n      {props.suggestions.map(suggestion => \n        <option key={suggestion} value={suggestion} ></option>\n      )}\n    </datalist>\n  )\n}\n\nexport default ListSuggestion","import React from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport ListSuggestion from './ListSuggestion'\n\nconst SearchForm = (props) => {\n  return (\n    <Form onSubmit={props.handleSearch} inline>\n      <Form.Control list={props.id} name='filter' type ='text' className='p-2 m-2' placeholder='search for bottles ...'></Form.Control>\n        <ListSuggestion\n          suggestions={props.suggestions}\n          id={props.id}\n        />\n      <Button type='submit'>Search</Button>\n    </Form>\n  )\n}\n\nexport default SearchForm","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { NavLink } from 'react-router-dom'\nimport { Navbar, Nav, Row } from 'react-bootstrap'\nimport { logoutUser } from '../reducers/loginReducer'\nimport { setFilter } from '../reducers/filterReducer'\nimport SearchForm from './SearchForm'\n\nconst Navigation = (props) => {\n\n  const handleLogout = () => {\n    props.logoutUser()\n    props.setNotification('Logout was successfull')\n    props.history.push('/')\n  }\n\n  const handleSearch = (e) => {\n    e.preventDefault()\n    props.setFilter(e.target.filter.value)\n    e.target.filter.value = ''\n    props.history.push('/search')\n  }\n\n  return (\n    <Navbar as={Row} collapseOnSelect expand='lg' bg='dark' variant='dark'>\n      <Navbar.Toggle aria-controls='responsive-navbar-nav' />\n      <Navbar.Collapse id='responsive-navbar-nav'>\n        <Nav className='mr-auto'>\n          <Nav.Link href='#' as='span'>\n            <NavLink to='/' >Home</NavLink>\n          </Nav.Link>\n\n          {!props.user &&\n            <>\n              <Nav.Link href='#' as='span'>\n                <NavLink to='/login' >Login</NavLink>\n              </Nav.Link>\n              <Nav.Link href='#' as='span'>\n                <NavLink to='/register' >Create account</NavLink>\n              </Nav.Link>\n            </>\n          }\n\n          {props.user &&\n            <>\n              <Nav.Link href='#' as='span'>\n                <NavLink to={`/users/${props.user.id}/stash`} >Manage stash</NavLink>\n              </Nav.Link>\n              <Nav.Link href='#' as='span'>\n                <NavLink to='/rate' >Rate beer</NavLink>\n              </Nav.Link>\n              <Nav.Link href='#' as='span'>\n                <NavLink to='/profile' >Profile</NavLink>\n              </Nav.Link>\n              <Nav.Link href='#' as='span'>\n                <Nav.Item onClick={handleLogout} >Logout</Nav.Item>\n              </Nav.Link>\n            </>\n          }\n        </Nav>\n\n        {props.user &&\n          <SearchForm\n            handleSearch={handleSearch}\n            suggestions={props.suggestions}\n            id='search'\n          />\n        }\n      </Navbar.Collapse>\n    </Navbar>\n  )\n}\n\nconst mapDispatchToProps = {\n  logoutUser, setFilter\n}\n\nexport default connect(null, mapDispatchToProps)(withRouter(Navigation))","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { Form, Button, Row, Col, Jumbotron } from 'react-bootstrap'\nimport { registerUser } from '../reducers/usersReducer'\nimport { useTextField } from '../hooks'\n\nconst Register = (props) => {\n  const [validated, setValidated] = useState(false)\n  const [username, usernameErrors] = useTextField('text', 5, 20, true)\n  const [password, passwordErrors] = useTextField('password', 5, 20, true)\n  const [name, nameErrors] = useTextField('text', 1, 20, true)\n  const [email, emailErrors] = useTextField('text', 1, 50, true)\n  const [city, cityErrors] = useTextField('text', 1, 50, false)\n  const [country, countryErrors] = useTextField('text', 1, 20, false)\n  const [hidden, setHidden] = useState(false)\n\n  const handleRegister = async (event) => {\n    event.preventDefault()\n    setValidated(true)\n\n    if (!event.target.checkValidity()) {\n      return\n    }\n    \n    try {\n      await props.registerUser({\n        username: username.value,\n        password: password.value,\n        name: name.value,\n        email: email.value,\n        city: city.value,\n        country: country.value,\n        hidden\n      })\n  \n      props.setNotification('User registration was succesfull')\n      props.history.push('/login')\n    \n    } catch (exception) {\n      props.setNotification('User registration failed', 'error')\n    }  \n  }\n\n  return (\n    <>\n      <Row>\n        <Jumbotron as={Col} className='text-center'>\n          <h2>Register to Bottlestash</h2>\n        </Jumbotron>\n      </Row>\n      <Row className='mb-3'>\n        <Col style={{ maxWidth: '25rem', margin: 'auto' }}>\n          <Form noValidate validated={validated} onSubmit={handleRegister} id='registerForm' >\n            <Form.Group >\n              <Form.Label >Username</Form.Label>\n              <Form.Control {...username} placeholder='username' />\n              <Form.Control.Feedback type='invalid' >{usernameErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Password</Form.Label>\n              <Form.Control {...password} placeholder='password' />\n              <Form.Control.Feedback type='invalid' >{passwordErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Name</Form.Label>\n              <Form.Control {...name} placeholder='name to show other users' />\n              <Form.Control.Feedback type='invalid' >{nameErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Email</Form.Label>\n              <Form.Control {...email} placeholder='email' />\n              <Form.Control.Feedback type='invalid' >{emailErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Row>\n              <Form.Group as={Col} className='p-2'>\n                <Form.Label>City</Form.Label>\n                <Form.Control {...city} placeholder='what city your stash at' />\n                <Form.Control.Feedback type='invalid' >{cityErrors}</Form.Control.Feedback>\n              </Form.Group >\n              <Form.Group as={Col} className='p-2'>\n                <Form.Label>Country</Form.Label>\n                <Form.Control {...country} placeholder='what country your stash at' />\n                <Form.Control.Feedback type='invalid' >{countryErrors}</Form.Control.Feedback>\n              </Form.Group>\n            </Form.Row>\n            <Form.Group>\n              <Form.Check\n                type='checkbox'\n                onChange={({ target }) => setHidden(target.checked)}\n                label='I want my stash to be private' />\n            </Form.Group>\n            <Button variant='success' type='submit' block>Register</Button>\n          </Form>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nconst mapDispatchToProps = {\n  registerUser\n}\n\nexport default connect(null, mapDispatchToProps)(withRouter(Register))","import React from 'react'\nimport { Modal, Button } from 'react-bootstrap'\nimport { NavLink } from 'react-router-dom'\nimport { updateUserToState } from '../reducers/usersReducer'\nimport { setNotification } from '../reducers/notificationReducer'\nimport { removeBottle, updateBottle } from '../reducers/bottlesReducer'\nimport { connect } from 'react-redux'\n\nconst BottleDetails = (props) => {\n  if (!props.bottle) {\n    return null\n  }\n  const bottle = props.bottle\n\n  const handleDrink = async () => {\n    try {\n      const updateableBottle = { ...bottle,\n        beer: bottle.beer.id,\n        count: bottle.count - 1\n      }\n\n      if (bottle.count < 2) {\n        await props.removeBottle(bottle.id)\n        props.setNotification(`This was your last bottle of ${bottle.beer.name}`)\n      } else {\n        await props.updateBottle(bottle.id, updateableBottle)\n        props.setNotification(`You drinked one bottle of ${bottle.beer.brewery.name} ${bottle.beer.name}`)\n      }\n    \n      props.updateUserToState(props.user.username)\n      props.setShow(false)\n          \n    } catch (exception) {\n      props.setNotification('Bottle update failed!', 'error')\n    }\n  }\n    \n  return (\n    <Modal centered show={props.show} onHide={() => props.setShow(false)}>\n      <Modal.Header closeButton>\n        <Modal.Title>{bottle.beer.brewery.name}, {bottle.beer.name}, {bottle.beer.abv} %</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>Price {bottle.price} &euro;</p>\n        <p>Volume {bottle.volume} litres</p>\n        <p>Bottled {bottle.bottled}</p>\n        <p>Expires {bottle.expiration}</p>\n        <p>You have {bottle.count} bottles left</p>\n      </Modal.Body>\n      <Modal.Footer>\n        <NavLink onClick={handleDrink} to={{ pathname: '/rate', state: { bottle }}} >Drink and rate!</NavLink>\n        <Button onClick={handleDrink} variant='light'>Just drink!</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nconst mapDispatchToProps = {\n  removeBottle,\n  updateBottle,\n  updateUserToState,\n  setNotification\n}  \n\nexport default connect(null, mapDispatchToProps)(BottleDetails)","import React, { useState } from 'react'\nimport { Col, Table } from 'react-bootstrap'\nimport BottleDetails from './BottleDetails'\n\nconst Bottles = (props) => {\n  const [showDetails, setShowDetails] = useState(false)\n  const [bottle, setBottle] = useState(null)\n\n  if (!props.stash) {\n    return null\n  }\n\n  const handleShowDetails = (b) => {\n    setBottle(b)\n    setShowDetails(true)\n  }\n\n  return (\n    <Col>\n      <Table hover responsive>\n        <thead>\n          <tr>\n            <th>Count</th>\n            <th>Brewery</th>\n            <th>Beer</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.stash.map(b => \n            <tr\n              key={b.id}\n              onClick={() => handleShowDetails(b)}\n            >\n              <td>{b.count}</td>\n              <td>{b.beer.brewery.name}</td>\n              <td>{b.beer.name}, {b.beer.abv} %</td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n      <BottleDetails show={showDetails} setShow={setShowDetails} bottle={bottle} user={props.user} ></BottleDetails>\n    </Col>\n  )\n}\n\nexport default Bottles","import React from 'react'\nimport { Col, Card } from 'react-bootstrap'\n\nconst StashDetails = ({ stash }) => {\n  return (\n    <Col>\n      <Card>\n        <Card.Header>\n          <Card.Title>Click here to see details of your stash</Card.Title>\n        </Card.Header>\n        <Card.Body >\n          <Card.Text>You have {stash.length} different beers in your stash</Card.Text>\n          <Card.Text>You have {stash.reduce((sum, bottle) => sum + bottle.count, 0)} bottles in your stash</Card.Text>\n          <Card.Text>Your stash costs {stash.reduce((sum, bottle) => sum + bottle.price, 0)}</Card.Text>\n          <Card.Text>Your stash has {stash.reduce((sum, bottle) => sum + bottle.volume, 0)} beer</Card.Text>\n        </Card.Body>\n      </Card>\n    </Col>\n  )\n}\n\nexport default StashDetails","import React, { useState } from 'react'\nimport { Row, Col, Jumbotron, Nav } from 'react-bootstrap'\nimport { NavLink } from 'react-router-dom'\nimport Bottles from './Bottles'\nimport StashDetails from './StashDetails'\n\nconst Stash = (props) => {\n  const [stashVisible, setStashVisible ] = useState(false)\n\n  if (!props.userToView) {\n    return null\n  }\n\n  const stash = props.userToView.stash\n\n  return (\n    <>\n      <Row>\n        <Jumbotron as={Col} className='text-center'>\n          <h2>{props.userToView.name} 's Stash</h2>\n        </Jumbotron>\n      </Row>\n\n      {props.userToView.username === props.user.username && props.userToView.hidden &&\n      <Row>\n        <Col className='p-2 text-center'>\n          <p>\n            Your stash is hidden and won't show to other users.\n            If you wan't to make it visible to other users, please\n            update visibility settings in your profile\n          </p>\n        </Col>\n      </Row>\n      }\n\n      {props.userToView.username !== props.user.username && props.userToView.hidden &&\n      <Row>\n        This stash is private and cannot be peeked - sorry! \n      </Row>\n      }\n\n      {(props.userToView.username === props.user.username || !props.userToView.hidden) &&\n      <Row>\n        <Col md={3} style={{ maxWidth: '15rem' }} >\n          <Nav justify className='flex-column'>\n            <Nav.Link onClick={() => setStashVisible(!stashVisible)} as='span' className='p-2'>\n              Stash details\n            </Nav.Link>\n            <Nav.Link as='span' className='p-2'>\n              <NavLink to='/bottles'>Add new bottle</NavLink>\n            </Nav.Link>\n          </Nav>\n        </Col>\n        {!stashVisible &&\n          <Bottles stash={stash} user={props.user} ></Bottles>\n        }\n        {stashVisible &&\n          <StashDetails stash={stash}></StashDetails>\n        }\n      </Row>\n      }\n    </>\n  )\n}\n\nexport default (Stash)","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Row, Col, Jumbotron, Nav } from 'react-bootstrap'\n\nconst Footer = (props) => {\n  return (\n    <>\n      <Row>\n        <Jumbotron className='text-center' as={Col}>\n          <Nav className=\"justify-content-center mb-5\">\n            <Nav.Item>\n              <NavLink to='/' >Home</NavLink>\n            </Nav.Item>\n            <Nav.Item>\n              <NavLink to='/' >Home</NavLink>\n            </Nav.Item>\n            <Nav.Item>\n              <NavLink to='/' >Home</NavLink>\n            </Nav.Item>\n          </Nav>\n        <p>&copy; Miika Somero 2019</p>\n      </Jumbotron>\n      </Row>\n    </>\n  )\n}\n\nexport default Footer","import { useResource } from '../hooks'\n\nconst beersService = useResource('/api/beers')\n\nconst beersReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'GET_BEERS':\n        return action.beers\n      case 'ADD_BEER':\n        return [...state, action.beer ]\n      default:\n        return state\n    }\n  }\n  \n  export const getAllBeers = () => {\n    return async dispatch => {\n      const beers = await beersService.getAll()\n  \n      dispatch({\n        type: 'GET_BEERS',\n        beers\n      })\n    }\n  }\n\n  export const getOneBeer = (brewery, name, abv) => {\n    return async dispatch => {\n      const beer = await beersService.getOne(`${brewery}/${name}/${abv}`)\n      return beer\n    }\n  }\n  \n  export const addBeer = newBeer => {\n    return async dispatch => {\n      const beer = await beersService.create(newBeer)\n  \n      dispatch({\n        type: 'ADD_BEER',\n        beer\n      })\n\n      return beer\n    }\n  }\n\n  export default beersReducer","import { useResource } from '../hooks'\n\nconst picturesService = useResource('/api/pictures')\n\nconst picturesReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'GET_PICTURE':\n        return [...state, action.picture ]\n      default:\n        return state\n    }\n  }\n  \n  export const getOnePicture = id => {\n    return async dispatch => {\n      const picture = await picturesService.getOne(id)\n      \n      dispatch({\n        type: 'GET_PICTURE',\n        picture\n      })\n    }\n  }\n  \n  export const addPicture = newPicture => {\n    return async dispatch => {\n      const picture = await picturesService.createImage(newPicture)\n      return picture\n    }\n  }\n\n  export default picturesReducer","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { addBeer, getOneBeer } from '../reducers/beersReducer'\nimport { addBrewery, getOneBrewery } from '../reducers/breweriesReducer'\nimport { addBottle } from '../reducers/bottlesReducer'\nimport { addPicture } from '../reducers/picturesReducer'\nimport { updateUserToState } from '../reducers/usersReducer'\nimport { withRouter } from 'react-router-dom'\nimport { Row, Col, Jumbotron, Form, Button } from 'react-bootstrap'\nimport { useTextField, useNumberField } from '../hooks'\nimport ListSuggestion from './ListSuggestion'\n\nconst AddBottle = (props) => {\n  const [validated, setValidated] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [picture, setPicture] = useState(null)\n  const [breweryName, breweryErrors] = useTextField('text', 1, 50, true)\n  const [name, nameErrors] = useTextField('text', 1, 50, true)\n  const [abv, abvErrors] = useNumberField('number', 0, 100, 0.1, true)\n  const [price, priceErrors] = useNumberField('number', 0, 1000, 0.01)\n  const [count, countErrors] = useNumberField('number', 0, 50, 1, true)\n  const [volume, volumeErrors] = useNumberField('number', 0, 10, 0.01)\n  const [bottled, bottledErrors] = useNumberField('date', '1990-01-01', '2050-01-01', 1)\n  const [expiration, expirationErrors] = useNumberField('date', '1990-01-01', '2050-01-01', 1)\n  \n  const handleAddBottle = async (event) => {\n    event.preventDefault()\n    setValidated(true)\n\n    if (!event.target.checkValidity()) {\n      return\n    }\n\n    setIsLoading(true)\n\n    try {\n      let brewery = await props.getOneBrewery(breweryName.value)\n      \n      if (!brewery) {\n        brewery = await props.addBrewery({ name: breweryName.value })\n      }\n\n      let beer = await props.getOneBeer(brewery.id, name.value, abv.value)\n\n      if (!beer) {\n        beer = await props.addBeer({ breweryId: brewery.id, name: name.value, abv: abv.value })\n      }\n\n      let newPicture = null\n\n      if (picture) {\n        let data = new FormData()\n        data.append('picture', picture)\n        newPicture = await props.addPicture(data)\n      }\n\n      await props.addBottle({\n        price: price.value,\n        count: count.value,\n        volume: volume.value,\n        bottled: bottled.value,\n        expiration: expiration.value,\n        beerId: beer.id,\n        pictureId: newPicture ? newPicture.id : null\n      })\n\n      // tämän voisi muuttaa niin, että yllä oleva pullo lisätään käyttäjän\n      // stashiin ja käyttäjä viedään tilaan, ilman että haetaan tietokannasta\n      const user = await props.updateUserToState(props.user.username)\n\n      setIsLoading(false)\n      props.setNotification('Added bottle succesfully')\n      props.history.push(`/users/${user.id}/stash`)\n      \n    } catch (exception) {\n      props.setNotification('Adding bottle failed - sorry!', 'error')\n    }\n  }\n\n  return (\n    <>\n      <Row>\n        <Jumbotron as={Col} className='text-center'>\n          <h2>Add new bottle to your stash</h2>\n        </Jumbotron>\n      </Row>\n      <Row className='mb-3'>\n        <Col style={{ maxWidth: '25rem', margin: 'auto' }}>\n          <Form noValidate validated={validated} onSubmit={handleAddBottle} id='addBottleForm' >\n            <Form.Group >\n            <Form.Label>Brewery</Form.Label>\n              <Form.Control {...breweryName} list='breweriesAsList' placeholder='name of the brewery' />\n              <ListSuggestion suggestions={props.breweries} id='breweriesAsList' />\n              <Form.Control.Feedback type='invalid' >{breweryErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Name</Form.Label>\n              <Form.Control {...name} placeholder='name of your beer' />\n              <Form.Control.Feedback type='invalid' >{nameErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Abv</Form.Label>\n              <Form.Control {...abv} placeholder='alcohol %' />\n              <Form.Control.Feedback type='invalid' >{abvErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Count</Form.Label>\n              <Form.Control {...count} placeholder='number of bottles to save' />\n              <Form.Control.Feedback type='invalid' >{countErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Volume</Form.Label>\n              <Form.Control {...volume} placeholder='volume of the bottle in litres' />\n              <Form.Control.Feedback type='invalid' >{volumeErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Price</Form.Label>\n              <Form.Control {...price} placeholder='price of an one bottle' />\n              <Form.Control.Feedback type='invalid' >{priceErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Row>\n              <Form.Group style={{ maxWidth: '50%' }} className=' p-2'>\n                <Form.Label>Bottled</Form.Label>\n                <Form.Control {...bottled} placeholder='day beer was bottled' />\n                <Form.Control.Feedback type='invalid' >{bottledErrors}</Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group style={{ maxWidth: '50%' }} className='p-2'>\n                <Form.Label>Expiration</Form.Label>\n                <Form.Control {...expiration} placeholder='expiration day of bottles' />\n                <Form.Control.Feedback type='invalid' >{expirationErrors}</Form.Control.Feedback>\n              </Form.Group>\n            </Form.Row>\n            <Form.Group className='custom-file mb-4 p-2'>\n              <Form.Label className='custom-file-label'>Click to add pic of your bottle</Form.Label>\n              <Form.Control\n                name='picture'\n                className='custom-file-input'\n                type='file'\n                onChange={({ target }) => setPicture(target.files[0])}\n              />\n              {picture &&\n              <Form.Text className='text-center'>{picture.name}</Form.Text>\n              }\n            </Form.Group>\n            <Button\n              variant='success'\n              type='submit'\n              block\n              disabled={isLoading}\n              \n              > {isLoading ? 'Loading ...' : 'Add beer'}\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nconst mapDispatchToProps = {\n  addBeer,\n  addBrewery,\n  addBottle,\n  addPicture,\n  getOneBeer,\n  getOneBrewery,\n  updateUserToState\n}\n\nexport default connect(null, mapDispatchToProps)(withRouter(AddBottle))","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Row, Alert, Col } from 'react-bootstrap'\n\nconst Notification = (props) => {\n  if (!props.notification) {\n    return null\n  }\n\n  return (\n    <Row>\n      <Alert as={Col} className='text-center col-12' variant={props.notification.type === 'success' ? 'success' : 'danger'}>\n        {props.notification.message}\n      </Alert>\n    </Row>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification\n  }\n}\n\nexport default connect(mapStateToProps)(Notification)","import axios from 'axios'\nconst baseUrl = '/api/breweries'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const res = await axios.get(baseUrl)\n  return res.data\n}\n\nconst getOne = async name => {\n  const res = await axios.get(`${baseUrl}/${name}`)\n  return res.data\n}\n\nconst create = async brewery => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const res = await axios.post(baseUrl, brewery, config)\n  return res.data\n}\n\nexport default { getAll, create, setToken, getOne }","import axios from 'axios'\nconst baseUrl = '/api/beers'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const res = await axios.get(baseUrl)\n  return res.data\n}\n\nconst getOne = async beer => {\n  const res = await axios.get(`${baseUrl}/${beer.breweryId}/${beer.name}/${beer.abv}`)\n  return res.data\n}\n\nconst create = async newBeer => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const res = await axios.post(baseUrl, newBeer, config)\n  return res.data\n}\n\nexport default { getAll, create, setToken, getOne }","import React, { useState, useEffect } from 'react'\nimport { Row, Col, Jumbotron, Form, Button } from 'react-bootstrap'\nimport { useTextField, useNumberField } from '../hooks'\nimport breweriesService from '../services/breweries'\nimport beersService from '../services/beers'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { addBeer } from '../reducers/beersReducer'\nimport { addBrewery } from '../reducers/breweriesReducer'\nimport { addRating } from '../reducers/ratingsReducer'\nimport { setNotification } from '../reducers/notificationReducer'\n\nconst Rate = (props) => {\n  const [validated, setValidated] = useState(false)\n  const [beerName, beerErrors, setBeerName] = useTextField('text', 1, 50, true)\n  const [breweryName, breweryErrors, setBreweryName] = useTextField('text', 1, 50, true)\n  const [description, descriptionErrors] = useTextField('text', 0, 1000, false)\n  const [alcohol, alcoholErrors, setAlcohol] = useNumberField('number', 0, 100, 0.1, true)\n  const [ageofbeer, ageofbeerErrors, setAgeofbeer] = useNumberField('number', 0, 360, 1, false)\n  const [aroma] = useNumberField('range', 0, 10, 1, true)\n  const [taste] = useNumberField('range', 0, 10, 1, true)\n  const [appearance] = useNumberField('range', 0, 5, 1, true)\n  const [mouthfeel] = useNumberField('range', 0, 5, 1, true)\n  const [overall] = useNumberField('range', 0, 20, 1, true)\n\n  useEffect(() => {\n    if (props.location.state) {\n      const bottle = props.location.state.bottle\n\n      setBeerName(bottle.beer.name)\n      setBreweryName(bottle.beer.brewery.name)\n      setAlcohol(bottle.beer.abv)\n      //setAgeofbeer()\n    }\n  }, [])\n\n  const handleRate = async (event) => {\n    event.preventDefault()\n    setValidated(true)\n\n    if (!event.target.checkValidity()) {\n      return\n    }\n    \n    try {\n      let beer = null\n\n      if (!props.beer) {\n        let brewery = await breweriesService.getOne(breweryName.value)\n        \n        if (!brewery) {\n          brewery = await props.addBrewery({ name: breweryName.value })\n        }\n  \n        beer = await beersService.getOne({ breweryId: brewery.id, name: beerName.value, abv: alcohol.value })\n  \n        if (!beer) {\n          beer = await props.addBeer({ breweryId: brewery.id, name: beerName.value, abv: alcohol.value })\n        }\n      }\n      \n      const newRating = {\n        beerId: props.beer === undefined ? beer.id : props.beer.id,\n        description: description.value,\n        ageofbeer: ageofbeer.value,\n        aroma: aroma.value,\n        taste: taste.value,\n        appearance: appearance.value,\n        mouthfeel: mouthfeel.value,\n        overall: overall.value\n      }\n  \n      props.addRating(newRating)\n      props.setNotification('New rating added!')\n      props.history.push('/')\n\n    } catch (exception) {\n      props.setNotification('Adding a new rating failed!', 'error')\n    }\n  }\n\n  return (\n    <>\n      <Row>\n        <Jumbotron as={Col} className='text-center mb-2'>\n            <h2>Give rating to this beer</h2>\n        </Jumbotron>\n      </Row>\n      <Row className='mb-3'>\n        <Col style={{ maxWidth: '25rem', margin: 'auto' }}>\n          <Form noValidate validated={validated} onSubmit={handleRate} id='rateForm'>\n            <Form.Group >\n              <Form.Label>Brewery</Form.Label>\n              <Form.Control {...breweryName} />\n              <Form.Control.Feedback type='invalid' >{breweryErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group >\n              <Form.Label>Beer</Form.Label>\n              <Form.Control {...beerName} />\n              <Form.Control.Feedback type='invalid' >{beerErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group >\n              <Form.Label>Abv</Form.Label>\n              <Form.Control {...alcohol} />\n              <Form.Control.Feedback type='invalid' >{alcoholErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group >\n              <Form.Label>Beers age when drinked</Form.Label>\n              <Form.Control {...ageofbeer} />\n              <Form.Control.Feedback type='invalid' >{ageofbeerErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group >\n              <Form.Label>Aroma</Form.Label>\n              <Form.Text>{aroma.value || 0}</Form.Text>\n              <Form.Control {...aroma} />\n            </Form.Group>\n            <Form.Group >\n              <Form.Label>Taste</Form.Label>\n              <Form.Text>{taste.value || 0}</Form.Text>\n              <Form.Control {...taste} />\n            </Form.Group>\n            <Form.Group >\n              <Form.Label>Appearance</Form.Label>\n              <Form.Text>{appearance.value || 0}</Form.Text>\n              <Form.Control {...appearance} />\n            </Form.Group>\n            <Form.Group >\n              <Form.Label>Mouthfeel</Form.Label>\n              <Form.Text>{mouthfeel.value || 0}</Form.Text>\n              <Form.Control {...mouthfeel} />\n            </Form.Group>\n            <Form.Group >\n              <Form.Label>Overall</Form.Label>\n              <Form.Text>{overall.value || 0}</Form.Text>\n              <Form.Control {...overall} />\n            </Form.Group>\n            <Form.Group >\n              <Form.Label>Description</Form.Label>\n              <Form.Control as='textarea' rows='4' {...description} />\n              <Form.Control.Feedback type='invalid' >{descriptionErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Button type='submit' variant='success' block>Add rating</Button>\n          </Form>\n        </Col>\n      </Row>    \n    </>\n  )\n}\n\nconst mapDispatchToProps = {\n  addBeer,\n  addBrewery,\n  addRating,\n  setNotification\n}\n\nexport default connect(null, mapDispatchToProps)(withRouter(Rate))","import React, { useState, useEffect } from 'react'\nimport { Row, Col, Form, Button, Jumbotron, Nav } from 'react-bootstrap'\nimport { NavLink, withRouter } from 'react-router-dom'\nimport { useTextField } from '../hooks'\nimport { connect } from 'react-redux'\nimport { removeUser, updateUser } from '../reducers/usersReducer'\nimport { logoutUser } from '../reducers/loginReducer'\nimport { setNotification } from '../reducers/notificationReducer'\n\nconst Profile = (props) => {\n  const [validated, setValidated] = useState(false)\n  const [name, nameErrors, setName] = useTextField('text', 1, 20, true)\n  const [email, emailErrors, setEmail] = useTextField('text', 1, 50, true)\n  const [city, cityErrors, setCity] = useTextField('text', 1, 50, false)\n  const [country, countryErrors, setCountry] = useTextField('text', 1, 20, false)\n  const [hidden, setHidden] = useState(false)\n\n  useEffect(() => {\n    setName(props.user.name || '')\n    setEmail(props.user.email || '')\n    setCity(props.user.city || '')\n    setCountry(props.user.country || '')\n    setHidden(props.user.hidden)\n  }, [])\n\n  if (!props.user) {\n    return null\n  }\n  \n  const handleProfileUpdate = async (event) => {\n    event.preventDefault()\n    setValidated(true)\n\n    if (!event.target.checkValidity()) {\n      return\n    }\n\n    try {\n      const updateableUser = {\n        name: name.value,\n        email: email.value,\n        city: city.value,\n        country: country.value,\n        hidden\n      }\n  \n      await props.updateUser(props.user.id, updateableUser)\n      props.setNotification('Profile saved!')\n\n    } catch (exception) {\n      props.setNotification('Saving profile failed!', 'error')\n    }\n  }\n\n  const handleDelete = async () => {\n    if (window.confirm('Are you sure you want to delete your profile and all its data?')) {\n      try {\n        await props.removeUser(props.user.id)\n        await props.logoutUser()\n        props.setNotification('Your profile and data has been deleted')\n        props.history.push('/')\n  \n      } catch (exception) {\n        props.setNotification('Removing yor profile failed!', 'error')\n      }\n    }\n  }\n\n  return (\n    <>\n      <Row>\n        <Jumbotron as={Col} className='text-center mb-2'>\n          <h2>{props.user.username} profile</h2>\n        </Jumbotron>\n      </Row>\n      <Row className='mb-3'>\n        <Col md={3} style={{ maxWidth: '10rem' }} >\n          <Nav justify className='flex-column'>\n            <Nav.Link as='span' className='p-2'>\n              <NavLink to={`/users/${props.user.id}/stash`} >Your stash</NavLink>\n            </Nav.Link>\n            <Nav.Link as='span' className='p-2'>\n              <NavLink to={`/users/${props.user.id}/ratings`} >Your ratings</NavLink>\n            </Nav.Link>\n            <Nav.Link onClick={handleDelete} href='#' as='span' className='p-2'>\n              Delete profile\n            </Nav.Link>\n          </Nav>\n        </Col>\n        <Col md={9} >\n          <Form noValidate validated={validated} style={{ maxWidth: '25rem', margin: 'auto' }} onSubmit={handleProfileUpdate} id='profileUpdateForm' >\n            <Form.Group >\n              <Form.Label>Name</Form.Label>\n              <Form.Control {...name} />\n              <Form.Control.Feedback type='invalid' >{nameErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group >\n              <Form.Label>Email</Form.Label>\n              <Form.Control {...email} />\n              <Form.Control.Feedback type='invalid' >{emailErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Row>\n              <Form.Group style={{ maxWidth: '50%' }} className='p-2'>\n                <Form.Label>City</Form.Label>\n                <Form.Control {...city} />\n                <Form.Control.Feedback type='invalid' >{cityErrors}</Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group style={{ maxWidth: '50%' }} className='p-2'>\n                <Form.Label>Country</Form.Label>\n                <Form.Control {...country} />\n                <Form.Control.Feedback type='invalid' >{countryErrors}</Form.Control.Feedback>\n              </Form.Group>\n            </Form.Row>\n            <Form.Group>\n              <Form.Check\n                type='checkbox'\n                checked={hidden}\n                onChange={({ target }) => setHidden(target.checked)}\n                label='I want my stash to be private' />\n            </Form.Group>\n            <Button type='submit' variant='success' block>Save profile</Button>\n          </Form>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nconst mapDispatchToProps = {\n  removeUser,\n  updateUser,\n  logoutUser,\n  setNotification\n}\n\nexport default connect(null, mapDispatchToProps)(withRouter(Profile))\n","import React from 'react'\nimport { Col, Row, Jumbotron } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { setFilter } from '../reducers/filterReducer'\nimport Bottle from './Bottle'\nimport SearchForm from './SearchForm'\n\nconst SearchResults = (props) => {\n\n  const byBeerOrBrewery = (b) => !props.filter\n    ? false\n    : b.beer.name.toLowerCase().includes(props.filter.toLowerCase()) ||\n      b.beer.brewery.name.toLowerCase().includes(props.filter.toLowerCase())\n\n  const bottlesToShow = props.bottles\n    .filter(b => !b.user.hidden)\n    .filter(byBeerOrBrewery)\n\n  const handleSearch = (e) => {\n    e.preventDefault()\n    props.setFilter(e.target.filter.value)\n    e.target.filter.value = ''\n  }\n\n  return (\n    <>\n      <Row>\n        <Jumbotron as={Col} className='text-center'>\n          <h2>Search from Bottlestash</h2>\n        </Jumbotron>\n      </Row>\n      <Row>\n        <Col className='d-flex justify-content-center block'>\n          <SearchForm\n            handleSearch={handleSearch}\n            suggestions={props.suggestions}\n            id='search'\n          />\n        </Col>\n      </Row>\n      {props.filter &&\n      <Row>\n        <Col className='text-center'>\n          <p>We have {bottlesToShow.length} results for search '{props.filter}'</p>\n        </Col>\n      </Row>\n      }\n      <Row>\n        <Col style={{ maxWidth: '35em', margin: 'auto' }} >\n          {bottlesToShow.map(b =>\n            <Bottle key={b.id} bottle={b} ></Bottle>\n          )}\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    filter: state.filter\n  }\n}\n\nconst mapDispatchToProps = {\n  setFilter\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResults)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { setUserToState } from './reducers/loginReducer'\nimport { getAllUsers } from './reducers/usersReducer'\nimport { getAllBreweries } from './reducers/breweriesReducer'\nimport { getAllRatings } from './reducers/ratingsReducer'\nimport { getAllBottles } from './reducers/bottlesReducer'\nimport { setNotification } from './reducers/notificationReducer'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Login from './components/Login'\nimport Home from './components/Home'\nimport Navigation from './components/Navigation'\nimport Register from './components/Register'\nimport Stash from './components/Stash'\nimport Footer from './components/Footer'\nimport AddBottle from './components/AddBottle'\nimport Notification from './components/Notification'\nimport Rate from './components/Rate'\nimport Profile from './components/Profile'\nimport SearchResults from './components/SearchResults'\n\nimport './App.css'\n\nconst App = (props) => {\n\n  useEffect(() => {\n    const loggedUser = window.localStorage.getItem('loggedBottlestashUser')\n    if (loggedUser) {\n      props.setUserToState(JSON.parse(loggedUser))\n    }\n  }, [])\n\n  useEffect(() => {\n    props.getAllUsers()\n  }, [])\n\n  useEffect(() => {\n    props.getAllBreweries()\n  }, [])\n\n  useEffect(() => {\n    props.getAllRatings()\n  }, [])\n\n  useEffect(() => {\n    props.getAllBottles()\n  }, [])\n\n  const userById = (id) => \n    props.users.find(user => user.id === id)\n\n  const loggedUser = () =>\n    !props.user ? null : props.users.find(user => user.username === props.user.username)\n\n  const breweriesAsList = () => \n    !props.breweries ? null : props.breweries.map(brewery => brewery.name)\n\n  return (\n    <Container fluid>\n      <BrowserRouter >\n\n        <Navigation\n          user={loggedUser()}\n          setNotification={props.setNotification}\n          suggestions={props.bottles.map(b => b.beer.name)}\n        />\n        <Notification />\n\n        <Route\n          exact path='/'\n          render={() => \n            <Home\n              user={props.user}\n              bottles={props.bottles}\n              ratings={props.ratings}\n            />\n          }\n        />\n        <Route\n          exact path='/login'\n          render={() => <Login setNotification={props.setNotification} />}\n        />\n        <Route\n          exact path='/register'\n          render={() => <Register setNotification={props.setNotification} />}\n        />\n        <Route\n          exact path='/search'\n          render={() =>\n            <SearchResults\n              user={props.user}\n              bottles={props.bottles}\n              suggestions={props.bottles.map(b => b.beer.name)}\n            />\n          }\n        />\n\n        {props.user &&\n        <>  \n          <Route\n            exact path='/bottles'\n            render={() =>\n              <AddBottle\n                breweries={breweriesAsList()}\n                user={props.user}\n                setNotification={props.setNotification}\n              />\n            }\n          />\n          <Route\n            exact path='/rate'\n            render={(props) => <Rate {...props} /> }\n          />\n\n          {loggedUser() &&\n          <Route\n            exact path='/profile'\n            render={() =>\n              <Profile\n                setNotification={props.setNotification}\n                user={loggedUser()}\n              />\n            }\n          />\n          }\n          <Route\n            exact path='/users/:id/stash'\n            render={({ match }) => \n              <Stash\n                userToView={userById(match.params.id)}\n                user={props.user}\n              />\n            }\n          />\n        </>\n        }\n        \n        <Footer />\n      </BrowserRouter>\n    </Container>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    users: state.users,\n    breweries: state.breweries,\n    bottles: state.bottles,\n    ratings: state.ratings\n  }\n}\n\nconst mapDispatchToProps = {\n  setUserToState,\n  getAllUsers,\n  getAllBreweries,\n  getAllRatings,\n  getAllBottles,\n  setNotification\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport loginReducer from './reducers/loginReducer'\nimport usersReducer from './reducers/usersReducer'\nimport beersReducer from './reducers/beersReducer'\nimport breweriesReducer from './reducers/breweriesReducer'\nimport notificationReducer from './reducers/notificationReducer'\nimport ratingsReducer from './reducers/ratingsReducer'\nimport bottlesReducer from './reducers/bottlesReducer'\nimport filterReducer from './reducers/filterReducer'\n\n// toistaiseksi emme käytä beers mihinkään tilassa\n\nconst reducer = combineReducers({\n  user: loginReducer,\n  users: usersReducer,\n  beers: beersReducer,\n  breweries: breweriesReducer,\n  notification: notificationReducer,\n  ratings: ratingsReducer,\n  bottles: bottlesReducer,\n  filter: filterReducer\n})\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store} >\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}