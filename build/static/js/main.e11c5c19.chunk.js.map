{"version":3,"sources":["hooks/index.js","reducers/loginReducer.js","reducers/usersReducer.js","reducers/breweriesReducer.js","reducers/beersReducer.js","reducers/ratingsReducer.js","reducers/bottlesReducer.js","reducers/notificationReducer.js","components/ListSuggestion.js","components/InputGroup.js","components/Login.js","components/Rating.js","components/Bottle.js","components/ResourceFeed.js","components/Home.js","reducers/filterReducer.js","components/SearchForm.js","components/Navigation.js","components/Register.js","components/BottleDetails.js","components/BottlesTable.js","components/StashDetails.js","components/Stash.js","components/Footer.js","reducers/picturesReducer.js","components/ImageInputGroup.js","components/AddBottle.js","components/Notification.js","components/Rate.js","components/Profile.js","components/SearchResults.js","components/Brewery.js","components/Beer.js","components/About.js","components/ScrollToTop.js","App.js","store.js","index.js"],"names":["token","setToken","newToken","concat","useResource","baseUrl","getAll","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","abrupt","data","stop","apply","this","arguments","getOne","_ref2","_callee2","identifier","_context2","_x","create","_ref3","_callee3","resource","config","_context3","headers","Authorization","post","_x2","login","_ref4","_callee4","credentials","_context4","_x3","createImage","_ref5","_callee5","_context5","content-type","_x4","update","_ref6","_callee6","id","_context6","put","_x5","_x6","remove","_ref7","_callee7","_context7","delete","_x7","useTextField","type","minLength","maxLength","required","length","undefined","_useState","useState","_useState2","slicedToArray","value","setValue","_useState3","_useState4","validationMessage","setValidationMessage","onChange","event","target","onInvalid","useNumberField","min","max","step","_useState5","_useState6","_useState7","_useState8","loginService","logoutUser","dispatch","window","localStorage","removeItem","loginReducer","state","action","user","usersService","updateUserToState","username","usersReducer","users","map","u","filter","updatedUser","toConsumableArray","newUser","breweriesService","getOneBrewery","breweryName","brewery","addBrewery","newBrewery","breweriesReducer","breweries","beersService","getOneBeer","name","abv","beer","addBeer","newBeer","beersReducer","beers","ratingsService","ratingsReducer","ratings","rating","bottlesService","bottlesReducer","bottles","newBottle","b","updatedBottle","setNotification","message","notification","setTimeout","notificationReducer","ListSuggestion","props","suggestionsToShow","Set","suggestions","react_default","createElement","s","key","InputGroup","Form","Group","Label","Control","assign","placeholder","list","components_ListSuggestion","Feedback","errors","mapDispatchToProps","loginUser","setItem","JSON","stringify","connect","withRouter","validated","setValidated","_useTextField","_useTextField2","usernameErrors","_useTextField3","_useTextField4","password","passwordErrors","handleLogin","preventDefault","checkValidity","history","push","t0","Container","fluid","Row","Jumbotron","as","Col","className","noValidate","onSubmit","components_InputGroup","Button","variant","block","react_router_dom","to","Rating","Card","Header","style","backgroundColor","color","Title","ageofbeer","Table","responsive","aroma","taste","mouthfeel","appearance","overall","Badge","Body","picture","Img","src","alt","description","Footer","moment","added","fromNow","Bottle","bottle","ResourceFeed","visible","setVisible","resourcesToShow","resources","slice","Fragment","r","components_Rating","components_Bottle","onClick","Home","byAdded","bottlesToShow","hidden","sort","ratingsToShow","textShadow","components_ResourceFeed","ListGroup","Item","setFilter","filterReducer","handleSearch","inline","Navbar","collapseOnSelect","expand","bg","Toggle","aria-controls","Collapse","Nav","Link","href","exception","width","height","borderRadius","components_SearchForm","e","registerUser","_useTextField5","_useTextField6","nameErrors","_useTextField7","_useTextField8","email","emailErrors","_useTextField9","_useTextField10","city","cityErrors","_useTextField11","_useTextField12","country","countryErrors","setHidden","handleRegister","maxWidth","Check","checked","label","removeBottle","updateBottle","handleDrink","needClosing","updateableBottle","objectSpread","count","toggleVisibility","Modal","centered","show","onHide","closeButton","price","volume","bottled","format","expiration","Date","diff","userToView","pathname","BottlesTable","setBottle","stash","hover","handleShowDetails","isBefore","components_BottleDetails","StashDetails","bottlesCount","reduce","sum","stashCost","stashVolume","toFixed","Stash","detailsVisible","setDetailsVisible","components_StashDetails","components_BottlesTable","picturesService","addPicture","newPicture","FormData","append","ImageInputGroup","accept","setPicture","files","URL","createObjectURL","addBottle","isLoading","setIsLoading","breweryErrors","_useNumberField","_useNumberField2","abvErrors","_useNumberField3","_useNumberField4","priceErrors","_useNumberField5","_useNumberField6","countErrors","_useNumberField7","_useNumberField8","volumeErrors","_useNumberField9","_useNumberField10","bottledErrors","_useNumberField11","_useNumberField12","expirationErrors","handleAddBottle","breweryId","beerId","pictureId","t1","components_ImageInputGroup","disabled","Alert","addRating","beerName","beerErrors","setBeerName","setBreweryName","descriptionErrors","alcohol","alcoholErrors","setAlcohol","setBottled","setAroma","setTaste","setAppearance","setMouthfeel","_useNumberField13","_useNumberField14","setOverall","useEffect","location","handleRate","newRating","Text","rows","removeUser","updateUser","setName","setEmail","setCity","setCountry","handleProfileUpdate","updateableUser","handleDelete","confirm","byBeerName","toLowerCase","includes","byBreweryName","beersToShow","breweriesToShow","Brewery","Beer","score","About","children","scrollTo","setUserToState","getAllUsers","getAllBreweries","getAllBeers","getAllRatings","getAllBottles","loggedUser","getItem","parse","ratingsByBeerId","find","components_ScrollToTop","components_Navigation","components_Notification","react_router","exact","path","render","components_Home","components_Login","components_Register","components_About","components_SearchResults","match","components_Brewery","params","components_Beer","components_AddBottle","components_Rate","components_Profile","components_Stash","components_Footer","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.e11c5c19.chunk.js","sourcesContent":["import { useState } from 'react'\nimport axios from 'axios'\n\nlet token = null\n\nexport const setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nexport const useResource = (baseUrl) => {\n\n  const getAll = async () => {\n    const res = await axios.get(baseUrl)\n    return res.data\n  }\n\n  const getOne = async identifier => {\n    const res = await axios.get(`${baseUrl}/${identifier}`)\n    return res.data\n  }\n\n  const create = async (resource) => {\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    }\n    const res = await axios.post(baseUrl, resource, config)\n    return res.data\n  }\n\n  const login = async (credentials) => {\n    const res = await axios.post(baseUrl, credentials)\n    return res.data\n  }\n\n  const createImage = async (resource) => {\n    const config = {\n      headers: {\n        Authorization: token,\n        'content-type': 'multipart/form-data'\n      }\n    }\n    const res = await axios.post(baseUrl, resource, config)\n    return res.data\n  }\n\n  const update = async (id, resource) => {\n    const config = {\n      headers: { Authorization: token }\n    }\n    const res = await axios.put(`${baseUrl}/${id}`, resource, config)\n    return res.data\n  }\n\n  const remove = async id => {\n    const config = {\n      headers: { Authorization: token }\n    }\n    const res = await axios.delete(`${baseUrl}/${id}`, config)\n    return res.data\n  }\n\n  return  {\n    create, createImage, getAll, getOne, update, remove, login\n  }\n}\n\nexport const useTextField = (type, minLength, maxLength, required = false) => {\n  const [value, setValue] = useState('')\n  const [validationMessage, setValidationMessage] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  const onInvalid = (event) => {\n    setValidationMessage(event.target.validationMessage)\n  }\n\n  const setDefaultValue = (value) => {\n    setValue(value)\n  }\n\n  return [\n    {\n      type, minLength, maxLength, required, value, onChange, onInvalid\n    },\n    validationMessage,\n    setDefaultValue\n  ]\n}\n\nexport const useNumberField = (type, min, max, step = 1, required = false) => {\n  const [value, setValue] = useState('')\n  const [validationMessage, setValidationMessage] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  const onInvalid = (event) => {\n    setValidationMessage(event.target.validationMessage)\n  }\n\n  const setDefaultValue = (value) => {\n    setValue(value)\n  }\n\n  return [\n    {\n      type, min, max, step, required, value, onChange, onInvalid\n    },\n    validationMessage,\n    setDefaultValue\n  ]\n}","import { useResource, setToken } from '../hooks/'\n\nconst loginService = useResource('/api/login')\n\nconst initialState = null\n\nconst loginReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return action.user\n    case 'LOGOUT':\n      return null\n    default:\n      return state\n  }\n}\n\nexport const loginUser = (credentials) => {\n  return async dispatch => {\n    const user = await loginService.login(credentials)\n\n    window.localStorage.setItem('loggedBottlestashUser', JSON.stringify(user))\n    setToken(user.token)\n\n    dispatch({\n      type: 'LOGIN',\n      user\n    })\n  }\n}\n\nexport const logoutUser = () => {\n  return async dispatch => {\n    window.localStorage.removeItem('loggedBottlestashUser')\n    setToken(null)\n\n    dispatch({\n      type: 'LOGOUT'\n    })\n  }\n}\n\nexport const setUserToState = user => {\n  return async dispatch => {\n    setToken(user.token)\n\n    dispatch({\n      type: 'LOGIN',\n      user\n    })\n  }\n}\n\nexport default loginReducer","import { useResource } from '../hooks'\n\nconst usersService = useResource('/api/users')\n\nconst usersReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'GET_USERS':\n      return action.users\n    case 'UPDATE_USER_TO_STATE':\n      return state.map(u => u.id !== action.user.id ? u : action.user)\n    case 'REMOVE_USER':\n      return state.filter(u => u.id !== action.id)\n    case 'UPDATE_USER':\n      return state.map(u => u.id === action.updatedUser.id ? action.updatedUser : u)\n    case 'REGISTER_USER':\n      return [...state, action.newUser ]\n    default:\n      return state\n  }\n}\n\nexport const getAllUsers = () => {\n  return async dispatch => {\n    const users = await usersService.getAll()\n\n    dispatch({\n      type: 'GET_USERS',\n      users\n    })\n  }\n}\n\n// poista tämä kun AddBottle ja BottleDetails viewissä ei ole enää riippuvuuutta\nexport const updateUserToState = username => {\n  return async dispatch => {\n    const user = await usersService.getOne(username)\n\n    dispatch({\n      type: 'UPDATE_USER_TO_STATE',\n      user\n    })\n\n    return user\n  }\n}\n\nexport const registerUser = user => {\n  return async dispatch => {\n    const newUser = await usersService.create(user)\n\n    dispatch({\n      type: 'REGISTER_USER',\n      newUser\n    })\n  }\n}\n\nexport const removeUser = id => {\n  return async dispatch => {\n    await usersService.remove(id)\n\n    dispatch({\n      type: 'REMOVE_USER',\n      id\n    })\n  }\n}\n\nexport const updateUser = (id, user) => {\n  return async dispatch => {\n    const updatedUser = await usersService.update(id, user)\n\n    dispatch({\n      type: 'UPDATE_USER',\n      updatedUser\n    })\n  }\n}\n\nexport default usersReducer","import { useResource } from '../hooks'\n\nconst breweriesService = useResource('/api/breweries')\n\nconst breweriesReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'GET_BREWERIES':\n        return action.breweries\n      case 'ADD_BREWERY':\n        return [...state, action.brewery ]\n      default:\n        return state\n    }\n  }\n  \n  export const getAllBreweries = () => {\n    return async dispatch => {\n      const breweries = await breweriesService.getAll()\n  \n      dispatch({\n        type: 'GET_BREWERIES',\n        breweries\n      })\n    }\n  }\n\n  export const getOneBrewery = breweryName => {\n    return async dispatch => {\n      const brewery = await breweriesService.getOne(breweryName)\n      return brewery\n    }\n  }\n  \n  export const addBrewery = newBrewery => {\n    return async dispatch => {\n      const brewery = await breweriesService.create(newBrewery)\n  \n      dispatch({\n        type: 'ADD_BREWERY',\n        brewery\n      })\n\n      return brewery\n    }\n  }\n\n  export default breweriesReducer","import { useResource } from '../hooks'\n\nconst beersService = useResource('/api/beers')\n\nconst beersReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'GET_BEERS':\n        return action.beers\n      case 'ADD_BEER':\n        return [...state, action.beer ]\n      default:\n        return state\n    }\n  }\n  \n  export const getAllBeers = () => {\n    return async dispatch => {\n      const beers = await beersService.getAll()\n  \n      dispatch({\n        type: 'GET_BEERS',\n        beers\n      })\n    }\n  }\n\n  export const getOneBeer = (brewery, name, abv) => {\n    return async dispatch => {\n      const beer = await beersService.getOne(`${brewery}/${name}/${abv}`)\n      return beer\n    }\n  }\n  \n  export const addBeer = newBeer => {\n    return async dispatch => {\n      const beer = await beersService.create(newBeer)\n  \n      dispatch({\n        type: 'ADD_BEER',\n        beer\n      })\n\n      return beer\n    }\n  }\n\n  export default beersReducer","import { useResource } from '../hooks'\n\nconst ratingsService = useResource('/api/ratings')\n\nconst ratingsReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'GET_RATINGS':\n        return action.ratings\n      case 'ADD_RATING':\n        return [...state, action.rating ]\n      default:\n        return state\n    }\n  }\n  \n  export const getAllRatings = () => {\n    return async dispatch => {\n      const ratings = await ratingsService.getAll()\n\n      dispatch({\n        type: 'GET_RATINGS',\n        ratings\n      })\n    }\n  }\n  \n  export const addRating = ratings => {\n    return async dispatch => {\n      const rating = await ratingsService.create(ratings)\n  \n      dispatch({\n        type: 'ADD_RATING',\n        rating\n      })\n    }\n  }\n\n  export default ratingsReducer","import { useResource } from '../hooks'\n\nconst bottlesService = useResource('/api/bottles')\n\nconst bottlesReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'GET_BOTTLES':\n      return action.bottles\n    case 'ADD_BOTTLE':\n      return [...state, action.newBottle ]\n    case 'REMOVE_BOTTLE':\n      return state.filter(b => b.id !== action.id)\n    case 'UPDATE_BOTTLE':\n      return state.map(b => b.id === action.updatedBottle.id ? action.updatedBottle : b)\n    default:\n      return state\n  }\n}\n\nexport const getAllBottles = () => {\n  return async dispatch => {\n    const bottles = await bottlesService.getAll()\n\n    dispatch({\n      type: 'GET_BOTTLES',\n      bottles\n    })\n  }\n}\n\nexport const addBottle = bottle => {\n  return async dispatch => {\n    const newBottle = await bottlesService.create(bottle)\n\n    dispatch({\n      type: 'ADD_BOTTLE',\n      newBottle\n    })\n  }\n}\n\nexport const removeBottle = id => {\n  return async dispatch => {\n    await bottlesService.remove(id)\n\n    dispatch({\n      type: 'REMOVE_BOTTLE',\n      id\n    })\n  }\n}\n\nexport const updateBottle = (id, bottle) => {\n  return async dispatch => {\n    const updatedBottle = await bottlesService.update(id, bottle)\n\n    dispatch({\n      type: 'UPDATE_BOTTLE',\n      updatedBottle\n    })\n  }\n}\n\nexport default bottlesReducer","\nconst notificationReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_NOTIFICATION':\n      return action.notification\n    case 'CLEAR_NOTIFICATION':\n      return null\n    default:\n      return state\n  }\n}\n\nexport const setNotification = (message, type='success') => {\n  return async dispatch => {\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      notification: { message, type }\n    })\n    setTimeout(() => {\n      dispatch({\n        type: 'CLEAR_NOTIFICATION'\n      })\n    }, 4000)\n  }\n}\n\nexport default notificationReducer","import React from 'react'\n\nconst ListSuggestion = (props) => {\n\n  const suggestionsToShow = [ ...new Set(props.suggestions) ]\n\n  return (\n    <datalist id={props.id} >\n      {suggestionsToShow.map(s => \n        <option key={s} value={s} ></option>\n      )}\n    </datalist>\n  )\n}\n\nexport default ListSuggestion","import React from 'react'\nimport { Form } from 'react-bootstrap'\nimport ListSuggestion from './ListSuggestion'\n\nconst InputGroup = (props) => \n  <Form.Group >\n    <Form.Label>{props.name}</Form.Label>\n    <Form.Control {...props.state} placeholder={props.placeholder} list={props.name} />\n    <ListSuggestion suggestions={props.suggestions} id={props.name} />\n    <Form.Control.Feedback type='invalid' >{props.errors}</Form.Control.Feedback>\n  </Form.Group>\n \nexport default InputGroup","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { Form, Button, Row, Col, Jumbotron, Container } from 'react-bootstrap'\nimport { loginUser } from '../reducers/loginReducer'\nimport { setNotification } from '../reducers/notificationReducer'\nimport { Link } from 'react-router-dom'\nimport { useTextField } from '../hooks'\nimport InputGroup from './InputGroup'\n\nconst Login = (props) => {\n  const [validated, setValidated] = useState(false)\n  const [username, usernameErrors] = useTextField('text', 5, 20, true)\n  const [password, passwordErrors] = useTextField('password', 5, 20, true)\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    \n    if (!event.target.checkValidity()) {\n      setValidated(true)\n      return\n    }\n    \n    try {\n      await props.loginUser({ username: username.value, password: password.value })\n      props.history.push('/')\n    } catch (exception) {\n      props.setNotification('Login failed', 'error')\n    }\n  }\n\n  return (\n    <Container fluid>\n      <Row>\n        <Jumbotron as={Col} className='text-center'>\n          <h2>Login to Bottlestash</h2>\n        </Jumbotron>\n      </Row>\n      <Row id='loginForm'>\n        <Col className='formstyle'>\n          <Form noValidate validated={validated} onSubmit={handleLogin} >\n            <InputGroup\n              name='Username'\n              state={username}\n              placeholder='username'\n              errors={usernameErrors}\n            />\n            <InputGroup\n              name='Password'\n              state={password}\n              placeholder='password'\n              errors={passwordErrors}\n            />\n            <Button id='login' variant='success' type='submit' block >Login</Button>\n          </Form>\n          <Row className='mt-2'>\n            <Col className='text-center'>\n              <small>\n                  Not yet a member? \n                <Link to='/register'> Register here</Link>\n              </small>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nconst mapDispatchToProps = {\n  loginUser, setNotification\n}\n\nexport default connect(null, mapDispatchToProps)(withRouter(Login))","import React from 'react'\nimport { Card, Table, Badge, Row, Col } from 'react-bootstrap'\nimport { NavLink } from 'react-router-dom'\nimport moment from 'moment'\n\nconst Rating = ({ rating }) => {\n\n  const score = () => rating.overall + rating.aroma + rating.taste + rating.mouthfeel + rating.appearance\n\n  return (\n    <Card className='text-center p-2 m-2'>\n      <Card.Header style={{ backgroundColor: 'white', color: 'rgb(52, 58, 64)' }}>\n        <Card.Title>\n          <NavLink to={`/beers/${rating.beer.id}`} >{rating.beer.name} {rating.beer.abv} %</NavLink>\n        </Card.Title>\n        <Row>\n          <Col>\n            <small>\n              brewery: <NavLink to={`/breweries/${rating.beer.brewery.id}`} >{rating.beer.brewery.name}</NavLink>\n            </small>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            {rating.ageofbeer &&\n              <small>rated: {rating.ageofbeer} months age</small>\n            }\n          </Col>\n        </Row>\n      </Card.Header>\n      <Table responsive>\n          <thead>\n            <tr>\n              <th><small className='text-muted'>aroma</small></th>\n              <th><small className='text-muted'>taste</small></th>\n              <th><small className='text-muted'>mouthfeel</small></th>\n              <th><small className='text-muted'>appearance</small></th>\n              <th><small className='text-muted'>overall</small></th>\n              <th><small>score</small></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td><small className='text-muted'>{rating.aroma}/10</small></td>\n              <td><small className='text-muted'>{rating.taste}/10</small></td>\n              <td><small className='text-muted'>{rating.mouthfeel}/5</small></td>\n              <td><small className='text-muted'>{rating.appearance}/5</small></td>\n              <td><small className='text-muted'>{rating.overall}/20</small></td>\n              <td><Badge variant='warning' >{score()}/50</Badge></td>\n            </tr>\n          </tbody>\n        </Table>\n      <Card.Body>\n        {rating.picture &&\n          <Card.Img src={`/api/pictures/${rating.picture}`} className='img-thumbnail' alt='' />\n        }\n\n        <blockquote className='blockquote mt-2'>{rating.description}</blockquote>\n        <footer className='blockquote-footer'> <cite>{rating.user.name}</cite></footer>\n      </Card.Body>\n      <Card.Footer>\n        <small className='text-muted'>\n          by <NavLink to={`/users/${rating.user.id}/stash`} >{rating.user.name}</NavLink>, {moment(rating.added).fromNow()}\n        </small>\n      </Card.Footer>\n    </Card>\n  )\n}\n\nexport default Rating","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Card } from 'react-bootstrap'\nimport moment from 'moment'\n\nconst Bottle = ({ bottle }) => {\n  if (!bottle) {\n    return null\n  }\n\n  return (\n    <Card className='p-2 m-2 text-center'>\n      <Card.Header style={{ backgroundColor: 'white', color: 'rgb(52, 58, 64)' }}>\n        <Card.Title><NavLink to={`/beers/${bottle.beer.id}`} >{bottle.beer.name} {bottle.beer.abv} %</NavLink></Card.Title>\n        <small className='text-left'>\n          brewery: <NavLink to={`/breweries/${bottle.beer.brewery.id}`} >{bottle.beer.brewery.name}</NavLink>\n        </small>\n      </Card.Header>\n      {bottle.picture &&\n        <Card.Body>\n          <Card.Img src={`/api/pictures/${bottle.picture}`} className='img-thumbnail' alt='' />\n        </Card.Body>\n      }\n      <Card.Footer>\n        <small className='text-muted'>\n          added by <NavLink to={`/users/${bottle.user.id}/stash`} >{bottle.user.name}</NavLink>, {moment(bottle.added).fromNow()}\n        </small>\n      </Card.Footer>\n    </Card>\n  )\n}\n\nexport default Bottle","import React, { useState } from 'react'\nimport { Row, Col, Button } from 'react-bootstrap'\nimport Rating from './Rating'\nimport Bottle from './Bottle'\n\nconst ResourceFeed = (props) => {\n  const [visible, setVisible] = useState(5)\n    \n  const handleSetVisible = () => {\n    setVisible(visible + 5)\n  }\n\n  const resourcesToShow = props.resources.slice(0, visible)\n  \n  return (\n    <>\n      <Row>\n        <Col className='maindiv'>\n          {resourcesToShow.map(r =>\n            props.resource === 'rating'\n              ? <Rating key={r.id} rating={r} ></Rating>\n              : <Bottle key={r.id} bottle={r} ></Bottle>\n          )}\n        </Col>\n      </Row>\n      <Row>\n        <Col className='d-flex justify-content-center mb-2'>\n          {props.resources.length > visible &&\n            <Button onClick={handleSetVisible}>Load more ...</Button>\n          }\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default ResourceFeed","import React from 'react'\nimport { Jumbotron, Row, Col, Container, ListGroup } from 'react-bootstrap'\nimport { NavLink } from 'react-router-dom'\nimport ResourceFeed from './ResourceFeed'\n\nconst Home = (props) => {\n  \n  const byAdded = (a, b) => b.added > a.added ? 1 : -1\n  const byHidden = b => !b.user.hidden\n\n  const bottlesToShow = props.bottles.filter(byHidden).sort(byAdded)\n  const ratingsToShow = props.ratings.sort(byAdded)\n  \n  const showToLoggedUser = () => {\n    return (\n      <>\n      <Row>\n        <Col className='maindiv'>\n          <h2 style={{ color: 'white', textShadow: '2px 2px 5px black' }}>Recently added bottles</h2>\n        </Col>\n      </Row>\n      <ResourceFeed resources={bottlesToShow} resource='bottle' />\n      <Row>\n        <Col className='maindiv'>\n          <h2 style={{ color: 'white', textShadow: '2px 2px 5px black' }}>Recently added ratings</h2>\n        </Col>\n      </Row>\n      <ResourceFeed resources={ratingsToShow} resource='rating' />\n    </>\n    )\n  }\n\n  const showToVisitor = () => {\n    return (\n      <>\n      <Row>\n        <Col className='maindiv' style={{ backgroundColor: 'rgb(245, 245, 245)' }} >\n          <section>\n            <h2 className='mb-3'>Bottlestash, eh?</h2>\n            <h6 className='mb-4'>\n              That's right mate! Bottlestash is an app which lets you keep track of your beer cellar.\n              Because lets face it; you like beer. So do I - it's allright!\n            </h6>\n            <h6>\n              With Bottlestash you can manage your beer cellar, \n              so you can easily track what beers you have, how many bottles and when to drink them!\n            </h6>\n          </section>\n        </Col>\n      </Row>\n      <Row>\n        <Col className='maindiv' style={{ backgroundColor: 'rgb(245, 245, 245)' }}>\n          <h2 className='mb-3'>Main features:</h2>\n            <ListGroup variant='flush'>\n              <ListGroup.Item><h6>Save bottles to your stash</h6></ListGroup.Item>\n              <ListGroup.Item><h6>Keep track of your beers expiration and drink them before</h6></ListGroup.Item>\n              <ListGroup.Item><h6>Rate beers you drink</h6></ListGroup.Item>\n              <ListGroup.Item><h6>Peek other user's cellars and see what beers they have</h6></ListGroup.Item>\n            </ListGroup>\n        </Col>\n      </Row>\n      <Row>\n        <Col className='maindiv' style={{ backgroundColor: 'rgb(245, 245, 245)' }}>\n          <h6 className='mb-2'>Register now - it's free!</h6>\n            <NavLink to='/register'>To registration</NavLink>\n        </Col>\n      </Row>\n      </>\n    )\n  }\n\n  return (\n    <Container fluid className='home'>\n      <Row>\n        <Jumbotron as={Col} className='text-center'>\n          <h1>Bottlestash</h1>\n          <h5>Cooler than your wine cellar - wetter than Finnish summer</h5>\n          <h6>(or something similar)</h6>\n        </Jumbotron>\n      </Row>\n\n      {props.user\n        ? showToLoggedUser()\n        : showToVisitor()\n      }\n\n    </Container>\n    \n  )\n}\n\nexport default Home","\nconst filterReducer = (state = null, action) => {\n    switch (action.type) {\n      case 'SET_FILTER':\n        return action.filter\n      default:\n        return state\n    }\n  }\n  \n  export const setFilter = filter => {\n    return {\n      type: 'SET_FILTER',\n      filter\n    }\n  }\n  \n  export default filterReducer","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Form, Button } from 'react-bootstrap'\nimport ListSuggestion from './ListSuggestion'\n\nconst SearchForm = (props) => {\n\n  const beersAsList = () => props.beers ? props.beers.map(b => b.name) : []\n  const breweriesAsList = () => props.breweries ? props.breweries.map(b => b.name) : []\n\n  const suggestions = beersAsList().concat(breweriesAsList())\n\n  return (\n    <Form onSubmit={props.handleSearch} inline className='pl-2'>\n      <Form.Control list={props.id} name='filter' type ='text' className='p-2 m-2' placeholder='search for bottles, beers and more ...'></Form.Control>\n        <ListSuggestion\n          suggestions={suggestions}\n          id={props.id}\n        />\n      <Button type='submit'>Search</Button>\n    </Form>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    beers: state.beers,\n    breweries: state.breweries\n  }\n}\n\nexport default connect(mapStateToProps)(SearchForm)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { NavLink } from 'react-router-dom'\nimport { Navbar, Nav, Row, Card, Col, Container } from 'react-bootstrap'\nimport { logoutUser } from '../reducers/loginReducer'\nimport { setFilter } from '../reducers/filterReducer'\nimport { setNotification } from '../reducers/notificationReducer'\nimport SearchForm from './SearchForm'\n\nconst Navigation = (props) => {\n\n  const handleLogout = () => {\n    try {\n      props.logoutUser()\n      props.setNotification('Logout was successfull')\n      props.history.push('/')\n    } catch (exception) {\n      props.setNotification('Logout failed!', 'error')\n    }\n  }\n\n  const handleSearch = (e) => {\n    e.preventDefault()\n    props.setFilter(e.target.filter.value)\n    e.target.filter.value = ''\n    props.history.push('/search')\n  }\n\n  return (\n    <Container fluid>\n      <Row>\n        <Navbar as={Col} collapseOnSelect expand='lg' bg='dark' variant='dark'>\n          <Navbar.Toggle aria-controls='responsive-navbar-nav' />\n          <Navbar.Collapse id='responsive-navbar-nav'>\n            <Nav className='mr-auto'>\n              <Nav.Link href='#' as='span'>\n                <NavLink to='/' >Home</NavLink>\n              </Nav.Link>\n\n              {!props.user &&\n              <>\n                <Nav.Link href='#' as='span'>\n                  <NavLink to='/login' >Login</NavLink>\n                </Nav.Link>\n                <Nav.Link href='#' as='span'>\n                  <NavLink to='/register' >Create account</NavLink>\n                </Nav.Link>\n              </>\n              }\n\n              {props.user &&\n              <>\n                <Nav.Link href='#' as='span'>\n                  <NavLink to={`/users/${props.user.id}/stash`} >Manage stash</NavLink>\n                </Nav.Link>\n                <Nav.Link href='#' as='span'>\n                  <NavLink to='/rate' >Rate beer</NavLink>\n                </Nav.Link>\n                <Nav.Link href='#'>\n                  <Nav.Item onClick={handleLogout} >Logout</Nav.Item>\n                </Nav.Link>\n              </>\n              }\n            </Nav>\n        \n            {props.user &&\n            <>\n              {!props.user.picture &&\n                <Nav.Link href='#' as='span' >\n                  <NavLink to='/profile' >Profile</NavLink>\n                </Nav.Link>\n              }\n              {props.user.picture &&\n                <NavLink to='/profile' >\n                  <Card.Img\n                    src={`/api/pictures/${props.user.picture}`}\n                    href='/profile'\n                    style={{ width: '50px', height: '50px', borderRadius: '50%' }}\n                    alt='Profile'\n                  />\n                </NavLink>\n              }\n              <SearchForm\n                handleSearch={handleSearch}\n                id='search'\n              />\n            </>\n            }\n          </Navbar.Collapse>\n        </Navbar>\n      </Row>\n    </Container>\n  )\n}\n\nconst mapDispatchToProps = {\n  logoutUser,\n  setFilter,\n  setNotification\n}\n\nexport default connect(null, mapDispatchToProps)(withRouter(Navigation))","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { Form, Button, Row, Col, Jumbotron, Container } from 'react-bootstrap'\nimport { registerUser } from '../reducers/usersReducer'\nimport { setNotification } from '../reducers/notificationReducer'\nimport { useTextField } from '../hooks'\nimport InputGroup from './InputGroup'\n\nconst Register = (props) => {\n  const [validated, setValidated] = useState(false)\n  const [username, usernameErrors] = useTextField('text', 5, 20, true)\n  const [password, passwordErrors] = useTextField('password', 5, 20, true)\n  const [name, nameErrors] = useTextField('text', 1, 20, true)\n  const [email, emailErrors] = useTextField('text', 1, 50, true)\n  const [city, cityErrors] = useTextField('text', 1, 50, false)\n  const [country, countryErrors] = useTextField('text', 1, 50, false)\n  const [hidden, setHidden] = useState(false)\n\n  const handleRegister = async (event) => {\n    event.preventDefault()\n    \n    if (!event.target.checkValidity()) {\n      setValidated(true)\n      return\n    }\n    \n    try {\n      await props.registerUser({\n        username: username.value,\n        password: password.value,\n        name: name.value,\n        email: email.value,\n        city: city.value,\n        country: country.value,\n        hidden\n      })\n  \n      props.setNotification('Registration was succesfull')\n      props.history.push('/login')\n    \n    } catch (exception) {\n      props.setNotification('Registration failed', 'error')\n    }  \n  }\n\n  return (\n    <Container fluid>\n      <Row>\n        <Jumbotron as={Col} className='text-center'>\n          <h2>Register to Bottlestash</h2>\n        </Jumbotron>\n      </Row>\n      <Row className='mb-3'>\n        <Col className='formstyle'>\n          <Form noValidate validated={validated} onSubmit={handleRegister} id='registerForm' >\n            <InputGroup\n              name='Username'\n              state={username}\n              placeholder='username (not showing others)'\n              errors={usernameErrors}\n            />\n            <InputGroup\n              name='Password'\n              state={password}\n              placeholder='password'\n              errors={passwordErrors}\n            />\n            <InputGroup\n              name='Name'\n              state={name}\n              placeholder='name (to show other users)'\n              errors={nameErrors}\n            />\n            <InputGroup\n              name='Email'\n              state={email}\n              placeholder='email'\n              errors={emailErrors}\n            />\n\n            <Form.Row>\n              <Col style={{ maxWidth: '50%' }} className='p-2'>\n                <InputGroup\n                  name='City'\n                  state={city}\n                  placeholder='(optional)'\n                  errors={cityErrors}\n                />\n              </Col>\n              <Col style={{ maxWidth: '50%' }} className='p-2'>\n                <InputGroup\n                  name='Country'\n                  state={country}\n                  placeholder='(optional)'\n                  errors={countryErrors}\n                />\n              </Col>\n            </Form.Row>\n            <Form.Group>\n              <Form.Check\n                type='checkbox'\n                onChange={({ target }) => setHidden(target.checked)}\n                label='I want my stash to be private' />\n            </Form.Group>\n            <Button variant='success' type='submit' block>Register</Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nconst mapDispatchToProps = {\n  registerUser, setNotification\n}\n\nexport default connect(null, mapDispatchToProps)(withRouter(Register))","import React from 'react'\nimport { Modal, Button } from 'react-bootstrap'\nimport { NavLink } from 'react-router-dom'\nimport { updateUserToState } from '../reducers/usersReducer'\nimport { setNotification } from '../reducers/notificationReducer'\nimport { removeBottle, updateBottle } from '../reducers/bottlesReducer'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\n\nconst BottleDetails = (props) => {\n\n  if (!props.bottle) {\n    return null\n  }\n\n  const bottle = props.bottle\n\n  const handleDrink = async (needClosing) => {\n    try {\n      const updateableBottle = { ...bottle,\n        beer: bottle.beer.id,\n        count: bottle.count - 1\n      }\n\n      if (bottle.count < 2) {\n        await props.removeBottle(bottle.id)\n        props.setNotification(`This was your last bottle of ${bottle.beer.name}`)\n      } else {\n        await props.updateBottle(bottle.id, updateableBottle)\n        props.setNotification(`You drinked one bottle of ${bottle.beer.brewery.name} ${bottle.beer.name}`)\n      }\n    \n      props.updateUserToState(props.user.username)\n\n      if (needClosing) {\n        props.toggleVisibility()\n      }\n          \n    } catch (exception) {\n      props.setNotification('Bottle update failed!', 'error')\n    }\n  }\n    \n  return (\n    <Modal className='text-center' centered show={props.visible} onHide={props.toggleVisibility}>\n      <Modal.Header closeButton>\n        <Modal.Title >{bottle.beer.name}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>Alcohol: {bottle.beer.abv} %</p>\n        <p>Brewery: {bottle.beer.brewery.name}</p>\n        <p>Price: {bottle.price ? bottle.price : '-'} &euro;</p>\n        <p>Volume: {bottle.volume} litres</p>\n        <p>Bottled: {bottle.bottled ? moment(bottle.bottled).format('DD.MM.YYYY') : '-'}</p>\n        <p>Expires: {bottle.expiration ? moment(bottle.expiration).format('DD.MM.YYYY') : '-'}</p>\n        <p>Beers age: {bottle.bottled ? moment(new Date()).diff(moment(bottle.bottled), 'months') : '-'} months</p>\n        <p>Bottles: {bottle.count}</p>\n      </Modal.Body>\n\n      {props.user.username === props.userToView.username &&\n        <Modal.Footer>\n          <NavLink className='btn' onClick={() => handleDrink(false)} to={{ pathname: '/rate', state: { bottle }}} >Drink and rate</NavLink>\n          <Button onClick={() => handleDrink(true)} variant='light'>Just drink</Button>\n        </Modal.Footer>\n      }\n    </Modal>\n  )\n}\n\nconst mapDispatchToProps = {\n  removeBottle,\n  updateBottle,\n  updateUserToState,\n  setNotification\n}  \n\nexport default connect(null, mapDispatchToProps)(BottleDetails)","import React, { useState } from 'react'\nimport { Col, Table } from 'react-bootstrap'\nimport BottleDetails from './BottleDetails'\nimport moment from 'moment'\n\nconst BottlesTable = (props) => {\n  const [visible, setVisible] = useState(false)\n  const [bottle, setBottle] = useState(null)\n\n  if (!props.stash) {\n    return null\n  }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  const handleShowDetails = (b) => {\n    setBottle(b)\n    setVisible(true)\n  }\n\n  return (\n    <Col className='maindiv'>\n      <Table hover responsive>\n        <thead>\n          <tr>\n            <th>Count</th>\n            <th>Brewery</th>\n            <th>Beer</th>\n            <th>Expiration</th>\n          </tr>\n        </thead>\n        <tbody >\n          {props.stash.map(b =>\n            <tr\n              key={b.id}\n              onClick={() => handleShowDetails(b)}\n            >\n              <td>{b.count}</td>\n              <td>{b.beer.brewery.name}</td>\n              <td>{b.beer.name} {b.beer.abv} %</td>\n              <td style={{ color: moment(b.expiration).isBefore(new Date()) ? 'red' : 'black'}}>{b.expiration ? moment(b.expiration).fromNow() : '-'}</td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n      <BottleDetails\n        user={props.user}\n        userToView={props.userToView}\n        bottle={bottle}\n        visible={visible}\n        toggleVisibility={toggleVisibility}\n      />\n    </Col>\n  )\n}\n\nexport default BottlesTable","import React from 'react'\nimport { Col, Card, ListGroup } from 'react-bootstrap'\n\nconst StashDetails = ({ stash }) => {\n\n  const bottlesCount = stash.reduce((sum, bottle) => sum + bottle.count, 0)\n  const stashCost = stash.reduce((sum, bottle) => sum + bottle.price, 0)\n  const stashVolume = stash.reduce((sum, bottle) => sum + bottle.volume, 0)\n\n  return (\n    <Col className='maindiv'>\n      <Card>\n        <Card.Header>\n          <Card.Title>Details of your stash</Card.Title>\n        </Card.Header>\n        <ListGroup variant='flush'>\n          <ListGroup.Item>{bottlesCount} bottles in your stash</ListGroup.Item>\n          <ListGroup.Item>{stash.length} different beers</ListGroup.Item>\n          <ListGroup.Item>Your stash costs {stashCost.toFixed(2)} &euro;</ListGroup.Item>\n          <ListGroup.Item>Your stash has {stashVolume.toFixed(2)} litres of beer</ListGroup.Item>\n        </ListGroup>\n      </Card>\n    </Col>\n  )\n}\n\nexport default StashDetails","import React, { useState } from 'react'\nimport { Row, Col, Jumbotron, Nav, Container } from 'react-bootstrap'\nimport { NavLink } from 'react-router-dom'\nimport BottlesTable from './BottlesTable'\nimport StashDetails from './StashDetails'\n\nconst Stash = (props) => {\n  const [detailsVisible, setDetailsVisible] = useState(false)\n\n  if (!props.userToView) {\n    return null\n  }\n\n  return (\n    <Container fluid>\n      <Row>\n        <Jumbotron as={Col} className='text-center'>\n          <h2>{props.userToView.name} 's Stash</h2>\n        </Jumbotron>\n      </Row>\n\n      {props.userToView.username === props.user.username && props.userToView.hidden &&\n      <Row>\n        <Col className='maindiv'>\n          <p>\n            Your stash is hidden and won't show to other users.\n            If you wan't to make it visible to other users, please\n            update visibility settings in your profile\n          </p>\n        </Col>\n      </Row>\n      }\n\n      {props.userToView.username !== props.user.username && props.userToView.hidden &&\n      <Row>\n        <Col className='maindiv'>\n          <p>This stash is private and cannot be peeked - sorry!</p>\n        </Col>\n      </Row>\n      }\n\n      {(props.userToView.username === props.user.username) &&\n      <Row>\n        <Col className='d-flex justify-content-center mb-4'>\n          <Nav>\n            <Nav.Link onClick={() => setDetailsVisible(!detailsVisible)} className='p-2'>\n              {detailsVisible ? 'Back to stash' : 'Stash details'}\n            </Nav.Link>\n            <Nav.Link as='span' className='p-2'>\n              <NavLink to='/bottles'>Add new bottle</NavLink>\n            </Nav.Link>\n          </Nav>\n        </Col>\n      </Row>\n      }\n      {(props.userToView.username === props.user.username || !props.userToView.hidden) &&\n      <Row className='mb-3'>\n        {!detailsVisible\n          ? <BottlesTable stash={props.userToView.stash} user={props.user} userToView={props.userToView}></BottlesTable>\n          : <StashDetails stash={props.userToView.stash}></StashDetails>\n        }\n      </Row>\n      }\n    </Container>\n  )\n}\n\nexport default Stash","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Row, Col, Jumbotron, Nav } from 'react-bootstrap'\n\nconst Footer = (props) => {\n  return (\n    <Jumbotron className='mt-5' style={{ backgroundColor: 'whitesmoke', color: 'black' }}>\n      <Row>\n        <Col>\n          <Nav className='justify-content-center'>\n            <Nav.Link as='span'>\n              <NavLink to='/' >Home</NavLink>\n            </Nav.Link>\n            <Nav.Link as='span'>\n              <NavLink to='/about' >About</NavLink>\n            </Nav.Link>\n            <Nav.Link href='https://github.com/MiguelSombrero/bottlestash-app-backend'>Github</Nav.Link>\n          </Nav>\n        </Col>\n      </Row>\n      <Row className='mt-4'>\n        <Col className='text-center'>\n          <p>&copy; Miika Somero 2019</p>\n        </Col>\n      </Row>\n    </Jumbotron>\n  )\n}\n\nexport default Footer","import { useResource } from '../hooks'\n\nconst picturesService = useResource('/api/pictures')\n\n/**\n * This is not exactly \"reducer\" because nothing goes to state\n * This is more like a \"service\"\n * Although for the unity, fetching a pictures is also implemented\n * in reducer, as fetching the other resources\n */\n  \nexport const getOnePicture = id => {\n  return async dispatch => {\n    const picture = await picturesService.getOne(id)\n  }\n}\n  \nexport const addPicture = newPicture => {\n  return async dispatch => {\n    const data = new FormData()\n    data.append('picture', newPicture)\n    const picture = await picturesService.createImage(data)\n    return picture\n  }\n}\n","import React from 'react'\nimport { Form, Card } from 'react-bootstrap'\n\nconst ImageInputGroup = (props) => {\n  return (\n    <Form.Group className='custom-file mb-2'>\n      <Form.Label className='custom-file-label'>Click to add picture</Form.Label>\n      <Form.Control\n        name='picture'\n        className='custom-file-input'\n        type='file'\n        accept='image/*'\n        onChange={({ target }) => props.setPicture(target.files[0])}\n      />\n      {props.picture &&\n        <Card className='mt-2' onClick={() => props.setPicture(null)}>\n          <Card.Img\n            src={URL.createObjectURL(props.picture)}\n            alt=''\n            className='img-thumbnail'\n          />\n        </Card>\n      }\n    </Form.Group>\n  )\n}\n\nexport default ImageInputGroup","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { addBeer, getOneBeer } from '../reducers/beersReducer'\nimport { addBrewery, getOneBrewery } from '../reducers/breweriesReducer'\nimport { addBottle } from '../reducers/bottlesReducer'\nimport { addPicture } from '../reducers/picturesReducer'\nimport { updateUserToState } from '../reducers/usersReducer'\nimport { setNotification } from '../reducers/notificationReducer'\nimport { withRouter } from 'react-router-dom'\nimport { Row, Col, Jumbotron, Form, Button, Container } from 'react-bootstrap'\nimport { useTextField, useNumberField } from '../hooks'\nimport ImageInputGroup from './ImageInputGroup'\nimport InputGroup from './InputGroup'\n\nconst AddBottle = (props) => {\n  const [validated, setValidated] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [picture, setPicture] = useState(null)\n  const [breweryName, breweryErrors] = useTextField('text', 1, 50, true)\n  const [name, nameErrors] = useTextField('text', 1, 50, true)\n  const [abv, abvErrors] = useNumberField('number', 0, 100, 0.1, true)\n  const [price, priceErrors] = useNumberField('number', 0, 1000, 0.01)\n  const [count, countErrors] = useNumberField('number', 0, 50, 1, true)\n  const [volume, volumeErrors] = useNumberField('number', 0, 10, 0.001)\n  const [bottled, bottledErrors] = useNumberField('date', '1990-01-01', '2050-01-01', 1)\n  const [expiration, expirationErrors] = useNumberField('date', '1990-01-01', '2050-01-01', 1)\n  \n  const handleAddBottle = async (event) => {\n    event.preventDefault()\n    \n    if (!event.target.checkValidity()) {\n      setValidated(true)\n      return\n    }\n\n    setIsLoading(true)\n\n    try {\n      let brewery = await props.getOneBrewery(breweryName.value)\n      \n      if (!brewery) {\n        brewery = await props.addBrewery({ name: breweryName.value })\n      }\n\n      let beer = await props.getOneBeer(brewery.id, name.value, abv.value)\n\n      if (!beer) {\n        beer = await props.addBeer({ breweryId: brewery.id, name: name.value, abv: abv.value })\n      }\n\n      const newPicture = picture\n        ? await props.addPicture(picture)\n        : null\n\n      await props.addBottle({\n        price: price.value,\n        count: count.value,\n        volume: volume.value,\n        bottled: bottled.value,\n        expiration: expiration.value,\n        beerId: beer.id,\n        pictureId: newPicture ? newPicture.id : null\n      })\n\n      const user = await props.updateUserToState(props.user.username)\n\n      setIsLoading(false)\n      props.setNotification('Added bottle succesfully')\n      props.history.push(`/users/${user.id}/stash`)\n      \n    } catch (exception) {\n      props.setNotification('Adding bottle failed!', 'error')\n    }\n  }\n\n  const breweriesAsList = () => !props.breweries\n    ? null\n    : props.breweries.map(b => b.name)\n\n  const beersAsList = () => !props.beers\n    ? null\n    : props.beers.filter(b => b.brewery.name === breweryName.value).map(b => b.name)\n\n  const abvAsList = () => !props.beers\n    ? null\n    : props.beers.filter(b => b.brewery.name === breweryName.value && b.name === name.value).map(b => b.abv)\n\n    return (\n    <Container fluid>\n      <Row>\n        <Jumbotron as={Col} className='text-center'>\n          <h2>Add new bottle to your stash</h2>\n        </Jumbotron>\n      </Row>\n      <Row className='mb-3'>\n        <Col className='formstyle'>\n          <Form noValidate validated={validated} onSubmit={handleAddBottle} id='addBottleForm' >\n            <InputGroup\n              name='Brewery'\n              suggestions={breweriesAsList()}\n              state={breweryName}\n              placeholder='brewery name'\n              errors={breweryErrors}\n            />\n            <InputGroup\n              name='Name'\n              suggestions={beersAsList()}\n              state={name}\n              placeholder='beers name'\n              errors={nameErrors}\n            />\n            <InputGroup\n              name='Abv'\n              suggestions={abvAsList()}\n              state={abv}\n              placeholder='alcohol by volume'\n              errors={abvErrors}\n            />\n            <InputGroup\n              name='Count'\n              state={count}\n              placeholder='number of bottles'\n              errors={countErrors}\n            />\n            <InputGroup\n              name='Volume'\n              state={volume}\n              placeholder='volume of one bottle in litres'\n              errors={volumeErrors}\n            />\n            <InputGroup\n              name='Price'\n              state={price}\n              placeholder='price of one bottle in euros'\n              errors={priceErrors}\n            />\n            <Form.Row>\n              <Col style={{ maxWidth: '50%' }} className='p-2'>\n                <InputGroup\n                  name='Bottled'\n                  state={bottled}\n                  errors={bottledErrors}\n                />\n              </Col>\n              <Col style={{ maxWidth: '50%' }} className='p-2'>\n                <InputGroup\n                  name='Expiration'\n                  state={expiration}\n                  errors={expirationErrors}\n                />\n              </Col>\n            </Form.Row>\n            <ImageInputGroup picture={picture} setPicture={setPicture} />\n            <Button\n              variant='success'\n              type='submit'\n              block\n              disabled={isLoading}\n              \n              > {isLoading ? 'Loading ...' : 'Add beer'}\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nconst mapDispatchToProps = {\n  addBeer,\n  addBrewery,\n  addBottle,\n  addPicture,\n  getOneBeer,\n  getOneBrewery,\n  updateUserToState,\n  setNotification\n}\n\nexport default connect(null, mapDispatchToProps)(withRouter(AddBottle))","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Row, Alert, Col } from 'react-bootstrap'\n\nconst Notification = (props) => {\n  if (!props.notification) {\n    return null\n  }\n\n  return (\n    <Row className='alert'>\n      <Alert as={Col} className='text-center col-12' variant={props.notification.type === 'success' ? 'success' : 'danger'}>\n        <h6>{props.notification.message}</h6>\n      </Alert>\n    </Row>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification\n  }\n}\n\nexport default connect(mapStateToProps)(Notification)","import React, { useState, useEffect } from 'react'\nimport { Row, Col, Jumbotron, Form, Button, Container } from 'react-bootstrap'\nimport { useTextField, useNumberField } from '../hooks'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { addBeer, getOneBeer } from '../reducers/beersReducer'\nimport { addBrewery, getOneBrewery } from '../reducers/breweriesReducer'\nimport { addRating } from '../reducers/ratingsReducer'\nimport { addPicture } from '../reducers/picturesReducer'\nimport { setNotification } from '../reducers/notificationReducer'\nimport ImageInputGroup from './ImageInputGroup'\nimport InputGroup from './InputGroup'\nimport moment from 'moment'\n\nconst Rate = (props) => {\n  const [validated, setValidated] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [picture, setPicture] = useState(null)\n  const [beerName, beerErrors, setBeerName] = useTextField('text', 1, 50, true)\n  const [breweryName, breweryErrors, setBreweryName] = useTextField('text', 1, 50, true)\n  const [description, descriptionErrors] = useTextField('text', 0, 1000, false)\n  const [alcohol, alcoholErrors, setAlcohol] = useNumberField('number', 0, 100, 0.1, true)\n  const [bottled, bottledErrors, setBottled] = useNumberField('date', '1990-01-01', '2050-01-01', 1, false)\n  const [aroma, , setAroma] = useNumberField('range', 1, 10, 1, true)\n  const [taste, , setTaste] = useNumberField('range', 1, 10, 1, true)\n  const [appearance, , setAppearance] = useNumberField('range', 1, 5, 1, true)\n  const [mouthfeel, , setMouthfeel] = useNumberField('range', 1, 5, 1, true)\n  const [overall, , setOverall] = useNumberField('range', 1, 20, 1, true)\n\n  useEffect(() => {\n    if (props.location.state) {\n      const bottle = props.location.state.bottle\n\n      setBeerName(bottle.beer.name)\n      setBreweryName(bottle.beer.brewery.name)\n      setAlcohol(bottle.beer.abv)\n      if (bottle.bottled) {\n        setBottled(moment(bottle.bottled).format('YYYY-MM-DD'))\n      }\n    }\n    setAroma(5)\n    setTaste(5)\n    setMouthfeel(3)\n    setAppearance(3)\n    setOverall(10)\n  }, [])\n\n  const handleRate = async (event) => {\n    event.preventDefault()\n    \n    if (!event.target.checkValidity()) {\n      setValidated(true)\n      return\n    }\n    \n    setIsLoading(true)\n\n    try {\n      let beer = null\n\n      if (!props.beer) {\n        let brewery = await props.getOneBrewery(breweryName.value)\n        \n        if (!brewery) {\n          brewery = await props.addBrewery({ name: breweryName.value })\n        }\n  \n        beer = await props.getOneBeer(brewery.id, beerName.value, alcohol.value)\n  \n        if (!beer) {\n          beer = await props.addBeer({ breweryId: brewery.id, name: beerName.value, abv: alcohol.value })\n        }\n      }\n\n      const newPicture = picture\n        ? await props.addPicture(picture)\n        : null\n\n      const newRating = {\n        beerId: props.beer === undefined ? beer.id : props.beer.id,\n        description: description.value,\n        ageofbeer: bottled ? moment(new Date()).diff(moment(bottled.value), 'months') : null,\n        aroma: aroma.value,\n        taste: taste.value,\n        appearance: appearance.value,\n        mouthfeel: mouthfeel.value,\n        overall: overall.value,\n        pictureId: newPicture ? newPicture.id : null\n      }\n  \n      props.addRating(newRating)\n      setIsLoading(false)\n      props.setNotification('New rating added!')\n      props.history.push('/')\n\n    } catch (exception) {\n      props.setNotification('Adding a new rating failed!', 'error')\n    }\n  }\n\n  const breweriesAsList = () => !props.breweries\n    ? null\n    : props.breweries.map(b => b.name)\n\n  const beersAsList = () => !props.beers\n    ? null\n    : props.beers.filter(b => b.brewery.name === breweryName.value).map(b => b.name)\n\n  const abvAsList = () => !props.beers\n    ? null\n    : props.beers.filter(b => b.brewery.name === breweryName.value && b.name === beerName.value).map(b => b.abv)\n\n  return (\n    <Container fluid>\n      <Row>\n        <Jumbotron as={Col} className='text-center mb-2'>\n            <h2>Rate beer</h2>\n        </Jumbotron>\n      </Row>\n      <Row className='mb-3'>\n        <Col className='formstyle'>\n          <Form noValidate validated={validated} onSubmit={handleRate} id='rateForm'>\n            <InputGroup\n              name='Brewery'\n              suggestions={breweriesAsList()}\n              state={breweryName}\n              placeholder='brewery name'\n              errors={breweryErrors}\n            />\n            <InputGroup\n              name='Beer'\n              suggestions={beersAsList()}\n              state={beerName}\n              placeholder='beers name'\n              errors={beerErrors}\n            />\n            <InputGroup\n              name='Abv'\n              suggestions={abvAsList()}\n              state={alcohol}\n              placeholder='alcohol by volume'\n              errors={alcoholErrors}\n            />\n            <InputGroup\n              name='Bottled'\n              state={bottled}\n              errors={bottledErrors}\n            />\n            <Form.Group >\n              <Form.Label>Aroma</Form.Label>\n              <Form.Text>{aroma.value}</Form.Text>\n              <Form.Control {...aroma} />\n            </Form.Group>\n            <Form.Group >\n              <Form.Label>Taste</Form.Label>\n              <Form.Text>{taste.value}</Form.Text>\n              <Form.Control {...taste} />\n            </Form.Group>\n            <Form.Group >\n              <Form.Label>Appearance</Form.Label>\n              <Form.Text>{appearance.value}</Form.Text>\n              <Form.Control {...appearance} />\n            </Form.Group>\n            <Form.Group >\n              <Form.Label>Mouthfeel</Form.Label>\n              <Form.Text>{mouthfeel.value}</Form.Text>\n              <Form.Control {...mouthfeel} />\n            </Form.Group>\n            <Form.Group >\n              <Form.Label>Overall</Form.Label>\n              <Form.Text>{overall.value}</Form.Text>\n              <Form.Control {...overall} />\n            </Form.Group>\n            <Form.Group >\n              <Form.Label>Description</Form.Label>\n              <Form.Control as='textarea' rows='4' {...description} placeholder='describe your beer' />\n              <Form.Control.Feedback type='invalid' >{descriptionErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <ImageInputGroup picture={picture} setPicture={setPicture} />\n            <Button\n              type='submit'\n              variant='success'\n              block\n              disabled={isLoading}\n\n              > {isLoading ? 'Loading ...' : 'Add Rating'}\n              </Button>\n          </Form>\n        </Col>\n      </Row>    \n    </Container>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    beers: state.beers,\n    breweries: state.breweries\n  }\n}\n\nconst mapDispatchToProps = {\n  addBeer,\n  getOneBeer,\n  addBrewery,\n  getOneBrewery,\n  addRating,\n  addPicture,\n  setNotification\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Rate))","import React, { useState, useEffect } from 'react'\nimport { Row, Col, Form, Button, Jumbotron, Nav, Container } from 'react-bootstrap'\nimport { NavLink, withRouter } from 'react-router-dom'\nimport { useTextField } from '../hooks'\nimport { connect } from 'react-redux'\nimport { removeUser, updateUser } from '../reducers/usersReducer'\nimport { addPicture } from '../reducers/picturesReducer'\nimport { logoutUser } from '../reducers/loginReducer'\nimport { setNotification } from '../reducers/notificationReducer'\nimport ImageInputGroup from './ImageInputGroup'\nimport InputGroup from './InputGroup'\n\nconst Profile = (props) => {\n  const [validated, setValidated] = useState(false)\n  const [picture, setPicture] = useState(null)\n  const [name, nameErrors, setName] = useTextField('text', 1, 20, true)\n  const [email, emailErrors, setEmail] = useTextField('text', 1, 50, true)\n  const [city, cityErrors, setCity] = useTextField('text', 1, 50, false)\n  const [country, countryErrors, setCountry] = useTextField('text', 1, 20, false)\n  const [hidden, setHidden] = useState(false)\n\n  useEffect(() => {\n    if (props.user) {\n      setName(props.user.name)\n      setEmail(props.user.email)\n      setCity(props.user.city || '')\n      setCountry(props.user.country || '')\n      setHidden(props.user.hidden)\n    }\n  }, [props.user])\n\n  if (!props.user) {\n    return null\n  }\n  \n  const handleProfileUpdate = async (event) => {\n    event.preventDefault()\n   \n    if (!event.target.checkValidity()) {\n      setValidated(true)\n      return\n    }\n\n    try {\n      const newPicture = picture\n        ? await props.addPicture(picture)\n        : null\n\n      const updateableUser = {\n        name: name.value,\n        email: email.value,\n        city: city.value,\n        country: country.value,\n        pictureId: newPicture ? newPicture.id : props.user.picture,\n        hidden\n      }\n  \n      await props.updateUser(props.user.id, updateableUser)\n      props.setNotification('Profile saved!')\n\n    } catch (exception) {\n      props.setNotification('Saving profile failed!', 'error')\n    }\n  }\n\n  const handleDelete = async () => {\n    if (window.confirm('Are you sure you want to delete your profile and all its data?')) {\n      try {\n        await props.removeUser(props.user.id)\n        await props.logoutUser()\n        props.setNotification('Your profile and data has been deleted')\n        props.history.push('/')\n  \n      } catch (exception) {\n        props.setNotification('Removing yor profile failed!', 'error')\n      }\n    }\n  }\n\n  return (\n    <Container fluid>\n      <Row>\n        <Jumbotron as={Col} className='text-center mb-2'>\n          <h2>{props.user.username} 's profile</h2>\n        </Jumbotron>\n      </Row>\n      <Row>\n        <Col className='d-flex justify-content-center mb-4'>\n          <Nav>\n            <Nav.Link as='span' className='p-2'>\n              <NavLink to={`/users/${props.user.id}/stash`} >Your stash</NavLink>\n            </Nav.Link>\n            <Nav.Link as='span' className='p-2'>\n              <NavLink to={`/users/${props.user.id}/ratings`} >Your ratings</NavLink>\n            </Nav.Link>\n            <Nav.Link onClick={handleDelete} className='p-2'>\n              Delete profile\n            </Nav.Link>\n          </Nav>\n        </Col>\n      </Row>\n      <Row className='mb-3'>\n        <Col className='formstyle'>\n          <Form noValidate validated={validated} onSubmit={handleProfileUpdate} id='profileUpdateForm' >\n            <InputGroup\n              name='Name'\n              state={name}\n              errors={nameErrors}\n            />\n            <InputGroup\n              name='Email'\n              state={email}\n              errors={emailErrors}\n            />\n            <InputGroup\n              name='Name'\n              state={name}\n              errors={nameErrors}\n            />\n            <Form.Row>\n              <Col style={{ maxWidth: '50%' }} className='p-2'>\n                <InputGroup\n                  name='City'\n                  state={city}\n                  errors={cityErrors}\n                />\n              </Col>\n              <Col style={{ maxWidth: '50%' }} className='p-2'>\n                <InputGroup\n                  name='Country'\n                  state={country}\n                  errors={countryErrors}\n                />\n              </Col>\n            </Form.Row>\n            <Form.Group>\n              <Form.Check\n                type='checkbox'\n                checked={hidden}\n                onChange={({ target }) => setHidden(target.checked)}\n                label='I want my stash to be private' />\n            </Form.Group>\n            <ImageInputGroup picture={picture} setPicture={setPicture} />\n            <Button type='submit' variant='success' block>Save profile</Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nconst mapDispatchToProps = {\n  removeUser,\n  updateUser,\n  logoutUser,\n  addPicture,\n  setNotification\n}\n\nexport default connect(null, mapDispatchToProps)(withRouter(Profile))\n","import React from 'react'\nimport { Col, Row, Jumbotron, ListGroup, Container } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { setFilter } from '../reducers/filterReducer'\nimport SearchForm from './SearchForm'\nimport { NavLink } from 'react-router-dom'\n\nconst SearchResults = (props) => {\n\n  const byHidden = (b) => !b.user.hidden\n  const byBeerName = (b) => !props.filter ? false : b.name.toLowerCase().includes(props.filter.toLowerCase())\n  const byBreweryName = (b) => !props.filter ? false : b.name.toLowerCase().includes(props.filter.toLowerCase())\n\n  const bottlesToShow = props.bottles\n    ? props.bottles.filter(byHidden).filter(b => byBeerName(b.beer) || byBreweryName(b.beer.brewery))\n    : null\n\n  const beersToShow = props.beers\n    ? props.beers.filter(byBeerName)\n    : null\n\n  const breweriesToShow = props.breweries\n    ? props.breweries.filter(byBreweryName)\n    : null\n\n  const handleSearch = (e) => {\n    e.preventDefault()\n    props.setFilter(e.target.filter.value)\n    e.target.filter.value = ''\n  }\n\n  const showBottles = () => \n    <>\n    <Row>\n      <Col className='text-center'>\n        <h3>Bottles</h3>\n        <p>\n          {bottlesToShow.length} bottles for search '{props.filter}'\n        </p>\n      </Col>\n    </Row>\n    <Row>\n      <Col className='maindiv'>\n        <ListGroup variant='flush'>\n          {bottlesToShow.map(b =>\n            <ListGroup.Item key={b.id}>\n              {b.beer.name} {b.beer.abv} %, {b.beer.brewery.name} <NavLink to={`users/${b.user.id}/stash`} >in {b.user.name} stash</NavLink>\n            </ListGroup.Item>\n          )}\n        </ListGroup>\n      </Col>\n    </Row>\n  </>\n\nconst showBeers = () => \n  <>\n    <Row>\n      <Col className='text-center'>\n        <h3>Beers</h3>\n        <p>\n          {beersToShow.length} beers for search '{props.filter}'\n        </p>\n      </Col>\n    </Row>\n    <Row>\n      <Col className='maindiv'>\n        <ListGroup variant='flush'>\n          {beersToShow.map(b =>\n            <ListGroup.Item key={b.id}>\n              <NavLink to={`/beers/${b.id}`} >{b.name} {b.abv} %</NavLink>, beer by {b.brewery.name}\n            </ListGroup.Item>\n          )}\n        </ListGroup>\n      </Col>\n    </Row>\n  </>\n\nconst showBreweries = () => \n  <>\n    <Row>\n      <Col className='text-center'>\n        <h3>Breweries</h3>\n        <p>\n          {breweriesToShow.length} breweries for search '{props.filter}'\n        </p>\n      </Col>\n    </Row>\n    <Row>\n      <Col className='maindiv'>\n        <ListGroup variant='flush'>\n          {breweriesToShow.map(b =>\n            <ListGroup.Item key={b.id}>\n              <NavLink to={`/breweries/${b.id}`} >{b.name}</NavLink>\n            </ListGroup.Item>\n          )}\n        </ListGroup>\n      </Col>\n    </Row>\n  </>\n\n  return (\n    <Container fluid>\n      <Row>\n        <Jumbotron as={Col} className='text-center'>\n          <h2>Search from Bottlestash</h2>\n        </Jumbotron>\n      </Row>\n      <Row>\n        <Col className='maindiv d-flex justify-content-center mb-5'>\n          <SearchForm\n            handleSearch={handleSearch}\n            id='search'\n          />\n        </Col>\n      </Row>\n      {props.filter &&\n        <>\n          {bottlesToShow.length > 0\n            ? showBottles()\n            : <p className='text-center'>No bottles for search '{props.filter}'</p>\n          }\n          {beersToShow.length > 0\n            ? showBeers()\n            : <p className='text-center'>No beers for search '{props.filter}'</p>\n          }\n          {breweriesToShow.length > 0\n            ? showBreweries()\n            : <p className='text-center'>No breweries for search '{props.filter}'</p>\n          }\n        </>\n      }\n    </Container>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    filter: state.filter,\n    bottles: state.bottles,\n    beers: state.beers,\n    breweries: state.breweries\n  }\n}\n\nconst mapDispatchToProps = {\n  setFilter\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResults)","import React from 'react'\nimport { Row, Col, Jumbotron, ListGroup, Container } from 'react-bootstrap'\nimport { NavLink } from 'react-router-dom'\n\nconst Brewery = ({ brewery }) => {\n  \n  if (!brewery) {\n    return null\n  }\n\n  return (\n    <Container fluid>\n      <Row>\n        <Jumbotron as={Col} className='text-center'>\n          <h2>{brewery.name}</h2>\n        </Jumbotron>\n      </Row>\n      <Row>\n        <Col className='text-center'>\n          <h3>Beers</h3>\n        </Col>\n      </Row>\n      <Row>\n        <Col className='maindiv'>\n          <ListGroup variant='flush'>\n            {brewery.beers.map(b =>\n              <ListGroup.Item key={b.id}>\n                  <NavLink to={`/beers/${b.id}`} >{b.name} {b.abv} %</NavLink>\n              </ListGroup.Item>\n            )}\n          </ListGroup>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default Brewery","import React from 'react'\nimport { Row, Col, Jumbotron, Container, Badge } from 'react-bootstrap'\nimport ResourceFeed from './ResourceFeed'\n\nconst Beer = ({ beer, ratings }) => {\n  \n  if (!beer) {\n    return null\n  }\n\n  const score = (r) => r.overall + r.aroma + r.taste + r.mouthfeel + r.appearance\n  const average = () => ratings.reduce((sum, r) => sum + score(r), 0) / ratings.length\n\n  const showRatings = () =>\n    <>\n    <Row className='mb-4'>\n      <Col className='text-center'>\n        <h6>{ratings.length} ratings with average score <Badge variant='secondary'>{average().toFixed(1)}/50</Badge></h6>\n      </Col>\n    </Row>\n    <Row>\n      <Col className='text-center'>\n        <h3>Ratings</h3>\n      </Col>\n    </Row>\n    <ResourceFeed resources={ratings} resource='rating' />\n  </>\n\n  return (\n    <Container fluid>\n      <Row>\n        <Jumbotron as={Col} className='text-center'>\n          <h2>{beer.name} {beer.abv} %</h2>\n          <h5>{beer.brewery.name}</h5>\n        </Jumbotron>\n      </Row>\n      {ratings.length > 0\n        ? showRatings()\n        : <h6 className='text-center'>No ratings for this beer</h6>\n      }\n    </Container>\n  )\n}\n\nexport default Beer","import React from 'react'\nimport { Row, Col, Jumbotron, Container } from 'react-bootstrap'\n\nconst About = () => {\n  return (\n    <Container fluid>\n      <Row>\n        <Jumbotron as={Col} className='text-center'>\n            <h2>About Bottlestash</h2>\n        </Jumbotron>\n      </Row>\n      <Row>\n        <Col className='maindiv'>\n          <p>\n            Bottlestash is my (Miika Somero) course project for University of\n            Helsinki course <a href='https://fullstackopen.com/' >Full Stack Open 2019</a>.\n          </p>\n          <p>\n            Project is about rehearsing web development with React and Node.js. See source code\n            and documentation from my <a href='https://github.com/MiguelSombrero/bottlestash-app-backend' >Github</a> page\n          </p>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default About","import { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nconst ScrollToTop = ({ children, location: { pathname } }) => {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n  \n  return children || null;\n}\n\nexport default withRouter(ScrollToTop)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { setUserToState } from './reducers/loginReducer'\nimport { getAllUsers } from './reducers/usersReducer'\nimport { getAllBreweries } from './reducers/breweriesReducer'\nimport { getAllBeers } from './reducers/beersReducer'\nimport { getAllRatings } from './reducers/ratingsReducer'\nimport { getAllBottles } from './reducers/bottlesReducer'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport Login from './components/Login'\nimport Home from './components/Home'\nimport Navigation from './components/Navigation'\nimport Register from './components/Register'\nimport Stash from './components/Stash'\nimport Footer from './components/Footer'\nimport AddBottle from './components/AddBottle'\nimport Notification from './components/Notification'\nimport Rate from './components/Rate'\nimport Profile from './components/Profile'\nimport SearchResults from './components/SearchResults'\nimport Brewery from './components/Brewery'\nimport Beer from './components/Beer'\nimport About from './components/About'\nimport ScrollToTop from './components/ScrollToTop'\nimport ResourceFeed from './components/ResourceFeed'\n\nimport './App.css'\n\nconst App = (props) => {\n\n  useEffect(() => {\n    const loggedUser = window.localStorage.getItem('loggedBottlestashUser')\n    if (loggedUser) {\n      props.setUserToState(JSON.parse(loggedUser))\n    }\n  }, [])\n\n  useEffect(() => {\n    props.getAllUsers()\n  }, [])\n\n  useEffect(() => {\n    props.getAllBreweries()\n  }, [])\n\n  useEffect(() => {\n    props.getAllBeers()\n  }, [])\n\n  useEffect(() => {\n    props.getAllRatings()\n  }, [])\n\n  useEffect(() => {\n    props.getAllBottles()\n  }, [])\n\n  const userById = (id) => \n    props.users.find(u => u.id === id)\n\n  const breweryById = (id) =>\n    props.breweries.find(b => b.id === id)\n\n  const beerById = (id) =>\n    props.beers.find(b => b.id === id)\n\n  const ratingsByUserId = (id) =>\n    props.ratings.filter(r => r.user.id === id)\n\n  const ratingsByBeerId = (id) =>\n    props.ratings.filter(r => r.beer.id === id)\n\n  const loggedUser = () =>\n    !props.user ? null : props.users.find(user => user.username === props.user.username)\n\n  return (\n    <>\n      <BrowserRouter>\n        <ScrollToTop />\n        <Navigation user={loggedUser()} />\n        <Notification />\n\n        <Route\n          exact path='/'\n          render={() => \n            <Home\n              user={props.user}\n              users={props.users}\n              bottles={props.bottles}\n              ratings={props.ratings}\n            />\n          }\n        />\n        <Route\n          exact path='/login'\n          render={() => <Login />}\n        />\n        <Route\n          exact path='/register'\n          render={() => <Register />}\n        />\n        <Route\n          exact path='/about'\n          render={() => <About />}\n        />\n        <Route\n          exact path='/search'\n          render={() => <SearchResults /> }\n        />\n        <Route\n            exact path='/breweries/:id/'\n            render={({ match }) => \n              <Brewery\n                brewery={breweryById(match.params.id)}\n              />\n            }\n          />\n        <Route\n          exact path='/beers/:id/'\n          render={({ match }) => \n            <Beer\n              beer={beerById(match.params.id)}\n              ratings={ratingsByBeerId(match.params.id)}\n            />\n          }\n        />\n\n        {props.user &&\n        <>  \n          <Route\n            exact path='/bottles'\n            render={() =>\n              <AddBottle\n                breweries={props.breweries}\n                beers={props.beers}\n                user={props.user}\n              />\n            }\n          />\n          <Route\n            exact path='/users/:id/ratings'\n            render={({ match }) =>\n              <ResourceFeed\n                resources={ratingsByUserId(match.params.id)}\n                resource='rating'\n              />\n            }\n          />\n          <Route\n            exact path='/rate'\n            render={(props) => <Rate {...props} /> }\n          />\n          <Route\n            exact path='/profile'\n            render={() => <Profile user={loggedUser()} /> }\n          />\n          <Route\n            exact path='/users/:id/stash'\n            render={({ match }) => \n              <Stash\n                userToView={userById(match.params.id)}\n                user={props.user}\n              />\n            }\n          />\n        </>\n        }\n        \n        <Footer />\n      </BrowserRouter>\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    users: state.users,\n    breweries: state.breweries,\n    beers: state.beers,\n    bottles: state.bottles,\n    ratings: state.ratings\n  }\n}\n\nconst mapDispatchToProps = {\n  setUserToState,\n  getAllUsers,\n  getAllBreweries,\n  getAllBeers,\n  getAllRatings,\n  getAllBottles\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport loginReducer from './reducers/loginReducer'\nimport usersReducer from './reducers/usersReducer'\nimport beersReducer from './reducers/beersReducer'\nimport breweriesReducer from './reducers/breweriesReducer'\nimport notificationReducer from './reducers/notificationReducer'\nimport ratingsReducer from './reducers/ratingsReducer'\nimport bottlesReducer from './reducers/bottlesReducer'\nimport filterReducer from './reducers/filterReducer'\n\nconst reducer = combineReducers({\n  user: loginReducer,\n  users: usersReducer,\n  beers: beersReducer,\n  breweries: breweriesReducer,\n  notification: notificationReducer,\n  ratings: ratingsReducer,\n  bottles: bottlesReducer,\n  filter: filterReducer\n})\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store} >\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}